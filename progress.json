[
  {
    "id": "45772579",
    "title": "Ubuntu Introduces Architecture Variants",
    "url": "https://lwn.net/Articles/1044383/",
    "summary": "This LWN.net article announces that Ubuntu 25.10 introduces \"architecture variants,\" allowing packages to be built and optimized for specific x86-64 architecture levels, such as x86-64-v3. This approach, championed by Michael Hudson-Doyle, provides performance improvements for modern hardware while avoiding the forced obsolescence of older systems, unlike RHEL's decision to drop x86-64-v2 support.\n\nUsers can opt-in to utilize the optimized x86-64-v3 packages. However, the comments section reveals concerns about the costs associated with this approach. These include increased storage requirements for repositories and mirrors, longer build times due to building multiple variants, and potential complications related to support and binary mixing. Some commentators point out that RHEL/Fedora chose not to implement similar variants due to these infrastructure and support burdens, viewing a clean break as preferable despite the impact on legacy hardware users. The overall sentiment leans toward appreciating the flexibility of Ubuntu's approach but acknowledges the potential challenges in terms of resources, maintenance, and support complexity.\n",
    "chinese_title": "Ubuntu 推出架构变体",
    "chinese_summary": "Ubuntu 25.10引入“架构变体”，允许针对特定x86-64架构级别（如x86-64-v3）构建和优化软件包。这种由Michael Hudson-Doyle倡导的方法为现代硬件提供性能改进，同时避免像RHEL放弃x86-64-v2支持那样强制淘汰旧系统。\n\n用户可以选择使用优化的x86-64-v3软件包。然而，评论区显示了对该方法相关成本的担忧，包括仓库和镜像的存储需求增加、构建多个变体导致的构建时间延长，以及与支持和二进制混合相关的潜在复杂性。一些评论员指出，RHEL/Fedora由于这些基础设施和支持负担而选择不实施类似的变体，认为彻底的决裂更为可取，尽管会对遗留硬件用户产生影响。总体情绪倾向于赞赏Ubuntu方法的灵活性，但也承认其在资源、维护和支持复杂性方面的潜在挑战。"
  },
  {
    "id": "45772347",
    "title": "Nix Derivation Madness",
    "url": "https://fzakaria.com/2025/10/29/nix-derivation-madness",
    "summary": "This article explores surprising aspects of Nix's package system, focusing on fixed-output derivations (FODs) and their impact on dependency graphs. The author initially encounters a situation where a Ruby binary exists but its corresponding derivation file isn't available on their system or in the NixOS cache.\n\nThe investigation reveals that FODs, while producing consistent outputs for a given hash, can introduce unexpected churn in derivations. Changes to a FOD's attributes, like adding \"garbage,\" alter its derivation path (.drv file) without affecting the final output. This means derivations depending on the FOD also get new .drv paths, even if their output remains the same. If the output was previously cached, the link to the updated .drv is lost, creating a discrepancy.\n\nFurthermore, the author demonstrates a scenario where two FODs with the *same* output can be used as inputs to another derivation. Remarkably, one of these inputs can be *removed* from the derivation's JSON representation, and the resulting modified derivation will still produce the same output. This highlights a many-to-one relationship between derivations and outputs, allowing seemingly different derivations to yield identical results and showcasing the complex dynamics introduced by fixed-output derivations. The article emphasizes that understanding FODs is crucial for comprehending Nix's behavior and potential pitfalls related to dependency management and caching.\n",
    "chinese_title": "Nix 衍生品疯狂",
    "chinese_summary": "本文探讨了Nix包管理系统令人惊讶的方面，重点关注固定输出派生(FOD)及其对依赖关系图的影响。作者最初遇到一种情况：Ruby二进制文件存在，但其对应的派生文件在他们的系统或NixOS缓存中不可用。\n\n调查表明，FOD虽然为给定哈希生成一致的输出，但可能会在派生中引入意外的变动。对FOD属性的更改，例如添加“垃圾”，会改变其派生路径（.drv文件），而不会影响最终输出。这意味着依赖于FOD的派生也会获得新的.drv路径，即使它们的输出保持不变。如果输出之前被缓存，则到更新后的.drv的链接会丢失，从而产生差异。\n\n此外，作者展示了一个场景：两个具有*相同*输出的FOD可以用作另一个派生的输入。值得注意的是，可以从派生的JSON表示中*删除*其中一个输入，并且修改后的派生仍然会产生相同的输出。这突出了派生和输出之间的多对一关系，允许看似不同的派生产生相同的结果，并展示了固定输出派生引入的复杂动态。文章强调，理解FOD对于理解Nix的行为以及与依赖管理和缓存相关的潜在陷阱至关重要。"
  },
  {
    "id": "45771636",
    "title": "Attention lapses due to sleep deprivation due to flushing fluid from brain",
    "url": "https://news.mit.edu/2025/your-brain-without-sleep-1029",
    "summary": "This MIT News article reports on research revealing a connection between attention lapses after sleep deprivation and cerebrospinal fluid (CSF) flow in the brain. Researchers found that momentary failures of attention, often described as \"zoning out,\" coincide with waves of CSF flowing *out* of the brain, a process usually reserved for sleep where it removes waste.\n\nThe study, published in *Nature Neuroscience*, involved sleep-deprived and well-rested participants performing attentional tasks while undergoing fMRI and EEG monitoring. Sleep-deprived participants performed worse and, crucially, researchers observed CSF flow coinciding with attention lapses. Specifically, CSF flowed *out* of the brain just as attention failed, and flowed *back in* as attention recovered.\n\nThe researchers hypothesize that a sleep-deprived brain attempts to compensate for the lack of nighttime cleansing by initiating these CSF pulses during wakefulness, but at the cost of impaired attention. They also noted synchronized physiological changes, including decreased heart and breathing rates and pupil constriction, suggesting a unified circuit controlling attention and bodily functions. This circuit may involve the noradrenergic system. The findings suggest that the brain's need for sleep is so critical that it initiates a sleep-like cleansing process even when awake, temporarily compromising attentional performance.\n",
    "chinese_title": "因脑部排液导致睡眠不足，注意力涣散。",
    "chinese_summary": "麻省理工学院新闻报道：研究揭示睡眠不足后注意力涣散与脑脊液流动有关。研究人员发现，注意力短暂失效（常被描述为“走神”）与脑脊液*流出*大脑的波浪式流动相一致，而这种过程通常只发生在睡眠期间，用于清除废物。\n\n该研究发表于《自然·神经科学》，让睡眠不足和睡眠充足的参与者在接受fMRI和脑电图监测的同时执行注意力任务。睡眠不足的参与者表现更差，并且关键的是，研究人员观察到脑脊液流动与注意力涣散同时发生。具体来说，当注意力失效时，脑脊液就*流出*大脑，而当注意力恢复时，脑脊液又*流回*大脑。\n\n研究人员推测，睡眠不足的大脑试图通过在清醒时启动这些脑脊液脉冲来补偿夜间清洁的不足，但代价是损害了注意力。他们还注意到同步的生理变化，包括心率和呼吸频率降低以及瞳孔收缩，这表明存在一个统一的回路控制着注意力和身体功能。该回路可能涉及去甲肾上腺素系统。 研究结果表明，大脑对睡眠的需求非常关键，以至于它甚至会在清醒时启动类似睡眠的清洁过程，从而暂时损害注意力表现。"
  },
  {
    "id": "45773347",
    "title": "AI scrapers request commented scripts",
    "url": "https://cryptography.dog/blog/AI-scrapers-request-commented-scripts/",
    "summary": "Aaron P. MacSween's article details the discovery of AI scrapers requesting JavaScript files that are only referenced within HTML comments (and thus shouldn't be requested by legitimate browsers). These scrapers, likely collecting data for LLM training, exhibit varying levels of sophistication, with some using realistic browser user-agent strings while others use default HTTP library values. MacSween categorizes this behavior as fundamental, meaning fixing it requires the scrapers to fundamentally change their behavior, making it a valuable target for countermeasures.\n\nHe then explores potential responses, ranging from simple IP filtering using fail2ban to more aggressive tactics like serving decompression bombs and poisoning training data. He argues that public disclosure of such scraper behaviors can help others block them.\n\nMacSween advocates for data poisoning, highlighting recent research suggesting that a relatively small number of poisoned samples can significantly compromise LLM training. He views data poisoning as a justified response to the unethical collection of data for training AI models and encourages the use of freely available data-poisoning tools. He acknowledges potential complexities when combining bot blocking with data poisoning but ultimately emphasizes the need for creative and active sabotage of anti-social activities by big tech companies. He concludes by noting that identifying bots based on behavioral quirks is not new, but this specific quirk hasn't been widely discussed.\n",
    "chinese_title": "AI爬虫请求注释脚本",
    "chinese_summary": "Aaron P. MacSween的文章详细描述了人工智能抓取器请求JavaScript文件的发现，这些文件仅在HTML注释中引用（因此不应由合法浏览器请求）。 这些抓取器很可能正在收集用于LLM训练的数据，它们表现出不同程度的复杂性，一些使用真实的浏览器用户代理字符串，而另一些使用默认的HTTP库值。 MacSween将此行为归类为根本性的，这意味着修复它需要抓取器从根本上改变其行为，使其成为有价值的反制目标。\n\n然后，他探讨了潜在的响应，从使用fail2ban进行简单的IP过滤，到更激进的策略，如提供解压炸弹和毒害训练数据。 他认为，公开披露此类抓取器行为可以帮助其他人阻止它们。\n\nMacSween提倡数据投毒，强调最近的研究表明，相对少量的中毒样本可以显著损害LLM训练。 他认为数据投毒是对不道德收集数据以训练人工智能模型的合理回应，并鼓励使用免费的数据投毒工具。 他承认在将机器人拦截与数据投毒结合使用时可能存在复杂性，但最终强调需要创造性和积极地破坏大型科技公司的反社会活动。 他最后指出，基于行为怪癖识别机器人并不新鲜，但这种特定的怪癖尚未被广泛讨论。"
  },
  {
    "id": "45771796",
    "title": "Sustainable memristors from shiitake mycelium for high-frequency bioelectronics",
    "url": "https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0328965",
    "summary": "This article explores the potential of shiitake mushrooms (Lentinula edodes) as a sustainable and robust material for creating memristors for neuromorphic computing. The authors demonstrate that mycelial networks from shiitake can be interfaced with electrodes to create functional memristors that can be grown, trained, and preserved. These fungal memristors exhibit functionality at frequencies up to 5.85 kHz with high accuracy (90±1%).\n\nThe research highlights the advantages of using fungal materials over traditional semiconductor-based memristors, including sustainability, biodegradability, and potential for low power consumption. Unlike conventional memristor production which requires rare-earth minerals and costly fabrication processes, shiitake mushrooms offer a scalable, eco-friendly alternative. The natural composition and adaptability of fungi allow for more naturalistic models for neural networks.\n\nFurthermore, the article emphasizes the radiation resistance of shiitake mushrooms, making them a viable option for aerospace applications where conventional electronics might be compromised. The authors suggest that this resilience is due to compounds like lentinan and the fungi's general adaptability. By demonstrating the potential of fungal computers, the study bridges bioelectronics and unconventional computing, offering a novel approach to neuromorphic hardware development.\n",
    "chinese_title": "香菇菌丝制备的可持续忆阻器用于高频生物电子学",
    "chinese_summary": "本文探讨了香菇（Lentinula edodes）作为一种可持续且稳健的材料，用于创建神经形态计算忆阻器的潜力。作者证明，香菇菌丝网络可以与电极连接，从而创建可以生长、训练和保存的功能性忆阻器。这些真菌忆阻器在高达5.85 kHz的频率下表现出功能性，且精度很高（90±1%）。\n\n该研究强调了使用真菌材料相对于传统半导体忆阻器的优势，包括可持续性、生物降解性和低功耗潜力。与需要稀土矿物和昂贵制造工艺的传统忆阻器生产不同，香菇提供了一种可扩展、环保的替代方案。真菌的天然成分和适应性为神经网络提供了更自然的模型。\n\n此外，本文强调了香菇的耐辐射性，使其成为航空航天应用的可行选择，在这些应用中，传统电子设备可能会受到损害。作者认为，这种韧性归因于香菇多糖等化合物以及真菌的普遍适应性。通过展示真菌计算机的潜力，该研究连接了生物电子学和非常规计算，为神经形态硬件开发提供了一种新颖的方法。"
  },
  {
    "id": "45767916",
    "title": "AMD Could Enter ARM Market with Sound Wave APU Built on TSMC 3nm Process",
    "url": "https://www.guru3d.com/story/amd-enters-arm-market-with-sound-wave-apu-built-on-tsmc-3nm-process/",
    "summary": "AMD is reportedly developing its first ARM-based APU, codenamed \"Sound Wave,\" aiming to compete with Qualcomm's Snapdragon X Elite in the low-power computing market. Leaked information suggests it will be manufactured on TSMC's 3nm process and target a 5W-10W TDP range.\n\n\"Sound Wave\" is designed with a BGA-1074 package suitable for mobile devices and is rumored to power future Microsoft Surface products in 2026. It features a 2+4 hybrid core design (two performance cores and four efficiency cores), 4MB of L3 cache, and 16MB of MALL cache inspired by AMD's GPU Infinity Cache.\n\nThe APU integrates four RDNA 3.5 compute units for light gaming and machine learning acceleration, along with a 128-bit LPDDR5X-9600 memory controller and 16GB of onboard RAM, reflecting the trend of unified memory in ARM SoCs. It also includes AMD's fourth-generation AI engine for on-device inference tasks.\n\nWhile AMD previously experimented with ARM, \"Sound Wave\" represents a renewed and more strategic approach to entering the ARM market, leveraging its strengths in graphics and AI. Production is expected to begin in late 2025, with commercial devices anticipated in 2026.\n",
    "chinese_title": "AMD或将携台积电3纳米工艺声波APU进军ARM市场",
    "chinese_summary": "据报道，AMD正在开发其首款基于ARM的APU，代号“声波”，旨在低功耗计算市场与高通骁龙X Elite竞争。泄露的信息显示，它将采用台积电的3纳米工艺制造，目标TDP范围为5W-10W。\n\n“声波”采用BGA-1074封装，适用于移动设备，并且据传将为2026年未来的微软Surface产品提供动力。它采用2+4混合核心设计（两个性能核心和四个效率核心），4MB的三级缓存，以及受AMD GPU Infinity Cache启发的16MB MALL缓存。\n\n该APU集成了四个RDNA 3.5计算单元，用于轻量级游戏和机器学习加速，以及一个128位LPDDR5X-9600内存控制器和16GB的板载RAM，反映了ARM SoC中统一内存的趋势。它还包括AMD的第四代AI引擎，用于设备上的推理任务。\n\n虽然AMD之前曾尝试过ARM，“声波”代表着一种新的、更具战略意义的方式进入ARM市场，利用其在图形和AI方面的优势。预计将于2025年末开始生产，商业设备预计将于2026年上市。"
  },
  {
    "id": "45774198",
    "title": "Pangolin (YC S25) Is Hiring a Full Stack Software Engineer (Open-Source)",
    "url": "https://docs.pangolin.net/careers/software-engineer-full-stack",
    "summary": "Pangolin (YC S25) is hiring a Full Stack Software Engineer to help build and maintain their identity-aware remote access platform. The platform focuses on secure reverse tunneling and is evolving towards zero-trust networking, emphasizing open-source principles and self-hosting.\n\nThe role involves working on the core Pangolin container, including UI, APIs, schemas, and more. The engineer will design, develop, and test features for the frontend (NextJS, Tailwind, ShadCN) and backend (Express APIs, SQL, Drizzle ORM), as well as work on processes like CICD and internal tooling. A key responsibility is engaging with the open-source community on platforms like GitHub and Discord.\n\nPangolin seeks candidates with 3+ years of experience, strong TypeScript skills, and some Go experience. Familiarity with web identity (OAuth2, OIDC, SSO), cloud infrastructure (Docker, Kubernetes, AWS), and basic networking concepts is desired. They must be SF based or willing to relocate.\n\nThe position offers a salary of $125k - $160k plus 0.5% - 1.5% equity, relocation assistance, unlimited PTO, and a hybrid work environment. The hiring process involves an initial interview, a paid open-source project contribution, and onboarding. Interested candidates are asked to connect with Owen on LinkedIn, send their resume/CV, and highlight relevant GitHub projects.\n",
    "chinese_title": "穿山甲 (YC S25) 正在招聘全栈软件工程师（开源）",
    "chinese_summary": "穿山甲 (YC S25) 正在招聘全栈软件工程师，以帮助构建和维护其身份感知远程访问平台。该平台专注于安全反向隧道，并正在向零信任网络演进，强调开源原则和自托管。\n\n该职位涉及核心穿山甲容器的工作，包括 UI、API、模式等。工程师将设计、开发和测试前端 (NextJS、Tailwind、ShadCN) 和后端 (Express API、SQL、Drizzle ORM) 的功能，以及从事 CICD 和内部工具等流程。一项关键职责是在 GitHub 和 Discord 等平台上与开源社区互动。\n\n穿山甲希望招聘具有 3 年以上经验、强大的 TypeScript 技能以及一些 Go 经验的候选人。熟悉 Web 身份 (OAuth2、OIDC、SSO)、云基础设施 (Docker、Kubernetes、AWS) 和基本网络概念者优先。他们必须位于旧金山或愿意搬迁。\n\n该职位提供 12.5 万美元至 16 万美元的薪资，外加 0.5% 至 1.5% 的股权、搬迁补助、无限带薪休假以及混合办公环境。招聘流程包括初步面试、带薪开源项目贡献和入职。有意者请在 LinkedIn 上与 Owen 联系，发送简历/CV，并突出显示相关的 GitHub 项目。"
  },
  {
    "id": "45773974",
    "title": "Another European agency shifts off US Tech as digital sovereignty gains steam",
    "url": "https://www.zdnet.com/article/another-european-agency-ditches-big-tech-as-digital-sovereignty-movement-gains-steam/",
    "summary": "The article details a growing trend in Europe where government agencies and organizations are shifting away from US-based Big Tech providers like Microsoft towards European-based, open-source solutions to achieve digital sovereignty. A prime example is Austria's Ministry of Economy migrating 1,200 employees to a Nextcloud-based platform for data security and control. This move is motivated by a desire to protect sensitive data, comply with GDPR, and mitigate risks associated with foreign surveillance.\n\nThe EuroStack Initiative, a non-profit foundation, is encouraging this trend by promoting European tech solutions. While the US government has expressed concern about this shift, some migrations, like the one at BMWET, have been successful, integrating open-source solutions alongside existing systems like Teams.\n\nHowever, the article also cautions against poorly planned transitions, citing the Austrian Ministry of Justice's problematic shift to LibreOffice, resulting in incompatible document formats and user frustration. The key takeaway is that while open-source solutions offer benefits like enhanced security and control, careful planning and execution are crucial for a successful migration from proprietary software. The article concludes that well-executed sovereign cloud solutions can be practical and user-friendly in the public sector.\n",
    "chinese_title": "又一欧洲机构摆脱美国科技，数字主权势头渐起",
    "chinese_summary": "欧洲政府机构和组织正逐渐摆脱对微软等美国大型科技供应商的依赖，转而采用欧洲本土的开源解决方案，以实现数字主权。例如，奥地利经济部正将其1200名员工迁移到基于Nextcloud的平台，以保障数据安全和控制。此举旨在保护敏感数据、遵守GDPR，并降低与外国监控相关的风险。\n\n非营利组织EuroStack倡议通过推广欧洲科技解决方案来鼓励这一趋势。尽管美国政府对此转变表示担忧，但一些迁移，例如奥地利经济部和交通部（BMWET）的迁移，已取得成功，将开源解决方案与Teams等现有系统相结合。\n\n然而，文章也警告称，仓促的过渡可能会带来问题。奥地利司法部向LibreOffice的过渡就出现了问题，导致文档格式不兼容和用户不满。关键在于，虽然开源解决方案具有增强安全性和控制等优势，但周密的计划和执行对于从专有软件成功迁移至关重要。文章总结道，精心设计的自主云解决方案在公共部门具有实用性和用户友好性。"
  },
  {
    "id": "45767725",
    "title": "John Carmack on mutable variables",
    "url": "https://twitter.com/id_aa_carmack/status/1983593511703474196",
    "summary": "There's no article content provided. The text is a generic error message from X (formerly Twitter) indicating that JavaScript is disabled in the user's browser, preventing the page from loading properly. Therefore, there's nothing to summarize regarding John Carmack or mutable variables.\n\nThe provided text only contains:\n\n*   A title suggesting the topic is about John Carmack's views on mutable variables.\n*   An error message indicating JavaScript is disabled, making the page inaccessible.\n*   Standard website footer information such as terms of service, privacy policy, etc.\n\nWithout the actual content of the article, it is impossible to provide a summary.\n",
    "chinese_title": "约翰·卡马克谈可变变量",
    "chinese_summary": "未提供文章内容。文本仅包含：\n\n*   一个标题暗示主题是关于约翰·卡马克对可变变量的看法。\n*   一个错误信息，表明JavaScript已禁用，导致页面无法访问。\n*   标准的网站页脚信息，例如服务条款、隐私政策等。\n\n由于没有文章的实际内容，因此无法提供摘要。"
  },
  {
    "id": "45703860",
    "title": "Wheels for free-threaded Python now available for psutil",
    "url": "https://gmpy.dev/blog/2025/wheels-for-free-threaded-python-now-available-in-psutil",
    "summary": "This article announces the availability of pre-compiled \"wheel\" packages for `psutil` that support free-threaded Python, starting with version 7.1.2. Free-threaded Python, available since Python 3.13, disables the Global Interpreter Lock (GIL), allowing for true parallel execution of Python code on multi-core processors.\n\nThe development of these wheels required significant internal refactoring of `psutil`'s C code, largely driven by community contributions. The author specifically thanks Lysandros Nikolaou for his work.\n\nThe article highlights that while adoption of free-threaded wheels is growing, it's still limited among popular Python packages with C extensions.\n\nProviding wheels simplifies installation for users, especially for packages like `psutil` that rely heavily on C code and have complex build requirements, avoiding the need for users to install C compilers and related tools.\n\nHowever, the article also notes a challenge for library authors: the lack of universal free-threaded wheels. Separate wheels must be built for each Python version (e.g., 3.13 and 3.14) and platform, significantly increasing the number of files to distribute and slowing down the testing process. Two proposals, PEP 803 and PEP 809, are mentioned as potential solutions in Python 3.15 by enabling universal wheels to support multiple Python versions.\n\nFinally, it provides instructions on how to install the free-threaded version of `psutil` using `pip install psutil --only-binary=:all:`.\n",
    "chinese_title": "psutil 的免线程 Python Wheels 包现已可用",
    "chinese_summary": "本文宣布自 7.1.2 版本起，`psutil` 提供支持自由线程 Python 的预编译 “wheel” 包。自由线程 Python 自 Python 3.13 起可用，禁用了全局解释器锁（GIL），从而允许在多核处理器上真正并行执行 Python 代码。\n\n这些 wheel 包的开发需要对 `psutil` 的 C 代码进行大量的内部重构，这主要得益于社区的贡献。作者特别感谢 Lysandros Nikolaou 的工作。\n\n本文强调，虽然自由线程 wheel 包的应用正在增长，但它在带有 C 扩展的流行 Python 包中仍然有限。\n\n提供 wheel 包简化了用户的安装过程，特别是对于像 `psutil` 这样严重依赖 C 代码且具有复杂构建要求的包，避免了用户安装 C 编译器和相关工具的需求。\n\n然而，本文也指出了库作者面临的一个挑战：缺乏通用的自由线程 wheel 包。必须为每个 Python 版本（例如 3.13 和 3.14）和平台构建单独的 wheel 包，这大大增加了要分发的文件数量并减慢了测试过程。文中提到了两个提案 PEP 803 和 PEP 809，它们有望在 Python 3.15 中通过启用通用 wheel 包来支持多个 Python 版本，从而解决此问题。\n\n最后，它提供了使用 `pip install psutil --only-binary=:all:` 安装自由线程版本的 `psutil` 的说明。"
  },
  {
    "id": "45772224",
    "title": "Nim 2.2.6",
    "url": "https://nim-lang.org//blog/2025/10/31/nim-226.html",
    "summary": "Nim version 2.2.6, a patch release for the stable Nim 2.2, has been released on October 31, 2025. This release contains 141 commits, providing bug fixes and performance improvements. Key highlights include improved stability of exception handling with async and a compiler optimization that produces move operations instead of copies for `return obj.field`.\n\nInstallation is available through OS package managers or using `choosenim`. The article recommends updating choosenim to the latest version (v.0.8.16) and then updating Nim.\n\nThe release addresses numerous bug fixes, covering issues related to memory management, code generation, compiler errors, and VM behavior across different backends (C, JavaScript). Specific fixes address problems with destroy hooks, lexical scoping, global variable initialization, cycle collection, asyncnet, closure iterators, generic types, lent strings, open arrays, static params, range checking, deques, and more. A full changelog is available via a provided link.\n",
    "chinese_title": "Nim 2.2.6",
    "chinese_summary": "Nim 2.2.6发布，修复Bug并提升性能\n\nNim 2.2稳定版的补丁版本2.2.6已于2025年10月31日发布。此版本包含141个提交，提供了Bug修复和性能改进。主要亮点包括改进了异步处理中异常处理的稳定性，以及编译器优化，可为`return obj.field`生成移动操作而不是复制操作。\n\n可以通过操作系统软件包管理器或使用`choosenim`进行安装。文章建议将choosenim更新到最新版本（v.0.8.16），然后再更新Nim。\n\n该版本解决了大量的Bug修复，涵盖了与内存管理、代码生成、编译器错误以及不同后端（C、JavaScript）的VM行为相关的问题。具体修复解决了销毁钩子、词法作用域、全局变量初始化、循环收集、asyncnet、闭包迭代器、泛型类型、借用字符串、开放数组、静态参数、范围检查、双端队列等问题。完整的更新日志可通过提供的链接获取。"
  },
  {
    "id": "45772153",
    "title": "Rotating Workforce Scheduling in MiniZinc",
    "url": "https://zayenz.se/blog/post/rotating-workforce-scheduling/",
    "summary": "This article demonstrates how to build a Rotating Workforce Scheduling (RWS) model in MiniZinc, starting from a basic implementation and progressively adding constraints to make it more realistic and usable. RWS involves creating a set of weekly schedules for a group of workers, where each worker rotates through a different schedule each week, ensuring fairness. The model considers day (D), evening (E), night (N) shifts, and off days.\n\nThe basic model defines data structures for days, shifts, employees, and shift requirements. It uses variables to represent the schedule and ensures that the required number of people are working each shift daily using `global_cardinality`.  However, the initial solution is often unusable due to long stretches of work without rest.\n\nThe article then adds more realistic labor rules:\n\n1.  **Consecutive Days Off:** Enforces at least two consecutive days off each week using a `regular` constraint with a regular expression.\n2.  **Maximum Days Without Rest:** Limits the maximum number of consecutive workdays to five using auxiliary boolean variables and the `sliding_sum` constraint.\n3.  **Weekend Rest Requirements:** Ensures workers have at least one weekend off every three weeks, using auxiliary variables indicating free weekends and `sliding_sum`.\n4.  **Night Shift Limits:** Restricts night shifts to situations where there is rest both before and after the shift, and limits consecutive night shifts to a maximum of three using a deterministic finite state automaton and the `regular` constraint.\n\nEach added rule refines the schedule, making it more practical and addressing common scheduling concerns. The article also provides MiniZinc code snippets, example data, and solver statistics, illustrating the impact of each constraint on the solution and solving time.  The final model produces a schedule that is more balanced and adheres to typical workforce regulations.\n",
    "chinese_title": "MiniZinc中的轮换劳动力调度",
    "chinese_summary": "本文演示如何在MiniZinc中构建轮班排班（RWS）模型，从基本实现开始，逐步添加约束，使其更具现实性和可用性。RWS涉及为一组工人创建一套每周班表，其中每个工人每周轮换不同的班表，以确保公平性。该模型考虑了白班（D）、晚班（E）、夜班（N）和休息日。\n\n基本模型定义了日期、班次、员工和班次需求的数据结构。它使用变量来表示班表，并使用`global_cardinality`确保每天每个班次都有所需的人数工作。但是，最初的解决方案通常由于长时间工作而没有休息而无法使用。\n\n然后，本文添加了更实际的劳动规则：\n\n1.  **连续休息日：** 使用带有正则表达式的`regular`约束强制执行每周至少有两天连续休息。\n2.  **最长无休天数：** 使用辅助布尔变量和`sliding_sum`约束，将最长连续工作日限制为五天。\n3.  **周末休息\n\n每个添加的规则都完善了班表，使其更实用并解决了常见的排班问题。本文还提供了MiniZinc代码片段、示例数据和求解器统计信息，说明了每个约束对解决方案和求解时间的影响。最终模型生成了一个更加平衡并符合典型劳动力法规的班表。"
  },
  {
    "id": "45761445",
    "title": "Affinity Studio now free",
    "url": "https://www.affinity.studio/get-affinity",
    "summary": "Affinity Studio is now free, brought to you by Canva. This all-in-one creative app offers tools for design, image editing, and page layout without any cost. To download, you'll need to sign in with a Canva account (free or paid). The app provides studio-grade tools, customizable workspaces, non-destructive editing, and pixel-perfect export options.\n\nWith Affinity, you get access to professional tools for design, photo editing, and page layout, all at no charge. Canva premium users can unlock Canva AI tools within Affinity. Key features include vector design, live photo editing, advanced page layout, and compatibility with various file formats.\n\nThe new Affinity version includes features like Image Trace, ePub support, mesh gradients, and customizable studios. While Affinity V2 licenses remain valid, they won't receive future updates. For the best experience, Canva recommends using the new Affinity app.\n\nAffinity supports Windows and macOS, with an iPad version coming soon. It is optimized for Apple silicon. The app can open files from older Affinity versions but not vice versa. It supports multiple languages and allows installation on multiple devices.\n\nYou need to be online to download, activate and update your license but the main functions are available offline. A Canva premium plan is needed to unlock AI features. Contact Canva Enterprise or Education to get Affinity for large organizations or educational institutions, respectively.\n",
    "chinese_title": "Affinity Studio 现已免费",
    "chinese_summary": "Affinity Studio 现已免费，由 Canva 荣誉呈现。这款一体化创意应用提供设计、图像编辑和页面排版工具，无需任何费用。下载需要使用 Canva 帐户（免费或付费）登录。该应用提供工作室级别的工具、可自定义的工作区、无损编辑和像素完美的导出选项。\n\n使用 Affinity，您可以免费获得专业的设计、照片编辑和页面排版工具。Canva 高级用户可以在 Affinity 中解锁 Canva AI 工具。主要功能包括矢量设计、实时照片编辑、高级页面排版以及与各种文件格式的兼容性。\n\n新的 Affinity 版本包括图像追踪、ePub 支持、网格渐变和可自定义的工作室等功能。虽然 Affinity V2 许可证仍然有效，但不会收到未来的更新。为了获得最佳体验，Canva 建议使用新的 Affinity 应用。\n\nAffinity 支持 Windows 和 macOS，iPad 版本即将推出。它针对 Apple 芯片进行了优化。该应用可以打开旧版 Affinity 文件，但反之则不然。它支持多种语言，并允许在多个设备上安装。\n\n您需要在线下载、激活和更新您的许可证，但主要功能可离线使用。需要 Canva 高级计划才能解锁 AI 功能。联系 Canva 企业版或教育版，分别为大型组织或教育机构获取 Affinity。"
  },
  {
    "id": "45771843",
    "title": "Git CLI tool for intelligently creating branch names",
    "url": "https://github.com/ytreister/gibr",
    "summary": "`gibr` is a CLI tool designed to streamline Git branch creation by integrating with issue trackers. It automatically generates consistent and descriptive branch names based on issue details, improving workflow and team collaboration.\n\n**Key features and usage:**\n\n*   **Issue Tracking Integration:** Supports GitHub, GitLab, Jira, and Linear (Monday.com coming soon).\n*   **Branch Name Generation:** Creates branch names based on a configurable format, using placeholders like issue type, issue ID, and title.\n*   **Commands:**\n    *   `gibr issues`: Lists open issues from your configured tracker.\n    *   `gibr <issue_id>` or `gibr create <issue_id>`: Creates and checks out a branch for a specific issue.\n    *   `gibr init`: Guides you through setting up the `.gibrconfig` file with your issue tracker credentials and settings.\n    *   `gibr alias`: Creates Git aliases (like `git create`) for simplified command usage.\n*   **Installation:** Install via `uv pip install gibr` or `pip install gibr`.\n*   **Configuration:** Uses a `.gibrconfig` file to store settings, including the branch name format and issue tracker details.\n*   **Git Aliases:** Enables extending Git CLI with Gibr commands for convenience.\n*   **Special Jira handling:** It can automatically pick up configured Jira project keys.\n\n`gibr` aims to improve developer workflow by automating branch naming, ensuring consistency, and linking branches directly to issues.\n",
    "chinese_title": "智能创建分支名称的Git CLI工具",
    "chinese_summary": "`gibr` 是一个命令行工具，旨在通过与问题跟踪器集成来简化 Git 分支的创建。它基于问题详情自动生成一致且描述性强的分支名称，从而改善工作流程和团队协作。\n\n**主要特性和用法：**\n\n*   **问题跟踪集成：** 支持 GitHub、GitLab、Jira 和 Linear（即将支持 Monday.com）。\n*   **分支名称生成：** 基于可配置的格式创建分支名称，使用诸如问题类型、问题 ID 和标题之类的占位符。\n*   **命令：**\n    *   `gibr issues`: 列出您配置的跟踪器中的未解决问题。\n    *   `gibr <issue_id>` 或 `gibr create <issue_id>`: 为特定问题创建并检出一个分支。\n    *   `gibr init`: 指导您设置包含问题跟踪器凭据和设置的 `.gibrconfig` 文件。\n    *   `gibr alias`: 创建 Git 别名（如 `git create`）以简化命令使用。\n*   **安装：** 通过 `uv pip install gibr` 或 `pip install gibr` 安装。\n*   **配置：** 使用 `.gibrconfig` 文件存储设置，包括分支名称格式和问题跟踪器详细信息。\n*   **Git 别名：** 允许使用 Gibr 命令扩展 Git CLI，以便于使用。\n*   **特殊的Jira处理：** 它可以自动获取配置的Jira项目密钥。\n\n`gibr` 旨在通过自动化分支命名、确保一致性以及将分支直接链接到问题来改善开发人员的工作流程。"
  },
  {
    "id": "45732160",
    "title": "Floppy Disk / Diskettes // retrocmp / retro computing",
    "url": "https://retrocmp.de/fdd/diskette/diskette.htm",
    "summary": "This article provides a comprehensive overview of floppy disks (or diskettes), a key piece of retro computing. It covers various aspects, including sizes (8-inch, 5.25-inch, 3.5-inch, and 3-inch), and the distinction between hard- and soft-sectored disks. 3.5\" and 3\" disks are always soft-sectored, while hard-sectored disks with multiple index holes were used in older, pre-IBM PC systems.\n\nThe article delves into the functionality of index holes, illustrating their different types using 3M disks as examples, and explains how write protect/enable notches functioned differently on 8-inch and 5.25-inch disks. 8-inch disks are write-protected when the notch is covered, while 5.25-inch disks are write-enabled when uncovered.\n\nSpecific examples are provided, highlighting the rarity of hard-sectored 5.25-inch disks, particularly those with 10 sector holes, which were used in systems like Heathkit H89 and North Star Horizon. The article also mentions floppy disks with 16 sector holes and lists the computer systems that utilized them. It also lists examples of 8-inch disks with 32 sector holes.\n\nFinally, the article includes a product list showcasing available 8-inch and 5.25-inch floppy disks from manufacturers like 3M and boeder, and provides links to relevant documents, external resources, and Wikipedia articles for further exploration. It serves as a valuable resource for those interested in the history and technical aspects of floppy disks.\n",
    "chinese_title": "软盘 // 复古计算",
    "chinese_summary": "本文全面概述了软盘（或称磁盘），一种复古计算的关键组成部分。内容涵盖多个方面，包括尺寸（8英寸、5.25英寸、3.5英寸和3英寸），以及硬扇区和软扇区磁盘之间的区别。3.5英寸和3英寸磁盘始终为软扇区，而带有多个索引孔的硬扇区磁盘则用于较旧的、IBM PC之前的系统中。\n\n本文深入探讨了索引孔的功能，以3M磁盘为例说明其不同类型，并解释了8英寸和5.25英寸磁盘上写保护/启用缺口的不同工作方式。8英寸磁盘在缺口被覆盖时受到写保护，而5.25英寸磁盘在未覆盖时启用写入。\n\n本文提供了具体示例，突出了硬扇区5.25英寸磁盘的稀有性，特别是那些具有10个扇区孔的磁盘，这些磁盘用于Heathkit H89和North Star Horizon等系统中。本文还提到了带有16个扇区孔的软盘，并列出了使用它们的计算机系统。同时列出了带有32个扇区孔的8英寸磁盘的示例。\n\n最后，本文包含一个产品列表，展示了来自3M和boeder等制造商提供的8英寸和5.25英寸软盘，并提供了相关文档、外部资源和维基百科文章的链接，以供进一步探索。对于那些对软盘的历史和技术方面感兴趣的人来说，本文是一份宝贵的资源。"
  },
  {
    "id": "45772064",
    "title": "Immutable releases are now generally available on GitHub",
    "url": "https://github.blog/changelog/2025-10-28-immutable-releases-are-now-generally-available/",
    "summary": "GitHub has announced the general availability of immutable releases, enhancing software supply chain security. This feature ensures that once a release is published, its assets and tags are protected from tampering, guaranteeing the software's integrity.\n\nKey features of immutable releases include:\n\n*   **Immutable Assets:** Prevents the addition, modification, or deletion of assets after release, safeguarding against supply chain attacks.\n*   **Tag Protection:** Protects tags associated with immutable releases, preventing deletion or movement.\n*   **Release Attestations:** Provides signed attestations in Sigstore bundle format, allowing for easy verification of authenticity and integrity both on GitHub and in external environments using tools like the GitHub CLI.\n\nImmutability can be enabled at the repository or organization level, automatically applying to all new releases. Existing releases remain mutable unless republished. Disabling the feature does not affect existing immutable releases. The provided documentation outlines how to verify the integrity of immutable releases. GitHub encourages user feedback on the GitHub Community forum.\n",
    "chinese_title": "不可变发布现已在 GitHub 上全面推出",
    "chinese_summary": "GitHub 宣布正式推出不可变版本，增强软件供应链安全。此功能确保版本发布后，其资产和标签受到保护，免受篡改，从而保证软件的完整性。\n\n不可变版本的主要功能包括：\n\n*   **不可变资产：** 防止发布后添加、修改或删除资产，防范供应链攻击。\n*   **标签保护：** 保护与不可变版本关联的标签，防止删除或移动。\n*   **版本证明：** 提供 Sigstore 捆绑格式的签名证明，便于在 GitHub 和外部环境中使用 GitHub CLI 等工具轻松验证真实性和完整性。\n\n可以在存储库或组织级别启用不可变性，自动应用于所有新版本。现有版本保持可变，除非重新发布。禁用此功能不会影响现有的不可变版本。提供的文档概述了如何验证不可变版本的完整性。GitHub 鼓励用户在 GitHub Community 论坛上提供反馈。"
  },
  {
    "id": "45705084",
    "title": "How AI gave me my voice back – an artist's review of Suno Studio",
    "url": "https://blog.andyshand.com/blog/how-ai-gave-me-my-voice-back",
    "summary": "Andy Shand's blog post \"How AI gave me my voice back – an artist's review of Suno Studio\" explores the transformative impact of Suno, an AI music generation platform, on his creative process and artistic expression. Shand, presumably a musician or artist, discusses how Suno has enabled him to overcome creative blocks and rediscover his passion for music.\n\nThe article highlights the ease of use and accessibility of Suno, making it possible for artists of all skill levels to create original music. Shand emphasizes the platform's ability to generate diverse musical styles and genres based on simple text prompts, allowing him to explore uncharted creative territories.\n\nHe elaborates on how Suno functions as a valuable tool for experimentation and ideation, providing a springboard for his own artistic interpretations. Rather than replacing his creative input, Suno augments it, offering fresh perspectives and inspiring new directions.\n\nThe central theme revolves around the idea that AI can be a powerful collaborator, not a competitor, in the creative process. Shand suggests that Suno has unlocked his creative potential, allowing him to express himself musically in ways he hadn't previously imagined, essentially giving him back his \"voice.\" He likely concludes with a positive review of Suno Studio, advocating for its use by other artists seeking to revitalize their creative output.\n",
    "chinese_title": "人工智能如何让我重获声音——一位艺术家对Suno Studio的评测",
    "chinese_summary": "安迪·尚德的博客文章《AI如何让我重获声音——一位艺术家对Suno Studio的评测》探讨了AI音乐生成平台Suno对其创作过程和艺术表达产生的变革性影响。尚德，推测是一位音乐家或艺术家，讨论了Suno如何帮助他克服创作瓶颈，并重新找回对音乐的热情。\n\n文章强调了Suno的易用性和可访问性，使所有技能水平的艺术家都能创作原创音乐。尚德强调了该平台基于简单文本提示生成各种音乐风格和流派的能力，使他能够探索未知的创作领域。\n\n他详细阐述了Suno如何作为实验和构思的宝贵工具，为他自己的艺术诠释提供跳板。Suno并没有取代他的创作投入，而是对其进行了增强，提供了新的视角并激发了新的方向。\n\n中心主题围绕着AI在创作过程中可以成为强大的合作者，而不是竞争对手的观点。尚德认为Suno释放了他的创作潜力，让他能够以以前无法想象的方式进行音乐表达，实际上是让他重获“声音”。他很可能以对Suno Studio的积极评价结束，倡导其他寻求重振创作力的艺术家使用它。"
  },
  {
    "id": "45691697",
    "title": "Bertie the Brain",
    "url": "https://en.wikipedia.org/wiki/Bertie_the_Brain",
    "summary": "Bertie the Brain was one of the earliest video games, a tic-tac-toe playing computer built in Toronto by Josef Kates for the 1950 Canadian National Exhibition. This 13-foot-tall machine allowed attendees to play tic-tac-toe against an AI opponent on a grid of lights, with adjustable difficulty. The player entered moves via a keypad.\n\nKates designed Bertie to showcase his additron tube, a miniature vacuum tube. However, patent issues and the rise of the transistor limited its use to just this machine. Despite its potential claim as the first video game with a visual display, Bertie was disassembled after the exhibition and largely forgotten.\n\nKates, who had worked on radar tubes and helped build the UTEC, created Bertie at the urging of Rogers Majestic to promote the additron tube. The game was a success at the exhibition, with people lining up to play.\n\nGameplay involved players selecting positions on a grid of lit buttons, with moves displayed as X or O lights. The computer responded quickly and was designed to be unbeatable at the highest difficulty.\n\nDespite being featured in Life magazine, Bertie's legacy faded as Kates moved on to other projects. The additron tube's commercial prospects were hindered by patent delays and the rise of transistors. Though not a video game by all definitions due to its use of light bulbs instead of a screen, Bertie remains a significant milestone as one of the first computer-based games with a visual output.\n",
    "chinese_title": "伯蒂大脑",
    "chinese_summary": "伯蒂大脑是早期电子游戏之一，是由约瑟夫·凯茨在多伦多为1950年加拿大国家展览会建造的井字棋电脑。 这台13英尺高的机器允许参观者在灯光网格上与人工智能对手进行井字棋游戏，难度可调。玩家通过键盘输入走法。\n\n凯茨设计伯蒂是为了展示他的加法管，一种微型真空管。 然而，专利问题和晶体管的兴起限制了它仅用于这台机器。 尽管它有可能成为第一个具有视觉显示的电子游戏，但伯蒂在展览后被拆除，并被人们遗忘。\n\n凯茨曾在雷达管上工作并帮助建造了UTEC，他在罗杰斯·马杰斯蒂克的敦促下创造了伯蒂，以推广加法管。 该游戏在展览会上取得了成功，人们排队玩。\n\n游戏玩法包括玩家在发光按钮的网格上选择位置，走法显示为X或O灯。 计算机反应迅速，并且被设计为在最高难度下是不可战胜的。\n\n尽管伯蒂曾在《生活》杂志上刊登，但随着凯茨转向其他项目，它的遗产逐渐消失。 加法管的商业前景受到专利延误和晶体管兴起的阻碍。 尽管由于使用了灯泡而不是屏幕，从所有定义上来说它都不是电子游戏，但伯蒂仍然是作为最早的具有视觉输出的计算机游戏之一的一个重要里程碑。"
  },
  {
    "id": "45774284",
    "title": "Fire TV: Amazon to block piracy apps in the future",
    "url": "https://www.heise.de/en/news/Fire-TV-Amazon-to-block-piracy-apps-in-the-future-10964878.html",
    "summary": "Amazon plans to block the installation of apps that facilitate piracy on Fire TV devices in the future. This move aims to combat the unauthorized streaming and distribution of copyrighted content.\n\nWhile sideloading apps has always been possible on Fire TV, Amazon is implementing measures to make it significantly more difficult, essentially hindering the use of apps designed for accessing pirated content. The specific method of blocking isn't detailed in the article, but it implies Amazon will be taking active steps to prevent the installation or functionality of these apps.\n\nThis decision aligns with Amazon's ongoing efforts to protect intellectual property and comply with copyright laws. By clamping down on piracy apps, Amazon intends to create a more secure and legitimate streaming environment for its users and content providers. The change is expected to impact users who rely on sideloaded apps for accessing unlicensed movies, TV shows, and other media.\n",
    "chinese_title": "Fire TV：亚马逊未来将屏蔽盗版应用",
    "chinese_summary": "亚马逊计划未来阻止在Fire TV设备上安装助长盗版的应用程序。此举旨在打击未经授权的版权内容流媒体播放和分发。\n\n虽然在Fire TV上侧载应用程序一直可行，但亚马逊正在采取措施使其变得更加困难，实际上阻碍了用于访问盗版内容的应用程序的使用。文章中没有详细说明具体的阻止方法，但暗示亚马逊将采取积极措施来阻止这些应用程序的安装或功能。\n\n这一决定符合亚马逊保护知识产权和遵守版权法的持续努力。通过打击盗版应用程序，亚马逊旨在为其用户和内容提供商创造一个更安全、更合法的流媒体环境。预计此项变更将影响依赖侧载应用程序来访问未经授权的电影、电视节目和其他媒体的用户。"
  },
  {
    "id": "45765787",
    "title": "Phone numbers for use in TV shows, films and creative works",
    "url": "https://www.acma.gov.au/phone-numbers-use-tv-shows-films-and-creative-works",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "用于电视节目、电影和创意作品的电话号码",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45762259",
    "title": "How the cochlea computes (2024)",
    "url": "https://www.dissonances.blog/p/the-ear-does-not-do-a-fourier-transform",
    "summary": "This article explains how the cochlea, the hearing organ in the inner ear, processes sound. It refutes the common misconception that the cochlea performs a Fourier transform. Instead, it describes the cochlea's function as a frequency separation process facilitated by the basilar membrane, where different locations resonate with different frequencies (tonotopic organization).\n\nThe process begins with sound waves vibrating the eardrum, which are then amplified by middle ear bones and transmitted to the fluid-filled cochlea. The basilar membrane, with its varying stiffness and weight, separates frequencies spatially. Hair cells on the membrane then convert these vibrations into electrical signals through a mechanoelectrical transduction process involving \"trapdoor\" ion channels.\n\nThe cochlea employs filters to extract temporal and frequency information, exhibiting a trade-off: high frequencies are processed with better temporal resolution, while low frequencies have better frequency resolution. This trade-off aligns with wavelet or Gabor filtering schemes, not the uniform frequency decomposition of a Fourier transform.\n\nThe article highlights Lewicki's research, which suggests that this specific time-frequency trade-off is an efficient coding strategy for natural sounds, reducing redundancy in their representation. The optimal filter characteristics vary depending on the type of sound (environmental, animal vocalizations, or human speech), with human speech occupying a unique time-frequency space. Ultimately, the article posits that the ear has evolved to create ecologically relevant representations, optimizing its processing for the sounds most crucial to survival and communication. The article hints to zoom into the biophysics of computation in neurons in the next lecture.\n",
    "chinese_title": "耳蜗如何计算 (2024)",
    "chinese_summary": "本文解释了耳蜗（内耳中的听觉器官）如何处理声音。它驳斥了一种常见的误解，即耳蜗执行傅里叶变换。相反，它将耳蜗的功能描述为由基底膜促进的频率分离过程，其中不同的位置与不同的频率产生共振（音位定位）。\n\n该过程始于声波振动鼓膜，然后由中耳骨放大并传递到充满液体的耳蜗。基底膜具有不同的硬度和重量，可在空间上分离频率。膜上的毛细胞随后通过涉及“活板门”离子通道的机械电转导过程将这些振动转化为电信号。\n\n耳蜗采用滤波器来提取时间和频率信息，表现出一种权衡：高频以更好的时间分辨率进行处理，而低频具有更好的频率分辨率。这种权衡符合小波或Gabor滤波方案，而不是傅里叶变换的均匀频率分解。\n\n本文重点介绍了Lewicki的研究，该研究表明，这种特定的时频权衡是自然声音的一种有效编码策略，可减少其表示中的冗余。最佳滤波器特性因声音类型（环境、动物发声或人类语音）而异，其中人类语音占据独特的时频空间。最终，本文认为耳朵已经进化为创造与生态相关的表征，优化其对生存和交流至关重要的声音的处理。 本文暗示将在下次讲座中深入探讨神经元计算的生物物理学。"
  },
  {
    "id": "45771538",
    "title": "OpenAI Uses Complex and Circular Deals to Fuel Its Multibillion-Dollar Rise",
    "url": "https://www.nytimes.com/interactive/2025/10/31/technology/openai-fundraising-deals.html",
    "summary": "The article details how OpenAI, under CEO Sam Altman, is using complex and circular financial deals to fund its ambitious AI development. Instead of traditional funding models, OpenAI receives billions from tech companies like Microsoft, SoftBank, Oracle, Nvidia and AMD, and then uses those same funds to pay these companies for cloud computing, data centers, and specialized chips needed to power its AI models.\n\nMicrosoft invested $13 billion in OpenAI, which then largely went back to Microsoft for cloud computing services. Similar arrangements are in place with CoreWeave ($22 billion for computing power, $350 million in CoreWeave stock to OpenAI), SoftBank ($40 billion funding, $100 billion data centers), Oracle ($300 billion in data center spending reciprocated by OpenAI payments), the UAE ($20 billion in data center investments) and Nvidia ($100 billion in investments).\n\nThese unusual arrangements raise concerns about a potential financial bubble, as OpenAI is essentially inflating its apparent value and driving demand for services it needs to survive. While experts recognize the innovative approach, the deals raise questions about financial stability if AI progress slows or if OpenAI cannot generate sufficient revenue to offset its substantial losses. Some companies, like Nvidia and AMD, are hedging their bets, but smaller players like CoreWeave face bankruptcy risks if the AI market doesn't expand as anticipated, potentially creating economic ripples.\n",
    "chinese_title": "OpenAI利用复杂循环交易推动其数十亿美元的崛起",
    "chinese_summary": "OpenAI：复杂循环融资驱动人工智能发展\n\n文章详细介绍了在CEO萨姆·奥特曼领导下，OpenAI如何利用复杂和循环的金融交易来资助其雄心勃勃的人工智能开发。OpenAI没有采用传统的融资模式，而是从微软、软银、甲骨文、英伟达和AMD等科技公司获得数十亿美元的资金，然后利用这些资金向这些公司支付云计算、数据中心和驱动其人工智能模型所需的专用芯片费用。\n\n微软向OpenAI投资了130亿美元，其中大部分资金又回流到微软，用于支付云计算服务费用。与CoreWeave（220亿美元用于计算能力，3.5亿美元的CoreWeave股票给OpenAI）、软银（400亿美元融资，1000亿美元数据中心）、甲骨文（3000亿美元数据中心支出由OpenAI付款回报）、阿联酋（200亿美元数据中心投资）和英伟达（1000亿美元投资）也存在类似的安排。\n\n这些不寻常的安排引发了人们对潜在金融泡沫的担忧，因为OpenAI实际上是在抬高其表面价值，并刺激对其生存所需服务的需求。虽然专家们认识到这种创新方法，但这些交易引发了人们对财务稳定性的质疑，如果人工智能进展放缓，或者OpenAI无法产生足够的收入来抵消其巨额亏损。一些公司，如英伟达和AMD，正在对冲风险，但如果人工智能市场没有按预期扩张，CoreWeave等规模较小的公司将面临破产风险，可能造成经济连锁反应。"
  },
  {
    "id": "45766937",
    "title": "Kimi Linear: An Expressive, Efficient Attention Architecture",
    "url": "https://github.com/MoonshotAI/Kimi-Linear",
    "summary": "Kimi Linear is a new hybrid linear attention architecture that offers significant performance and efficiency improvements over traditional full attention mechanisms, especially for long-context tasks. At its core is Kimi Delta Attention (KDA), a refined version of Gated DeltaNet optimized for finite-state RNN memory utilization.\n\nThe architecture achieves Pareto-optimal performance on long-context benchmarks like RULER (128k context length) with significant speedups (3.98x) and demonstrates 6.3x faster TPOT compared to MLA at 1M token sequence lengths. Kimi Linear reduces KV cache size by up to 75% and boosts decoding throughput by up to 6x.\n\nThe paper introduces two model checkpoints, Kimi-Linear-Base and Kimi-Linear-Instruct, both with 48B total parameters, 3B activated parameters, and a 1M token context length. These models were trained on 5.7T tokens.\n\nKey features include KDA's fine-grained gating mechanism, a 3:1 KDA-to-global MLA hybrid architecture, and superior performance in long-context tasks and RL benchmarks compared to full attention.\n\nThe models can be used for inference via Hugging Face Transformers, with instructions provided, and can be deployed using vllm to create an OpenAI-compatible API endpoint. The FLA kernel underlying KDA has also been open-sourced.\n",
    "chinese_title": "Kimi线性：一种表达力强、效率高的注意力架构",
    "chinese_summary": "Kimi Linear：一种用于长文本任务的新型线性注意力架构"
  },
  {
    "id": "45773985",
    "title": "Amazon says it didn't cut people because of money. But because of 'culture'",
    "url": "https://www.cnn.com/2025/10/30/tech/amazon-layoffs-andy-jassy-ai-culture",
    "summary": "Amazon CEO Andy Jassy attributes recent layoffs of 14,000 employees not to financial difficulties or the immediate impact of AI, but to cultural factors. He claims that rapid expansion in recent years led to increased headcount, layers of management, and a weakening of ownership among employees. This, according to Jassy, hinders the company's agility and speed as a leadership team.\n\nJassy stated that Amazon aims to operate like a large startup, necessitating the removal of layers of bureaucracy. While the company emphasized the need to remain nimble in anticipation of future AI efficiencies, the layoffs have raised concerns about technology displacing human workers.\n\nDespite the layoffs, Amazon's quarterly sales grew 13% year-on-year to $180 billion, and the company's shares climbed 13% after-hours following the earnings report. The company's headcount peaked at 1.6 million in 2021 and ended last year with 1.5 million. The article highlights the discrepancy between Amazon's stated reason for layoffs (culture) and the growing anxieties surrounding AI's impact on job security in the tech industry.\n",
    "chinese_title": "亚马逊称裁员并非因为缺钱，而是因为“文化”。",
    "chinese_summary": "亚马逊CEO贾西将近期裁员14000人归因于文化因素，而非财务困境或人工智能的直接影响。他声称，近年来快速扩张导致员工人数增加、管理层级增多以及员工主人翁意识减弱。贾西认为，这阻碍了公司作为领导团队的敏捷性和速度。\n\n贾西表示，亚马逊的目标是像大型初创企业一样运作，因此需要移除官僚主义层级。虽然该公司强调需要保持敏捷，以应对未来人工智能效率的提升，但裁员引发了人们对技术取代人类劳动的担忧。\n\n尽管裁员，亚马逊季度销售额同比增长13%至1800亿美元，财报发布后，公司股价盘后上涨13%。该公司员工人数在2021年达到160万的峰值，去年年底为150万。文章强调了亚马逊裁员的声明原因（文化）与科技行业中日益增长的对人工智能影响就业保障的担忧之间的差异。"
  },
  {
    "id": "45760878",
    "title": "Free software scares normal people",
    "url": "https://danieldelaney.net/normal/",
    "summary": "This short article argues that free software intimidates and frightens \"normal people.\" While the provided text doesn't offer any supporting details or explanations, the implicit assumption is that there are aspects of free software that are off-putting to the average user.\n\nPossible reasons for this fear, based on common misconceptions and concerns, could include:\n\n*   **Complexity:** Free software is often perceived as being more difficult to use and configure compared to proprietary software. The technical jargon and lack of polished user interfaces can be daunting.\n*   **Lack of Support:** Users may worry about the availability of reliable support if they encounter problems. The community-based support model, while often effective, can feel less reassuring than dedicated customer service.\n*   **Security Concerns:** Some might associate free software with a lack of security, fearing that it is more vulnerable to malware or hacking due to its open-source nature (despite this often being the opposite).\n*   **Perception of \"Free\" as Inferior:** The term \"free\" might lead some to believe that the software is of lower quality or less reliable than paid alternatives.\n*   **Licensing and Freedom:** The concepts of software licenses and user freedoms might be confusing or perceived as unnecessary by those who just want software that works.\n*   **Ethical Considerations:** Some people don't prioritize the ethical and philosophical aspects of free software, finding it irrelevant to their needs.\n\nWithout further elaboration in the source article, the reason for the perceived fear remains speculative, but centers on a disconnect between the user expectations of \"normal people\" and the perceived realities of free software.\n",
    "chinese_title": "自由软件吓坏普通人",
    "chinese_summary": "这篇短文认为自由软件会令“普通人”感到畏惧和害怕。虽然原文未提供任何支持细节或解释，但其隐含的假设是自由软件的某些方面令普通用户感到反感。\n\n基于常见误解和担忧，这种恐惧的可能原因包括：\n\n*   **复杂性：** 自由软件通常被认为比专有软件更难使用和配置。技术术语和缺乏完善的用户界面可能会让人望而却步。\n*   **缺乏支持：** 用户可能会担心遇到问题时，无法获得可靠的支持。基于社区的支持模式虽然通常有效，但可能不如专门的客户服务那样令人安心。\n*   **安全顾虑：** 一些人可能会将自由软件与缺乏安全性联系起来，担心由于其开源性质，它更容易受到恶意软件或黑客攻击（尽管情况往往恰恰相反）。\n*   **“免费”被视为劣质：** “免费”一词可能会让一些人认为该软件的质量或可靠性低于付费替代品。\n*   **许可和自由：** 对于那些只想软件能用的人来说，软件许可和用户自由的概念可能令人困惑或被认为是不必要的。\n*   **伦理考量：** 一些人并不优先考虑自由软件的伦理和哲学方面，认为这与他们的需求无关。\n\n由于源文章中没有进一步的阐述，对这种被感知到的恐惧的原因仍然是推测性的，但核心在于“普通人”的用户期望与自由软件的感知现实之间存在脱节。"
  },
  {
    "id": "45671336",
    "title": "A Closer Look at Piezoelectric Crystal",
    "url": "https://www.samaterials.com/content/a-closer-look-at-stressed-piezo-crystals.html",
    "summary": "This article provides a comprehensive overview of piezoelectric crystals, focusing on their properties, principles, and applications. It begins by defining piezoelectric crystals as non-centrosymmetric materials that generate an electric field when subjected to mechanical stress and vice versa. This unique ability to convert between mechanical and electrical energy makes them valuable in sensor technology and energy conversion.\n\nThe article explains the piezoelectric effect, where mechanical force deforms the crystal, creating surface charges, and the inverse piezoelectric effect, where an electric field causes mechanical deformation. It also details the crystal structure characteristics, emphasizing the importance of a non-centrosymmetric structure and polarization treatment for maximizing piezoelectric properties.\n\nThe process of polarization, aligning electric dipoles through heating and applying a strong electric field, is described in detail. The article then highlights two common piezoelectric materials: quartz and barium titanate, discussing their properties and diverse applications. Quartz is valued for its stability and use in oscillators, filters, and sensors. Barium titanate is used in capacitors, pressure sensors, and medical ultrasound due to its high piezoelectric constants.\n\nIn essence, the article underscores the vital role of piezoelectric crystals in modern technology, spanning from electronics and sensors to medical and industrial applications.\n",
    "chinese_title": "压电晶体的深入观察",
    "chinese_summary": "本文全面概述了压电晶体，重点介绍其特性、原理和应用。文章首先将压电晶体定义为非中心对称材料，该材料在受到机械应力时会产生电场，反之亦然。这种在机械能和电能之间转换的独特能力使其在传感器技术和能量转换方面具有重要价值。\n\n文章解释了压电效应，即机械力使晶体变形并产生表面电荷，以及逆压电效应，即电场引起机械变形。它还详细介绍了晶体结构的特征，强调了非中心对称结构和极化处理对于最大化压电性能的重要性。\n\n文章详细描述了极化过程，即通过加热并施加强电场来排列电偶极子。然后，文章重点介绍了两种常见的压电材料：石英和钛酸钡，并讨论了它们的特性和各种应用。石英因其稳定性和在振荡器、滤波器和传感器中的应用而备受重视。钛酸钡因其高压电常数而用于电容器、压力传感器和医疗超声。\n\n本质上，文章强调了压电晶体在现代技术中的重要作用，涵盖电子、传感器到医疗和工业应用。"
  },
  {
    "id": "45755027",
    "title": "NPM flooded with malicious packages downloaded more than 86k times",
    "url": "https://arstechnica.com/security/2025/10/npm-flooded-with-malicious-packages-downloaded-more-than-86000-times/",
    "summary": "Security firm Koi discovered a widespread malicious campaign, dubbed PhantomRaven, exploiting a vulnerability in NPM's handling of \"Remote Dynamic Dependencies\" (RDD). Since August, attackers have uploaded 126 malicious packages to the NPM repository, downloaded over 86,000 times, with roughly 80 remaining active as of Wednesday.\n\nThe vulnerability lies in NPM's allowance of packages to automatically download dependencies from untrusted sources over potentially unencrypted HTTP connections, bypassing traditional security scans and making the malicious dependencies \"invisible\" to developers. These dependencies are downloaded \"fresh\" upon each install, enabling attackers to serve different payloads based on the request source, allowing for targeted attacks.\n\nThese malicious dependencies scour infected systems for sensitive data, including environment variables, GitHub, Jenkins, and NPM credentials, and the entire continuous integration/continuous delivery environment, opening the door for follow-on supply chain attacks. Data exfiltration utilizes multiple methods for redundancy.\n\nPhantomRaven also employs hallucinated dependency names, identified by AI chatbots, to further obfuscate their activities. NPM representatives have not yet responded to requests for comment. Readers who regularly download packages from NPM should review the Koi post for indicators of compromise.\n",
    "chinese_title": "NPM恶意软件包泛滥，下载次数超过8.6万次",
    "chinese_summary": "安全公司Koi发现了一场广泛的恶意活动，代号“幻影渡鸦”(PhantomRaven)，利用了NPM处理“远程动态依赖”(RDD)的漏洞。自8月以来，攻击者已向NPM仓库上传了126个恶意软件包，下载次数超过86000次，截至周三，大约还有80个处于活跃状态。\n\n该漏洞在于NPM允许软件包通过潜在未加密的HTTP连接自动从不受信任的来源下载依赖项，绕过传统的安全扫描，并使恶意依赖项对开发人员“隐形”。这些依赖项在每次安装时都会“新鲜”下载，使攻击者能够根据请求源提供不同的有效载荷，从而实现有针对性的攻击。\n\n这些恶意依赖项会在受感染的系统中搜寻敏感数据，包括环境变量、GitHub、Jenkins和NPM凭据，以及整个持续集成/持续交付环境，为后续的供应链攻击打开了大门。数据外泄采用了多种方法以实现冗余。\n\n“幻影渡鸦”还使用了由AI聊天机器人识别的幻觉依赖项名称，以进一步混淆其活动。NPM代表尚未回应置评请求。经常从NPM下载软件包的读者应查看Koi的帖子，了解入侵指标。"
  },
  {
    "id": "45736461",
    "title": "Springs and bounces in native CSS",
    "url": "https://www.joshwcomeau.com/animation/linear-timing-function/",
    "summary": "This article explores the use of the `linear()` timing function in CSS for creating more complex animations like springs and bounces, which were previously only achievable with JavaScript.\n\nThe `linear()` function allows developers to define custom easing curves by specifying a series of points on a graph, creating straight line segments between them. This enables the creation of non-Bézier curve animations like springs that overshoot and bounce. While it's possible to create these manually, the article recommends using tools like Linear() Easing Generator and Easing Wizard, which dynamically generate optimized `linear()` strings from spring parameters. These tools often use an advanced syntax that includes time percentages for strategic point placement.\n\nThe article acknowledges limitations, including the need for a fixed duration (unlike physics-based JS animations) and potential issues with interrupt handling in CSS transitions. Performance testing showed that complex `linear()` values don't significantly impact framerate and add only a small amount to CSS bundle size.\n\nThe article recommends storing common `linear()` timing functions in CSS variables for reusability and provides a fallback approach using `cubic-bezier()` curves for older browsers. It also emphasizes the importance of respecting user motion preferences.\n",
    "chinese_title": "原生 CSS 中的弹簧和反弹效果",
    "chinese_summary": "本文探讨了在 CSS 中使用 `linear()` 时间函数创建更复杂的动画，如弹簧和弹跳效果，这些效果以前只能通过 JavaScript 实现。\n\n`linear()` 函数允许开发者通过在图表上指定一系列点来定义自定义缓动曲线，并在这些点之间创建直线段。这使得创建非贝塞尔曲线动画（如过冲和弹跳的弹簧）成为可能。虽然可以手动创建这些动画，但本文建议使用诸如 Linear() Easing Generator 和 Easing Wizard 之类的工具，这些工具可以从弹簧参数动态生成优化的 `linear()` 字符串。这些工具通常使用高级语法，其中包含时间百分比，以便进行战略性点放置。\n\n本文承认了一些局限性，包括需要固定持续时间（与基于物理的 JS 动画不同）以及 CSS 过渡中潜在的中断处理问题。性能测试表明，复杂的 `linear()` 值不会显着影响帧速率，并且只会增加少量 CSS 包大小。\n\n本文建议将常用的 `linear()` 时间函数存储在 CSS 变量中以供重用，并为旧版浏览器提供使用 `cubic-bezier()` 曲线的后备方案。它还强调了尊重用户运动偏好的重要性。"
  },
  {
    "id": "45767162",
    "title": "Show HN: Quibbler – A critic for your coding agent that learns what you want",
    "url": "https://github.com/fulcrumresearch/quibbler",
    "summary": "Quibbler is a tool that acts as a critic for coding agents, automatically observing and correcting their actions to improve code quality and adherence to user instructions. It prevents common agent errors like fabricating results, skipping tests, ignoring coding styles, and hallucinating information.\n\nQuibbler integrates in two modes: Hook Mode, specifically for Claude Code users, leveraging its hook system for passive event monitoring and feedback injection; and MCP Mode, for universal compatibility with other coding agents, using the Model Context Protocol for synchronous code review and immediate feedback.\n\nSetup involves configuring either MCP server settings or adding hooks within a project. Quibbler maintains a persistent review agent per project or session, reviewing code changes, validating claims, examining file changes, and verifying testing steps. It learns project patterns and saves rules over time, improving its critique. Users can customize the agent's behavior via global or project-specific configuration files for the model, and custom prompts. Quibbler uses Claude Haiku 4.5 by default but can be configured to use other Claude models.\n\nThe tool provides feedback to the agent, which then adjusts its behavior. Hook Mode writes feedback to a specific message file the agent reads, guided by a placeholder in the agent's system prompt. The goal is to automate code review and ensure coding agents consistently follow instructions and maintain code quality.\n",
    "chinese_title": "Show HN: Quibbler – 一个能学习你需求的编码代理的评论家",
    "chinese_summary": "Quibbler: 一个代码审查工具，自动观察并纠正代码代理的行为，以提高代码质量和用户指令的遵循度。它能防止常见的代理错误，如捏造结果、跳过测试、忽略编码风格和虚构信息。\n\nQuibbler 集成有两种模式：Hook 模式，专为 Claude Code 用户设计，利用其 Hook 系统进行被动事件监控和反馈注入；以及 MCP 模式，与其它代码代理普遍兼容，使用模型上下文协议进行同步代码审查和即时反馈。\n\n设置包括配置 MCP 服务器设置或在项目中添加 Hook。 Quibbler 为每个项目或会话维护一个持久审查代理，审查代码更改、验证声明、检查文件更改并验证测试步骤。它会学习项目模式并随时间保存规则，从而改进其审查能力。 用户可以通过模型全局或项目特定的配置文件和自定义提示来自定义代理的行为。 Quibbler 默认使用 Claude Haiku 4.5，但可以配置为使用其他 Claude 模型。\n\n该工具向代理提供反馈，然后代理会调整其行为。 Hook 模式会将反馈写入代理读取的特定消息文件，并由代理系统提示中的占位符引导。目标是自动化代码审查，并确保编码代理始终如一地遵循指令并保持代码质量。"
  },
  {
    "id": "45720616",
    "title": "Florian Schneider Collection: Instruments and equipment up for auction",
    "url": "https://www.juliensauctions.com/en/articles/the-florian-schneider-collection-rare-instruments-and-iconic-equipment-from-kraftwerk",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "弗洛里安·施耐德收藏：乐器及设备拍卖",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45703063",
    "title": "Result is all I need",
    "url": "https://rockyj-blogs.web.app/2025/10/25/result-monad.html",
    "summary": "This article discusses the shift in software development towards AI assistance and the importance of code organization for maintainability and quality, even with AI-generated code. The author suggests structuring code into distinct layers: Interface Level (Controllers, Database, HTTP Clients) and Service Level (business logic slices). The key is to keep each layer stateless, isolated, and focused on a single responsibility.\n\nThe article then introduces the \"Result\" monad as a way to handle exceptions and null values when tying together these service functions. The author argues that using \"Result\" makes code more declarative, safer, and easier to maintain by providing a consistent approach to error handling and null checks.\n\nInstead of nested if/else and try/catch blocks, \"Result\" allows chaining functions together using `flatMap`, handling potential errors and null values transparently. The article provides a Kotlin example of using \"Result\" for user registration and login functions, contrasting it with an imperative approach.\n\nThe author emphasizes that \"Result\" is a wrapper that promotes functional programming principles, leading to cleaner, more compartmentalized, and testable code. While initially appearing more complex, the \"Result\" pattern can be consistently applied, reducing boilerplate and improving overall code quality. Finally, the author suggests the code can be implemented in various other languages, and the foundational and service level codes can be linked in a safe manner for a good result.\n",
    "chinese_title": "结果是我唯一需要的",
    "chinese_summary": "本文探讨了软件开发向人工智能辅助的转变，以及即使在使用人工智能生成的代码的情况下，代码组织对于可维护性和质量的重要性。作者建议将代码结构化为不同的层：接口层（控制器、数据库、HTTP客户端）和服务层（业务逻辑切片）。关键是保持每一层无状态、隔离，并专注于单一职责。\n\n文章随后介绍了“Result”monad，作为在连接这些服务函数时处理异常和空值的一种方法。作者认为，使用“Result”通过提供一致的错误处理和空值检查方法，使代码更具声明性、更安全且更易于维护。\n\n“Result”允许使用`flatMap`将函数链接在一起，透明地处理潜在的错误和空值，而不是嵌套的if/else和try/catch块。文章提供了一个使用“Result”进行用户注册和登录功能的Kotlin示例，并将其与命令式方法进行了对比。\n\n作者强调，“Result”是一个促进函数式编程原则的包装器，从而产生更简洁、更模块化和可测试的代码。虽然最初看起来更复杂，但可以一致地应用“Result”模式，从而减少样板代码并提高整体代码质量。最后，作者建议该代码可以用各种其他语言实现，并且可以将基础和服务层代码以安全的方式链接起来，以获得良好的结果。"
  },
  {
    "id": "45774182",
    "title": "Just Use a Button",
    "url": "https://gomakethings.com/just-use-a-button/",
    "summary": "This article argues against the common practice, especially among React and HTMX developers, of using `<div>` elements with `onclick` attributes to mimic button functionality, instead of using the native `<button>` element.\n\nThe author highlights several accessibility and usability issues with this approach. A `<div>` doesn't inherently signal its interactive nature to screen readers, isn't focusable by keyboard by default, and doesn't respond to Enter or Spacebar key presses.\n\nWhile developers often attempt to \"fix\" these shortcomings by adding attributes like `role=\"button\"` and `tabindex=\"0\"`, and attaching event listeners for keyboard input, the author argues that these fixes are cumbersome, error-prone, and ultimately recreate functionality already built into the `<button>` element. The article criticizes the practice of manually managing focus order using `tabindex` due to the risk of disrupting the expected navigation flow. Furthermore, keyboard interactivity fixes involve complex event handling.\n\nThe author emphasizes the laziness principle in development: using the correct HTML element for its intended purpose avoids unnecessary code and potential issues. A `<button>` element inherently possesses the correct role, is automatically focusable, and triggers click events upon Enter and Spacebar presses, providing superior accessibility and ease of implementation compared to a customized `<div>`. In essence, the advice is simple: leverage the built-in functionality of HTML elements instead of reinventing the wheel.\n",
    "chinese_title": "只需一个按钮",
    "chinese_summary": "本文反对一种常见做法，尤其是在 React 和 HTMX 开发者中，即使用带有 `onclick` 属性的 `<div>` 元素来模仿按钮功能，而不是使用原生的 `<button>` 元素。\n\n作者强调了这种做法存在的若干可访问性和可用性问题。`<div>` 本身并不能向屏幕阅读器表明其交互性质，默认情况下无法通过键盘聚焦，且不响应 Enter 或 Spacebar 键的按下。\n\n虽然开发者经常尝试通过添加 `role=\"button\"` 和 `tabindex=\"0\"` 等属性，以及附加键盘输入事件监听器来“修复”这些缺陷，但作者认为这些修复既繁琐又容易出错，最终只是重新创建了 `<button>` 元素已有的功能。本文批评了手动使用 `tabindex` 管理焦点顺序的做法，因为这有破坏预期导航流程的风险。此外，键盘交互性的修复涉及到复杂的事件处理。\n\n作者强调了开发中的懒惰原则：使用正确的 HTML 元素来实现其预期目的可以避免不必要的代码和潜在问题。一个 `<button>` 元素本身就具备正确的角色，可以自动聚焦，并在按下 Enter 和 Spacebar 键时触发点击事件，与自定义的 `<div>` 相比，提供了卓越的可访问性和易于实现的特性。本质上，建议很简单：利用 HTML 元素的内置功能，而不是重复造轮子。"
  },
  {
    "id": "45763877",
    "title": "Minecraft HDL, an HDL for Redstone",
    "url": "https://github.com/itsfrank/MinecraftHDL",
    "summary": "Minecraft HDL is a tool that synthesizes digital circuits from Verilog code and translates them into functional redstone circuits within the Minecraft environment. Developed as a final undergraduate project, it aims to illustrate the principles of digital circuit design on a macroscopic scale, making it an educational tool for beginners and undergraduate engineering students.\n\nWhile the tool can synthesize almost any Verilog circuit, it has limitations. It produces less efficient circuits than hand-built redstone designs and is not suitable for modded survival due to size constraints in Minecraft. Furthermore, it cannot synthesize sequential circuits (those with feedback loops), meaning no memory or stateful designs are possible.\n\nDespite these limitations, Minecraft HDL provides a practical demonstration of the digital design process, bridging the gap between theoretical concepts and a tangible, interactive environment. The creators demonstrate its ease of use with a GIF showing the quick creation and implementation of a 2-bit adder circuit. The project is intended as an educational tool to illustrate how microelectronic digital circuits are designed, and to highlight the differences between software and hardware design.\n",
    "chinese_title": "Minecraft HDL，红石的硬件描述语言",
    "chinese_summary": "Minecraft HDL 是一个工具，它可以从 Verilog 代码中合成数字电路，并将其转化为 Minecraft 环境中可工作的红石电路。 作为本科毕业设计，它的目的是以宏观尺度展示数字电路设计的原理，使其成为初学者和本科工程学生的教育工具。\n\n尽管该工具几乎可以合成任何 Verilog 电路，但它也存在局限性。 与手工搭建的红石电路相比，它生成的电路效率较低，并且由于 Minecraft 中的尺寸限制，不适合改装的生存模式。 此外，它无法合成时序电路（带有反馈回路的电路），这意味着无法实现内存或有状态的设计。\n\n尽管存在这些局限性，Minecraft HDL 仍然为数字设计过程提供了一个实践演示，弥合了理论概念和有形的、交互式环境之间的差距。 创作者通过一个 GIF 展示了 2 位加法器电路的快速创建和实现，证明了其易用性。 该项目旨在作为一个教育工具，说明微电子数字电路是如何设计的，并强调软件和硬件设计之间的差异。"
  },
  {
    "id": "45767257",
    "title": "Roadmap for Improving the Type Checker",
    "url": "https://forums.swift.org/t/roadmap-for-improving-the-type-checker/82952",
    "summary": "This article outlines the Swift team's roadmap for improving the compiler's expression type checking, specifically addressing the common \"unable to type-check this expression in reasonable time\" error. The core issue stems from type-based overloading, which the compiler handles through constraint solving. This process involves creating type variables and constraints, including \"disjunction constraints\" for overloaded declarations. The inherent complexity of disjunction constraints leads to exponential worst-case algorithmic complexity.\n\nThe compiler limits processing time via operation counters and memory arena size. Salvage mode helps generate diagnostics for invalid expressions. The primary goal is to develop general heuristics that quickly solve realistic problems by prioritizing disjunction choices and avoiding contradictions, rather than hardcoding solutions for specific cases. A secondary goal is to optimize the constraint solver's data structures and algorithms.\n\nRecent improvements in Swift 6.2 focused on profiling and addressing bottlenecks in areas like backtracking and graph algorithms, leading to some performance gains. Swift 6.3 introduces optimized disjunction selection, allowing the compiler to quickly solve previously un-typecheckable expressions, particularly those involving math operators and literals. Further, an optimization is in development (but disabled by default) to reduce arena usage by pre-generating type variables and constraints for generic overloads, potentially converting exponential space problems into polynomial ones.\n",
    "chinese_title": "改进类型检查器的路线图",
    "chinese_summary": "本文概述了 Swift 团队改进编译器表达式类型检查的路线图，特别是解决常见的“无法在合理时间内检查此表达式的类型”错误。核心问题源于基于类型的重载，编译器通过约束求解来处理它。这个过程涉及创建类型变量和约束，包括重载声明的“析取约束”。析取约束的固有复杂性导致指数级最坏情况算法复杂度。\n\n编译器通过操作计数器和内存池大小来限制处理时间。抢救模式有助于为无效表达式生成诊断信息。主要目标是开发通用启发式方法，通过优先考虑析取选择和避免矛盾来快速解决实际问题，而不是为特定情况硬编码解决方案。次要目标是优化约束求解器的数据结构和算法。\n\nSwift 6.2 最近的改进侧重于分析和解决回溯和图算法等领域的瓶颈，从而带来了一些性能提升。Swift 6.3 引入了优化的析取选择，使编译器能够快速解决以前无法进行类型检查的表达式，尤其是涉及数学运算符和文字的表达式。此外，一项正在开发中的优化（默认情况下禁用）旨在通过预先生成泛型重载的类型变量和约束来减少内存池使用量，从而可能将指数空间问题转换为多项式空间问题。"
  },
  {
    "id": "45760321",
    "title": "Show HN: I made a heatmap diff viewer for code reviews",
    "url": "https://0github.com",
    "summary": "This \"Show HN\" post introduces a \"heatmap diff viewer\" called cmux designed to improve code review efficiency by highlighting lines/tokens requiring more human attention. Unlike typical bug-finding bots, cmux aims to surface code sections that warrant a second look, even if they aren't outright errors (e.g., hardcoded secrets, complex logic).\n\nThe tool works by replacing \"github.com\" with \"0github.com\" in a GitHub pull request URL. This triggers a process where the repository is cloned into a VM, GPT-5-codex analyzes each diff, and outputs a JSON data structure used to generate a colored heatmap.\n\nThe post provides example pull requests where cmux can be tested, including those for `tinygrad`, `datasette`, and `cmux` itself. The heatmap diff viewer is open source and the GitHub repository is linked. Essentially, cmux aims to guide reviewers to focus on the most critical parts of code changes, potentially saving time and improving code quality.\n",
    "chinese_title": "Show HN: 我做了一个用于代码审查的热图差异查看器",
    "chinese_summary": "这个“Show HN”帖子介绍了一个名为 cmux 的“热图差异查看器”，旨在通过突出显示需要更多人工关注的行/标记来提高代码审查效率。与典型的错误查找机器人不同，cmux 的目标是突出显示值得再三检查的代码段，即使它们不是明显的错误（例如，硬编码的密钥、复杂的逻辑）。\n\n该工具的工作原理是在 GitHub pull request URL 中将 \"github.com\" 替换为 \"0github.com\"。这会触发一个流程，将存储库克隆到 VM 中，GPT-5-codex 分析每个差异，并输出一个 JSON 数据结构，用于生成彩色热图。\n\n该帖子提供了可测试 cmux 的示例 pull request，包括 `tinygrad`、`datasette` 和 `cmux` 本身的 pull request。 热图差异查看器是开源的，并且提供了 GitHub 存储库链接。 基本上，cmux 旨在引导审查者专注于代码更改中最关键的部分，从而可能节省时间并提高代码质量。"
  },
  {
    "id": "45765664",
    "title": "Denmark reportedly withdraws Chat Control proposal following controversy",
    "url": "https://therecord.media/demark-reportedly-withdraws-chat-control-proposal",
    "summary": "Denmark has withdrawn its proposal for an EU law mandating the scanning of electronic messages, including those on end-to-end encrypted platforms, after facing intense controversy. The proposed law, known as Chat Control, aimed to combat child sex abuse material (CSAM) trafficking.\n\nThe German government's decision to oppose the proposal effectively ended Denmark's effort. Danish Justice Minister Peter Hummelgaard announced that his office would instead support voluntary CSAM detection, emphasizing the risk of losing a crucial tool in the fight against child sexual abuse if no action is taken, as the current voluntary scanning model expires in April.\n\nMeredith Whittaker, president of the Signal Foundation, strongly opposed the original measure, warning that Signal would leave the European market if it were adopted. She criticized it as a mass surveillance effort that would compromise the privacy of various individuals, including government officials, journalists, and activists. The article highlights the tension between combating CSAM and protecting privacy rights in the digital age.\n",
    "chinese_title": "丹麦据报在争议后撤回聊天控制提案",
    "chinese_summary": "丹麦在面临强烈争议后，撤回了其强制扫描包括端到端加密平台在内的电子信息的欧盟法律提案。该提案名为“聊天控制”，旨在打击儿童性虐待材料 (CSAM) 贩运。\n\n德国政府决定反对该提案，实际上结束了丹麦的努力。丹麦司法部长彼得·胡梅尔高宣布，他的办公室将转而支持自愿CSAM检测，并强调如果不采取行动，可能会失去打击儿童性虐待的关键工具，因为当前的自愿扫描模式将于四月到期。\n\nSignal基金会主席梅瑞狄斯·惠特克强烈反对最初的措施，警告说如果该措施获得通过，Signal将退出欧洲市场。她批评这是大规模监控，会损害包括政府官员、记者和活动家在内的各类人士的隐私。文章强调了在数字时代打击CSAM和保护隐私权之间的紧张关系。"
  },
  {
    "id": "45742957",
    "title": "Jack Kerouac, Malcolm Cowley, and the difficult birth of On the Road",
    "url": "https://theamericanscholar.org/scrolling-through/",
    "summary": "Gerald Howard's article delves into the arduous journey of Jack Kerouac's \"On the Road\" from conception to publication, debunking the myth of its purely spontaneous creation. While Kerouac did famously type a 120-foot scroll in a feverish 20-day burst, this was built on years of preparation, including detailed notes, character chronologies, and earlier drafts. The novel reflects the Beat Generation's search for meaning in post-war America, influenced by jazz and Kerouac's own cross-country travels with Neal Cassady.\n\nAfter facing rejections from several publishers, the manuscript landed at Viking Press, where editor Malcolm Cowley championed it. Cowley recognized Kerouac's talent and the novel's significance as a voice for the Beat Generation, comparable to Hemingway's representation of the Lost Generation. However, Viking hesitated due to the book's sexually explicit content, potential libel issues, and the unconventional style. Cowley spent four years advocating for publication, ultimately persuading Viking to take a chance on the novel. He saw it as a groundbreaking work that captured the restlessness and search for identity of a new generation. Prior to Kerouac's success, John Clellon Holmes had already brought the Beat Generation to the public's attention through his novel \"Go\" and a New York Times Magazine essay.\n",
    "chinese_title": "杰克·凯鲁亚克、马尔科姆·考利与《在路上》的艰难诞生",
    "chinese_summary": "杰拉尔德·霍华德的文章深入探讨了杰克·凯鲁亚克的小说《在路上》从构思到出版的艰难历程，打破了其纯粹自发创作的神话。 凯鲁亚克的确曾在狂热的20天里用打字机打出了一卷120英尺长的纸卷，但这建立在多年的准备工作之上，包括详细的笔记、人物年表和早期的草稿。 这部小说反映了垮掉的一代在战后美国寻找意义，受爵士乐和凯鲁亚克与尼尔·卡萨迪的横跨美国旅行的影响。\n\n在遭到多家出版社的拒绝后，这份手稿最终落到了维京出版社，编辑马尔科姆·考利对它表示支持。 考利认识到凯鲁亚克的天赋以及这部小说作为垮掉一代声音的重要性，堪比海明威对迷惘一代的代表。 然而，由于书中露骨的性内容、潜在的诽谤问题以及非传统的风格，维京出版社犹豫不决。 考利花了四年时间为出版辩护，最终说服维京冒险出版这部小说。 他认为这是一部开创性的作品，捕捉了新一代的躁动不安和对身份的追寻。 在凯鲁亚克成功之前，约翰·克莱隆·福尔摩斯已经通过他的小说《走》和一篇《纽约时报杂志》的文章，将垮掉的一代带到了公众的视野中。"
  },
  {
    "id": "45711003",
    "title": "Lenses in Julia",
    "url": "https://juliaobjects.github.io/Accessors.jl/stable/lenses/",
    "summary": "Lenses in Julia (using the Accessors.jl package) provide a mechanism to access and modify deeply nested parts of complex objects in a non-mutating way. A lens allows you to `get` a specific part of an object and `set` a new value for that part, creating a modified copy of the original object.\n\nLenses can be created using the `@optic` macro for concise syntax (e.g., `@optic _.a[1]`) or constructed programmatically using functions like `opcompose`, `PropertyLens`, and `IndexLens`.  Composed lenses can be created with `opcompose`, `⨟`, or `∘`.\n\nTo define a custom lens, you need to implement two functions: `Accessors.set(obj, lens, val)` (which returns a modified copy of `obj` with the specified value) and `lens(obj)` (which retrieves the value targeted by the lens).\n\nCrucially, lens implementations must adhere to three laws: \"You get what you set,\" \"Setting what was already there changes nothing,\" and \"The last set wins.\" These laws ensure predictable and consistent behavior when working with lenses, especially when setting values multiple times.  The notion of equality (`≅`) can be flexible, using `==`, `===`, `isequal` or `≈` depending on the context and data type.\n",
    "chinese_title": "Julia 中的透镜",
    "chinese_summary": "Julia中的Lens（使用Accessors.jl包）提供了一种以非破坏性方式访问和修改复杂对象中深层嵌套部分的机制。 Lens允许您`get`对象的特定部分，并为该部分`set`一个新值，从而创建原始对象的修改副本。\n\n可以使用`@optic`宏以简洁的语法（例如，`@optic _.a[1]`）创建Lens，也可以使用`opcompose`、`PropertyLens`和`IndexLens`等函数以编程方式构建Lens。可以使用`opcompose`、`⨟`或`∘`创建组合的Lens。\n\n要定义自定义Lens，您需要实现两个函数：`Accessors.set(obj, lens, val)`（返回`obj`的修改副本，并具有指定的值）和`lens(obj)`（检索Lens针对的值）。\n\n至关重要的是，Lens的实现必须遵守三个定律：“您得到了您所设置的”，“设置已经存在的内容不会改变任何内容”和“最后一次设置获胜”。这些定律确保了在使用Lens时，特别是在多次设置值时，可预测和一致的行为。 相等（`≅`）的概念可以是灵活的，可以根据上下文和数据类型使用`==`，`===`，`isequal`或`≈`。"
  },
  {
    "id": "45680023",
    "title": "Rouille – Rust Programming, in French",
    "url": "https://github.com/bnjbvr/rouille",
    "summary": "Rouille is a humorous project aiming to create a French version of the Rust programming language. It allows developers to write Rust code using French keywords, function names, and idioms, even mixing it with standard English-Rust. The author envisions it as a tongue-in-cheek proposal for the future French sovereign operating system.\n\nThe project provides examples of how keywords like `trait` become `convention`, `impl` becomes `réalisation`, and other translations. It also includes localized swear words for various French-speaking regions for \"true French experience.\"\n\nThe project encourages contributions in the form of adding more French identifiers, while cautioning contributors against including excessive profanity. The author explains the project is a lighthearted exploration of raw procedural macros and a humorous take on programming languages with localized syntax, while acknowledging their potential utility.\n\nBeyond French, the document also lists the word \"rust\" in many other languages, suggesting a potential \"unirust\" project to localize Rust across many languages.\n\nThe project logo was created by @VentGrey, and the license is \"License Publique Rien à Branler,\" a French translation of the WTFPL.\n",
    "chinese_title": "鲁伊勒 – 法语中的 Rust 编程",
    "chinese_summary": "Rouille：一个幽默的 Rust 法语化项目，旨在创建一个法语版本的 Rust 编程语言。它允许开发者使用法语关键字、函数名和习惯用语来编写 Rust 代码，甚至可以与标准的英语 Rust 混合使用。作者将其设想为一个未来法国主权操作系统中略带戏谑的提案。\n\n该项目提供了诸如 `trait` 变为 `convention`、`impl` 变为 `réalisation` 等关键字的翻译示例。它还包括针对不同法语地区的本地化脏话，以实现“真正的法语体验”。\n\n该项目鼓励以添加更多法语标识符的形式进行贡献，同时也提醒贡献者不要包含过多的亵渎性语言。作者解释说，该项目是对原始过程宏的一种轻松探索，并且是对具有本地化语法的编程语言的一种幽默诠释，同时也承认了它们的潜在效用。\n\n除了法语之外，该文档还列出了许多其他语言中的“rust”一词，暗示了一个潜在的“unirust”项目，以在多种语言中本地化 Rust。\n\n该项目徽标由 @VentGrey 创建，许可协议为“License Publique Rien à Branler”，即 WTFPL 的法语翻译。"
  },
  {
    "id": "45700672",
    "title": "Modifying a radiation meter for (radioactive) rock collecting",
    "url": "https://maurycyz.com/projects/ludlum3/",
    "summary": "This article details a modification for the Ludlum Model 3 radiation meter to improve its usefulness for radioactive rock collecting, particularly when used with sensitive scintillation detectors. The problem is that scintillation detectors, while excellent at detecting gamma radiation through dirt and rock, generate a high background count rate, making audio feedback overwhelming and analog meter readings difficult to interpret.\n\nThe solution is to interface a microcontroller with the Ludlum Model 3. The microcontroller measures the count rate, subtracts a calibrated background reading, and outputs an audible tone whose frequency corresponds to the radiation level above background. This allows the user to audibly track subtle increases in radiation levels that would otherwise be masked by background noise.\n\nThe article provides detailed instructions on tapping into the Ludlum Model 3's power and event signals, including potential variations across different meter revisions. It highlights the importance of electrical safety when working with high voltage components and recommends careful wiring and insulation.\n\nThe author includes source code and a prebuilt binary for the microcontroller program, alongside instructions on how to program the microcontroller, even improvising a UPDI programmer with readily available parts. The modification is particularly effective for larger scintillation detectors with moderate background count rates. The final product emits a tone whose frequency guides the user towards radiation sources, improving the rock hunting experience. The article also includes troubleshooting tips for common issues.\n",
    "chinese_title": "改装辐射计用于（放射性）岩石收集",
    "chinese_summary": "本文详细介绍了一种改进 Ludlum Model 3 辐射仪的方法，以提高其在放射性岩石收集中的实用性，尤其是在与灵敏闪烁探测器一起使用时。问题在于，闪烁探测器虽然擅长探测穿过泥土和岩石的伽马射线，但会产生很高的本底计数率，导致音频反馈过于强烈，并且模拟仪表读数难以解读。\n\n解决方案是将微控制器与 Ludlum Model 3 连接。微控制器测量计数率，减去校准后的本底读数，并输出一个音频音调，其频率对应于高于本底的辐射水平。这使得用户可以通过声音追踪辐射水平的细微增加，而这些增加原本会被本底噪声所掩盖。\n\n本文提供了关于接入 Ludlum Model 3 电源和事件信号的详细说明，包括不同仪表版本之间的潜在差异。它强调了在高压元件上工作时的电气安全的重要性，并建议进行仔细的布线和绝缘。\n\n作者提供了微控制器程序的源代码和预构建二进制文件，以及关于如何编程微控制器的说明，甚至使用容易获得的零件即兴制作了一个 UPDI 编程器。这种改进对于具有中等本底计数率的较大闪烁探测器尤其有效。最终产品会发出一种音调，其频率引导用户找到辐射源，从而改善寻石体验。本文还包括常见问题的故障排除技巧。"
  },
  {
    "id": "45770163",
    "title": "Importing Node Modules from BitTorrent",
    "url": "https://evanhahn.com/node-torrent-import/",
    "summary": "Evan Hahn's article explores the possibility of importing Node.js modules directly from BitTorrent using Node's new Customization Hooks feature. He created \"torrent-import,\" a module that allows importing JavaScript files from .torrent files or magnet links.\n\nHahn chose BitTorrent to experiment with content-addressed modules, offering advantages like preservation (bypassing reliance on centralized registries like npm) and built-in data integrity through hashing. He details how Customization Hooks allow overriding the default module loading behavior in Node.\n\nThe article explains how to create and register custom hooks, demonstrating a simplified example where .torrent imports are redirected to a fake file. He then illustrates how WebTorrent is used within the hook to download torrent data to disk and resolve the path to the downloaded JavaScript file. He also mentions publishing a simple module to the Internet Archive as a torrent for testing.\n\nDespite its functionality, Hahn acknowledges that torrent-import is just a proof of concept with limitations. He points out instability due to the nascent nature of Customization Hooks, potential security vulnerabilities related to SHA-1, non-isomorphic behavior, lack of tool support, reliance on seeder availability, negative connotations associated with torrents, and general lack of polish. He hopes this experiment sparks discussion about Customization Hooks and the potential of BitTorrent-like technologies in package management.\n",
    "chinese_title": "从BitTorrent导入Node模块",
    "chinese_summary": "Evan Hahn 的文章探讨了使用 Node.js 的新自定义钩子功能直接从 BitTorrent 导入 Node.js 模块的可能性。他创建了一个名为“torrent-import”的模块，该模块允许从 .torrent 文件或磁力链接导入 JavaScript 文件。\n\nHahn 选择 BitTorrent 来试验内容寻址模块，它提供了诸如保存（绕过对 npm 等中心化注册表的依赖）以及通过哈希实现内置数据完整性等优势。他详细介绍了自定义钩子如何允许覆盖 Node.js 中的默认模块加载行为。\n\n该文章解释了如何创建和注册自定义钩子，并通过一个简化的示例演示了如何将 .torrent 导入重定向到伪造文件。然后，他说明了如何在钩子中使用 WebTorrent 将 torrent 数据下载到磁盘并解析到已下载 JavaScript 文件的路径。他还提到将一个简单的模块作为 torrent 发布到 Internet Archive 以进行测试。\n\n尽管具有功能，Hahn 承认 torrent-import 只是一个具有局限性的概念验证。他指出了由于自定义钩子的新生性质导致的不稳定性、与 SHA-1 相关的潜在安全漏洞、非同构行为、缺乏工具支持、依赖 seeder 可用性、与 torrent 相关的负面含义以及普遍缺乏润色等问题。他希望这项实验能够引发关于自定义钩子以及类似 BitTorrent 的技术在包管理中的潜力的讨论。"
  },
  {
    "id": "45762012",
    "title": "Launch HN: Propolis (YC X25) – Browser agents that QA your web app autonomously",
    "url": "https://app.propolis.tech/#/launch",
    "summary": "Propolis, a Y Combinator X25 graduate, is launching a tool that utilizes browser agents to autonomously QA web applications. Essentially, Propolis automates the process of quality assurance by simulating user interactions and identifying bugs or issues within a web app. This promises to reduce the manual effort and time traditionally required for QA testing. The offering allows developers to focus on building features rather than spending significant time on repetitive testing tasks. It leverages AI-powered agents to navigate websites, perform tests, and report on findings, aiming to provide a more efficient and reliable approach to web app QA. In summary, Propolis offers an autonomous QA solution for web applications using browser agents.\n",
    "chinese_title": "发布 HN：蜂胶 (YC X25) - 自动 QA 您的 Web 应用程序的浏览器代理",
    "chinese_summary": "Propolis推出自主QA工具，利用浏览器代理自动测试Web应用。"
  },
  {
    "id": "45702281",
    "title": "Exceptional Measurement of Chirality",
    "url": "https://www.rsc.org/news/2019/july/exceptional-measurement-of-chirality",
    "summary": "This article highlights a breakthrough in Vibrational Circular Dichroism (VCD) spectroscopy, enabling more accurate and reliable measurements of chirality (handedness) in molecules under realistic conditions. Chiral molecules, or enantiomers, are mirror images of each other and can interact differently with biological systems, making their identification crucial, especially in pharmaceuticals. The drug thalidomide serves as a stark reminder of the dangers of not understanding chirality.\n\nThe new technique overcomes limitations of traditional VCD methods, which struggle with flexible and dynamic molecules. Previously, VCD relied on theoretical fingerprints averaged across possible molecular configurations, leading to potential misidentification of handedness. The researchers developed an algorithm that introduces uncertainty, instead of averaging, into calculated molecular energies. This \"genetic\" algorithm, based on evolution principles, allows for more accurate assignment of handedness and provides a quantitative measure of the reliability of the assignment.\n\nAccording to Wybren Jan Buma, the corresponding author, this new approach provides a more reliable method for determining the handedness of molecules. The research demonstrates that VCD is an accessible and versatile technique, opening doors for real-time monitoring of biochemical processes and high-throughput screening of pharmaceutical compounds. The research is published in Chemical Science, DOI: 10.1039/C9SC02866H1.\n",
    "chinese_title": "手性物质的卓越测量",
    "chinese_summary": "本文重点介绍振动圆二色性(VCD)光谱学的一项突破，该突破能够在实际条件下对分子手性（旋向性）进行更准确和可靠的测量。手性分子或对映异构体彼此互为镜像，并且与生物系统相互作用的方式可能不同，因此它们的识别至关重要，尤其是在制药领域。沙利度胺药物惨痛地提醒我们，不了解手性的危害。\n\n这项新技术克服了传统VCD方法的局限性，这些方法难以处理柔性和动态分子。 以前，VCD依赖于跨可能分子构型的理论指纹图谱的平均值，从而导致可能错误地识别手性。 研究人员开发了一种算法，该算法将不确定性而不是平均值引入到计算的分子能量中。 这种基于进化原理的“遗传”算法，可以更准确地分配手性，并提供手性分配可靠性的定量衡量标准。\n\n通讯作者Wybren Jan Buma表示，这种新方法为确定分子的手性提供了一种更可靠的方法。 该研究表明，VCD是一种易于使用且用途广泛的技术，为实时监测生化过程和药物化合物的高通量筛选打开了大门。 该研究发表在《化学科学》杂志上，DOI：10.1039/C9SC02866H1。"
  },
  {
    "id": "45769971",
    "title": "Reasoning Models Reason Well, Until They Don't",
    "url": "https://arxiv.org/abs/2510.22371",
    "summary": "This arXiv article, \"Reasoning Models Reason Well, Until They Don't,\" by Rameshkumar et al., investigates the limitations of large reasoning models (LRMs), which are LLMs fine-tuned for step-by-step reasoning and self-verification. While LRMs show promising performance on existing reasoning benchmarks, the authors argue that these benchmarks have limited complexity.\n\nTo address this, the authors introduce the Deep Reasoning Dataset (DeepRD) with a generative process that allows for unlimited examples with scalable complexity. Using DeepRD to evaluate LRMs on graph connectivity and natural language proof planning, they found that LRM performance drops sharply once problem complexity exceeds a certain threshold, demonstrating a lack of generalization.\n\nThe study further compares LRM performance to the complexity distributions of real-world knowledge graphs, interaction graphs, and proof datasets. The analysis reveals that while many real-world examples fall within the LRMs' capabilities, significant portions reside in the \"long tail\" where LRMs fail.\n\nIn conclusion, the paper highlights the current utility of LRMs for reasoning tasks but emphasizes the crucial need for developing new methods that can generalize beyond the complexity present in training data to handle more complex, real-world scenarios. The research demonstrates that LRMs, despite their advances, still struggle with problems of sufficient depth and complexity, urging the field to push beyond the current limitations.\n",
    "chinese_title": "推理模型：行则善，不行则败",
    "chinese_summary": "Rameshkumar 等人的 arXiv 文章《推理模型擅长推理，直到它们不再擅长》调查了大型推理模型 (LRM) 的局限性，这些 LRM 是针对逐步推理和自我验证进行微调的 LLM。虽然 LRM 在现有的推理基准上表现出良好的性能，但作者认为这些基准的复杂性有限。\n\n为了解决这个问题，作者引入了深度推理数据集 (DeepRD)，它具有生成过程，可以提供具有可扩展复杂性的无限示例。使用 DeepRD 来评估 LRM 在图连通性和自然语言证明规划方面的能力，他们发现一旦问题复杂度超过某个阈值，LRM 的性能就会急剧下降，表明缺乏泛化能力。\n\n该研究进一步将 LRM 的性能与现实世界知识图谱、交互图谱和证明数据集的复杂性分布进行了比较。分析表明，虽然许多现实世界的例子都落在 LRM 的能力范围内，但很大一部分存在于 LRM 无法处理的“长尾”中。\n\n总而言之，该论文强调了 LRM 目前在推理任务中的实用性，但强调了开发新方法的关键需求，这些方法可以推广到训练数据中存在的复杂性之外，以处理更复杂、现实世界的场景。该研究表明，LRM 尽管取得了进展，但在处理具有足够深度和复杂性的问题时仍然存在困难，敦促该领域突破当前的局限性。"
  },
  {
    "id": "45770765",
    "title": "Terence Tao focused on fundraising after federal funding to UCLA was suspended",
    "url": "https://www.washingtonpost.com/science/2025/09/07/science-math-trump-federal-cuts-grants/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "陶哲轩在联邦政府暂停对加州大学洛杉矶分校的资助后，专注于筹款。",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45772519",
    "title": "Debug like a boss: 10 debugging hacks for developers, quality engineers, testers",
    "url": "https://www.ministryoftesting.com/articles/debug-like-a-boss-10-debugging-hacks-for-developers-quality-engineers-and-testers",
    "summary": "This article, \"Debug like a Boss,\" provides 10 practical debugging hacks for developers, quality engineers, and testers. The core message is to approach debugging systematically and question assumptions.\n\nHere's a summary of the hacks:\n\n1.  **Challenge Assumptions:** Before diving into code, identify and test assumptions about API responses, configurations, and conditions.\n2.  **Use Print Statements:** Employ print statements for raw data output, even if it's not elegant, to reveal the actual state of variables.\n3.  **Identify Changes:** Leverage version control tools like `git diff` and `git blame` to pinpoint recent code changes that may have introduced the bug.\n4.  **Break on Purpose:** Intentionally break the code to isolate the problem area and understand its dependencies.\n5.  **Explain the Bug:** Articulating the problem to someone (or something like a rubber duck) forces you to think clearly and often reveals the solution.\n6.  **Trust Stack Traces:** Prioritize stack traces over error messages, as they lead to the source of the problem.\n7.  **Reproduce the Bug:** Consistent reproduction is crucial for fixing bugs.\n8.  **Use Logs Effectively:** Filter logs, use correlation IDs, and set up alerts.\n9.  **Check External Components:** Verify the behavior of APIs, databases, and content delivery systems.\n10. **Take Breaks:** Step away from the problem to allow your brain to re-think the issue.\n\nThe article emphasizes the importance of postmortems, thorough documentation, and test case creation. It concludes by encouraging readers to develop their own debugging techniques and share them with the community. Finally, the article encourages readers to try \"rubber-ducking\" explain bug, break something on purpose, and measure your own slowdowns to increase efficient debugging.\n",
    "chinese_title": "像大佬一样调试：开发者、质量工程师和测试人员的10个调试技巧",
    "chinese_summary": "像老板一样调试：10个给开发者、质量工程师和测试人员的实用调试技巧。核心信息是系统地进行调试并质疑假设。\n\n以下是这些技巧的总结：\n\n1. **质疑假设：** 在深入代码之前，识别并测试关于 API 响应、配置和条件的假设。\n2. **使用打印语句：** 即使不够优雅，也使用打印语句来输出原始数据，以揭示变量的实际状态。\n3. **识别变更：** 利用版本控制工具，如 `git diff` 和 `git blame`，来精确定位可能引入 bug 的最新代码变更。\n4. **故意破坏：** 有意地破坏代码以隔离问题区域并了解其依赖关系。\n5. **解释 Bug：** 向某人（或像橡皮鸭这样的东西）清楚地表达问题会迫使你清晰地思考，并且常常能揭示解决方案。\n6. **信任堆栈跟踪：** 优先考虑堆栈跟踪而非错误消息，因为它们能指向问题的根源。\n7. **重现 Bug：** 一致的重现是修复 bug 的关键。\n8. **有效使用日志：** 过滤日志，使用关联 ID，并设置警报。\n9. **检查外部组件：** 验证 API、数据库和内容交付系统的行为。\n10. **适当休息：** 暂时远离问题，让你的大脑重新思考问题。\n\n文章强调了事后分析、完善的文档记录和测试用例创建的重要性。文章最后鼓励读者开发自己的调试技术，并与社区分享。最后，文章鼓励读者尝试“橡皮鸭调试法”，故意破坏，并测量自己的速度下降情况，以提高调试效率。"
  },
  {
    "id": "45770928",
    "title": "After delays, Egypt set for lavish opening of grand museum",
    "url": "https://phys.org/news/2025-10-delays-egypt-lavish-grand-museum.html",
    "summary": "Egypt is set to inaugurate the Grand Egyptian Museum (GEM) on Saturday after years of delays. The lavish opening aims to boost the country's tourism industry. Costing over $1 billion and two decades in the making, the ultra-modern museum offers a panoramic view of the Giza pyramids and houses thousands of Egyptian artifacts spanning 5,000 years, including never-before-seen relics. Authorities expect five million annual visitors.\n\nThe inauguration, shrouded in secrecy, promises attendance by \"kings, princes, heads of state and government leaders.\" The new display for Tutankhamun's gold mask is also under wraps. Starting Tuesday, the museum will open to the public, showcasing 4,500 funerary objects.\n\nPresident al-Sisi emphasized the \"symbolic dimension\" of the GEM, envisioning it as an international cultural and scientific hub to promote tourism. Prime Minister Madbouly highlighted Egypt's role as a \"cradle of civilization\" through the GEM.\n\nOriginally planned for July, the opening was delayed due to regional conflict. The project also faced prior setbacks due to political unrest and the pandemic. To broaden its reach, Egypt is partnering with TikTok to share its history.\n\nEgypt's tourism industry, employing about 10% of the workforce, is recovering, with revenues reaching $14.4 billion in the 2023-2024 fiscal year. The first nine months of 2025 saw 15 million tourists generating $12.5 billion in revenue, a 21% increase from the previous year.\n",
    "chinese_title": "埃及大博物馆即将盛大开放，历经延误后。",
    "chinese_summary": "埃及大埃及博物馆（GEM）将于周六正式开放，此前已延误多年。 盛大的开幕式旨在促进该国的旅游业。 这座耗资超过10亿美元、历时二十年打造的超现代博物馆，可欣赏吉萨金字塔的全景，并收藏了数千件跨越5000年的埃及文物，包括前所未见的文物。 当局预计每年将有500万游客。\n\n就职典礼笼罩在神秘之中，承诺有“国王、王子、国家元首和政府领导人”出席。 图坦卡蒙黄金面具的新展览也尚未公开。 从周二开始，博物馆将向公众开放，展示4500件丧葬物品。\n\n塞西总统强调了GEM的“象征意义”，设想它成为一个促进旅游业的国际文化和科学中心。 马德布利总理通过GEM强调了埃及作为“文明摇篮”的作用。\n\n原计划于七月开放，但由于地区冲突而被推迟。 该项目此前也因政治动荡和疫情而面临挫折。 为了扩大其影响力，埃及正在与TikTok合作分享其历史。\n\n埃及的旅游业雇佣了大约10%的劳动力，正在复苏，2023-2024财年的收入达到144亿美元。 2025年前九个月接待了1500万游客，创造了125亿美元的收入，比上一年增长了21%。"
  },
  {
    "id": "45772825",
    "title": "The Biro turns 80: How a simple pen rewrote everyday life",
    "url": "https://newatlas.com/technology/biro-pen-80th-anniversary/",
    "summary": "This article celebrates the 80th anniversary of the Biro, highlighting its transformative impact on everyday life. Invented by László Bíró in the 1930s, the ballpoint pen addressed the limitations of earlier writing tools like quill and fountain pens, which were messy, expensive, and difficult to use. Bíró's design, using a small ball rolling in a socket to dispense viscous, quick-drying ink, revolutionized writing.\n\nThe article traces Bíró's journey from Hungary, fleeing the growing fascist regime to Argentina, where he sought to market his invention. After encountering various challenges and complications, the pen gained recognition during World War II for its reliability at high altitudes in the RAF. Post-war, the design was tweaked, and competition arose, but Marcel Bich's mass production of the affordable Bic Cristal made the ballpoint pen ubiquitous.\n\nThe Biro's impact extends beyond convenience. It democratized writing, making it accessible and effortless on various surfaces. This simplicity has also subtly altered writing styles, with block lettering becoming more common and cursive less so. The article concludes by emphasizing the Biro's significant contribution to written communication, comparing its impact to the invention of the printing press. Despite its simplicity, the Biro has fundamentally changed how we write and interact with the written word.\n",
    "chinese_title": "圆珠笔80周年：一支简单的笔如何改写日常生活",
    "chinese_summary": "本文庆祝比罗圆珠笔问世80周年，突出其对日常生活的变革性影响。20世纪30年代，拉兹洛·比罗发明了圆珠笔，解决了早期书写工具（如羽毛笔和钢笔）的局限性，这些工具既脏乱、昂贵又难以使用。比罗的设计采用在插槽中滚动的小球来分配粘稠、快干的墨水，彻底改变了书写方式。\n\n本文追溯了比罗从匈牙利逃离日益增长的法西斯政权到阿根廷寻求销售其发明的历程。在经历了各种挑战和复杂情况后，圆珠笔因其在二战期间英国皇家空军高海拔地区的可靠性而获得认可。战后，该设计进行了调整，竞争随之而来，但马塞尔·比奇大规模生产的廉价 Bic Cristal 使圆珠笔无处不在。\n\n比罗圆珠笔的影响超越了便利性。它使书写大众化，使其在各种表面上都能轻松访问和使用。这种简单性也巧妙地改变了书写风格，块状字母变得更加普遍，而草书则越来越少。本文最后强调了比罗圆珠笔对书面交流的重大贡献，将其影响与印刷机的发明相提并论。尽管它很简单，但比罗圆珠笔从根本上改变了我们书写和与文字互动的方式。"
  },
  {
    "id": "45758421",
    "title": "Show HN: In a single HTML file, an app to encourage my children to invest",
    "url": "https://roberdam.com/en/dinversiones.html",
    "summary": "This \"Show HN\" post details how the author created a simple, single-HTML-file web app, \"D-investments,\" to teach their children about investing and compound interest. Frustrated that schools don't teach personal finance, the author wanted to create a visual and interactive way for his kids to understand how their money grows over time.\n\nInitially considering a physical piggy bank with a display, he opted for a cheaper and quicker solution: using an old smartphone and creating a PWA (Progressive Web App). The app, accessible through a link, installs on the phone like a native application and is mounted on the fridge.\n\nThe app allows the entry of key information, including the kids' names, invested amount, interest rate, and start date. It then automatically calculates and displays daily, weekly, and monthly gains, along with the total updated balance. The author acts as their \"investment agent,\" assigning realistic interest rates.\n\nThe goal is to visually demonstrate the power of compound interest and the benefits of long-term investment, hoping to instill a lifelong understanding of financial growth in his children. The author encourages feedback and improvement suggestions.\n",
    "chinese_title": "Show HN: 用单个HTML文件编写的鼓励孩子投资的应用",
    "chinese_summary": "作者发布了一个“Show HN”帖子，详细介绍了如何创建一个简单的、单HTML文件的Web应用程序“D-investments”，以教导孩子们关于投资和复利的知识。由于对学校不教授个人理财感到沮丧，作者希望创建一个可视化和互动的方式，让孩子们了解他们的钱如何随着时间的推移而增长。\n\n最初考虑使用带显示器的实体存钱罐，但他选择了更便宜、更快捷的解决方案：使用旧智能手机并创建一个PWA（渐进式Web应用）。该应用程序通过链接访问，像原生应用程序一样安装在手机上，并安装在冰箱上。\n\n该应用程序允许输入关键信息，包括孩子们的姓名、投资金额、利率和开始日期。然后它会自动计算和显示每日、每周和每月的收益，以及更新后的总余额。作者扮演他们“投资代理人”的角色，设定实际的利率。\n\n目标是以可视化的方式展示复利的威力和长期投资的好处，希望在孩子们心中灌输对财务增长的终身理解。作者鼓励提出反馈和改进建议。"
  },
  {
    "id": "45771983",
    "title": "Task Manager won't exit with the close button after Windows KB5067036 update",
    "url": "https://old.reddit.com/r/Windows11/comments/1oj7vd1/psa_windows_11_25h2_262007019_taskbar_manager/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "Windows KB5067036更新后，任务管理器无法通过关闭按钮退出",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45743232",
    "title": "Show HN: Front End Fuzzy and Substring and Prefix Search",
    "url": "https://github.com/m31coding/fuzzy-search",
    "summary": "This \"Show HN\" post introduces `@m31coding/fuzzy-search`, a frontend library for fuzzy, substring, and prefix search. It's designed to be fast, accurate, multilingual, flexible, reliable, and universal, working in both frontend and backend (Node.js) environments.\n\nThe library allows searching objects by IDs and terms (names, features). Key features include indexing entities with names and features, updating/removing entities, and performing different types of searches (fuzzy, substring, prefix) with customizable quality thresholds.\n\nThe library uses a suffix array and n-grams with character sorting for accurate results. It handles normalization, including lowercasing, NFKC/NFKD normalization, and character replacements, particularly important for multilingual support. Fuzzy search employs sorted 3-grams for improved handling of transposition errors.  Substring and prefix search are powered by an efficient suffix array implementation.\n\nThe post includes installation instructions (npm), usage examples using ESM syntax, and explains important configurations like normalization and fuzzy search parameters. It also discusses upsert/removal optimizations and how to handle large datasets using web workers. The author highlights that querying is optimized for speed, and upsert/removal operations might be costly with large datasets due to the internal indexing mechanisms.\n\nFinally, the post encourages users to star the project for support and contribute by creating GitHub issues for enhancements.\n",
    "chinese_title": "Show HN: 前端模糊、子字符串及前缀搜索",
    "chinese_summary": "此“Show HN”帖子介绍`@m31coding/fuzzy-search`，一个用于模糊搜索、子字符串搜索和前缀搜索的前端库。它旨在快速、准确、多语言、灵活、可靠且通用，可在前端和后端（Node.js）环境中工作。\n\n该库允许按ID和术语（名称、特征）搜索对象。主要功能包括使用名称和特征索引实体、更新/删除实体，以及执行具有可自定义质量阈值的不同类型的搜索（模糊搜索、子字符串搜索、前缀搜索）。\n\n该库使用后缀数组和n-gram以及字符排序来实现准确的结果。它处理规范化，包括小写、NFKC/NFKD规范化和字符替换，这对于多语言支持尤其重要。模糊搜索采用排序的3-gram来改进对换位错误的控制。子字符串和前缀搜索由高效的后缀数组实现提供支持。\n\n该帖子包括安装说明 (npm)、使用 ESM 语法的示例，并解释了重要的配置，如规范化和模糊搜索参数。它还讨论了 upsert/删除优化，以及如何使用 Web Worker 处理大型数据集。作者强调，查询已针对速度进行了优化，但由于内部索引机制，使用大型数据集进行 upsert/删除操作可能会很昂贵。\n\n最后，该帖子鼓励用户为项目点赞支持，并通过创建 GitHub issue 来贡献改进。"
  },
  {
    "id": "45693698",
    "title": "In orbit you have to slow down to speed up",
    "url": "https://www.wired.com/story/in-orbit-you-have-to-slow-down-to-speed-up/",
    "summary": "This article explains the counterintuitive nature of orbital mechanics, demonstrating why spacecraft maneuvers often have the opposite effect of what one might expect from terrestrial experience. It begins by outlining the basic physics governing circular orbits: centripetal acceleration, gravitational force, and Newton's second law, culminating in an equation that relates orbital speed and radius.\n\nThe article then uses a hypothetical docking scenario to illustrate the challenges. Firing thrusters forward to \"catch up\" with a space station actually increases the spacecraft's orbital radius, causing it to fall *further* behind. Conversely, firing thrusters backward *decreases* the orbital radius, allowing the spacecraft to speed up (relative to the initial orbit) and overtake the station.\n\nThe article introduces the Hohmann transfer as the solution for changing orbital radii. This involves two steps: First, slowing down to enter an elliptical orbit that dips closer to Earth (for catching up). Second, slowing down *again* at the periapsis (closest point) to circularize the orbit at the new, lower altitude.\n\nFinally, the article emphasizes that interplanetary travel is analogous to orbital rendezvous, requiring similar maneuvers to shift between orbits around the sun. The author concludes by drawing a parallel to the seemingly paradoxical advice of \"turning right to go left\" in race car driving, highlighting the \"opposite world\" nature of orbital navigation.\n",
    "chinese_title": "在轨道中，减速才能加速",
    "chinese_summary": "本文解释了轨道力学的反直觉性，展示了航天器机动经常产生与陆地经验预期相反的效果的原因。文章首先概述了控制圆形轨道的基本物理原理：向心加速度、引力以及牛顿第二定律，最终得出了一个关联轨道速度和半径的公式。\n\n随后，文章使用一个假想的对接场景来说明其中的挑战。向前启动推进器以“追赶”空间站实际上会增加航天器的轨道半径，导致其反而*更加*落后。相反，向后启动推进器会*减小*轨道半径，从而使航天器（相对于初始轨道）加速并赶上空间站。\n\n文章介绍了霍曼转移作为改变轨道半径的解决方案。这包括两个步骤：首先，减速进入一个更靠近地球的椭圆轨道（为了赶上）。其次，在近拱点（最近点）*再次*减速，使轨道在新高度处圆形化。\n\n最后，文章强调行星际旅行与轨道交会类似，需要类似的操作来在围绕太阳的轨道之间切换。作者最后将此与赛车驾驶中看似矛盾的“向右转才能向左走”的建议进行类比，突出了轨道导航的“相反世界”性质。"
  },
  {
    "id": "45751868",
    "title": "Independently verifying Go's reproducible builds",
    "url": "https://www.agwa.name/blog/post/verifying_go_reproducible_builds",
    "summary": "This article details the author's efforts to independently verify the reproducibility of Go's toolchains, a feature introduced in Go 1.21. This feature allows the `go` command to automatically download and use newer Go toolchains when required by a module, addressing concerns about supply chain attacks by ensuring each Go version can be reproducibly built from source.\n\nThe Go project publishes toolchain checksums in the Go Checksum Database. The author, using a tool called Source Spotter, independently verifies that toolchains built from source match the checksums published in the database. Source Spotter downloads the Go source code, builds it, and compares the resulting checksum to the one in the database, flagging any mismatches. Since its inception, Source Spotter has successfully reproduced all Go toolchains since Go 1.21.0.\n\nThe author addresses the \"Trusting Trust\" problem of needing a Go toolchain to build a new one, by building a bootstrapping Go 1.20 toolchain from a very early Go version, repeating this process multiple times to increase assurance.\n\nThe article also highlights challenges like stripping signatures from macOS toolchains and dealing with inconsistencies in the Checksum Database. Alternative methods for verifying the source code, such as building from the Go Git repository, are discussed. The author praises the Go team for making the system verifiable by third parties and hopes other ecosystems will follow suit.\n",
    "chinese_title": "独立验证Go的可复现构建",
    "chinese_summary": "本文详细介绍了作者为独立验证Go工具链可复现性所做的努力，这是Go 1.21中引入的一项功能。该功能允许`go`命令在模块需要时自动下载和使用更新的Go工具链，通过确保每个Go版本都可以从源代码可复现地构建，从而解决对供应链攻击的担忧。\n\nGo项目在Go校验和数据库中发布工具链校验和。作者使用名为Source Spotter的工具，独立验证从源代码构建的工具链是否与数据库中发布的校验和匹配。 Source Spotter下载Go源代码，构建它，并将结果校验和与数据库中的校验和进行比较，标记任何不匹配。自成立以来，Source Spotter已成功复现自Go 1.21.0以来的所有Go工具链。\n\n作者通过从一个非常早期的Go版本构建一个引导式的Go 1.20工具链来解决需要一个Go工具链来构建一个新的工具链的“信任的信任”问题，多次重复这个过程以增加保证。\n\n本文还重点介绍了诸如从macOS工具链中剥离签名以及处理校验和数据库中的不一致之处等挑战。讨论了验证源代码的替代方法，例如从Go Git存储库构建。作者赞扬Go团队使第三方可以验证该系统，并希望其他生态系统也能效仿。"
  },
  {
    "id": "45683380",
    "title": "Spinning Up an Onion Mirror Is Stupid Easy",
    "url": "https://flower.codes/2025/10/23/onion-mirror.html",
    "summary": "This article provides a step-by-step guide to setting up a .onion mirror of a website using Caddy web server on a Debian-based VPS. The author explains their motivation (free speech, anti-censorship, and \"because I can\") and emphasizes the simplicity of the process.\n\nThe guide covers the following key steps:\n\n1.  **Prerequisites:** The author uses Caddy, a DigitalOcean VPS, and Debian.\n2.  **Install Tor:** Installing the Tor package using `apt`.\n3.  **Configure Tor:** Modifying the `/etc/tor/torrc` file to create a hidden service, disabling SOCKS proxy, setting `RunAsDaemon`, defining `HiddenServiceDir` and `HiddenServicePort`, and disabling `ORPort` and `DirPort`.\n4.  **Restart Tor:** Restarting the Tor service to apply changes.\n5.  **Get .onion Address:** Retrieving the .onion address from the `hostname` file located in the `HiddenServiceDir`.\n6.  **Configure Caddy:** Potentially adding a new site block for the .onion address in the Caddy configuration, serving the site over plain HTTP.  The author notes that HTTPS is unnecessary because Tor provides encryption.\n7.  **(Optional) Advertise Your .onion Address:** Adding an `Onion-Location` header to the main site's Caddy configuration to inform Tor-enabled browsers about the .onion mirror.\n\nThe author includes an update explaining that using HTTP within the Tor network is acceptable due to Tor's built-in encryption. The author ends by encouraging readers to test their mirror and support their work.\n",
    "chinese_title": "启动洋葱镜像非常简单",
    "chinese_summary": "在Debian VPS上使用Caddy搭建网站.onion镜像的逐步指南\n\n本文提供了一份在基于Debian的VPS上使用Caddy Web服务器搭建网站.onion镜像的逐步指南。作者解释了其动机（言论自由、反审查，以及“因为我可以”），并强调了该过程的简易性。\n\n该指南涵盖以下关键步骤：\n\n1.  **准备工作：** 作者使用Caddy、DigitalOcean VPS和Debian。\n2.  **安装Tor：** 使用`apt`安装Tor软件包。\n3.  **配置Tor：** 修改`/etc/tor/torrc`文件以创建隐藏服务，禁用SOCKS代理，设置`RunAsDaemon`，定义`HiddenServiceDir`和`HiddenServicePort`，并禁用`ORPort`和`DirPort`。\n4.  **重启Tor：** 重启Tor服务以应用更改。\n5.  **获取.onion地址：** 从位于`HiddenServiceDir`中的`hostname`文件检索.onion地址。\n6.  **配置Caddy：** 可以在Caddy配置中为.onion地址添加一个新的站点块，通过纯HTTP提供站点。作者指出，由于Tor提供加密，因此HTTPS是不必要的。\n7.  **(可选)宣传您的.onion地址：** 将`Onion-Location`标头添加到主站点的Caddy配置中，以告知启用Tor的浏览器有关.onion镜像的信息。\n\n作者包含了一个更新，解释说由于Tor的内置加密，在Tor网络中使用HTTP是可以接受的。作者最后鼓励读者测试其镜像并支持他们的工作。"
  },
  {
    "id": "45712620",
    "title": "987654321 / 123456789",
    "url": "https://www.johndcook.com/blog/2025/10/26/987654321/",
    "summary": "The article explores the interesting relationship between numbers formed by concatenating digits in ascending and descending order within different number bases. Specifically, it examines the ratio of `num(b)` (digits in descending order) and `denom(b)` (digits in ascending order) for a given base `b`.\n\nThe author observes that 987654321/123456789 is very close to 8 in base 10, and wonders if this holds for other bases. They find that the ratio of analogous numbers in base 6 is close to 4, and in base 16, the ratio is effectively 14 due to floating point limitations.\n\nThe core finding is that for any base `b > 2`, the ratio `num(b) / denom(b)` is nearly equal to `b - 2`, with the fractional part being approximately `1/b`. The author provides Python code to demonstrate this relationship holds for bases up to 1000. The code confirms that `num(b) // denom(b) == b-2` and `num(b) % denom(b) == b-1`.\n\nThe author justifies providing code instead of a formal proof by arguing that code can serve as a complementary verification method, potentially catching errors overlooked in a traditional proof, and forcing a necessary level of detail.\n",
    "chinese_title": "987654321 / 123456789",
    "chinese_summary": "本文探讨了在不同进制下，由升序和降序排列的数字串联而成的数字之间有趣的关联。具体而言，它研究了对于给定的进制 `b`，`num(b)`（降序排列的数字）与 `denom(b)`（升序排列的数字）的比率。\n\n作者观察到，在十进制中，987654321/123456789 非常接近 8，并想知道这是否适用于其他进制。他们发现，在六进制中，类似数字的比率接近 4，而在十六进制中，由于浮点数的限制，该比率实际上是 14。\n\n核心发现是，对于任何进制 `b > 2`，比率 `num(b) / denom(b)` 几乎等于 `b - 2`，其中小数部分大约为 `1/b`。作者提供了 Python 代码来证明这种关系对于高达 1000 的进制都成立。该代码证实 `num(b) // denom(b) == b-2` 并且 `num(b) % denom(b) == b-1`。\n\n作者认为，提供代码而不是正式证明是合理的，因为代码可以作为一种补充验证方法，有可能发现传统证明中被忽略的错误，并强制达到必要的细节水平。"
  },
  {
    "id": "45746482",
    "title": "Israel demanded Google and Amazon use secret 'wink' to sidestep legal orders",
    "url": "https://www.theguardian.com/us-news/2025/oct/29/google-amazon-israel-contract-secret-code",
    "summary": "A joint investigation by The Guardian, +972 Magazine, and Local Call reveals that Israel demanded Google and Amazon use a secret \"winking mechanism\" to circumvent legal orders as part of the $1.2 billion Project Nimbus cloud-computing deal. This mechanism requires the companies to send coded messages, disguised as \"special compensation\" payments, to the Israeli government, indicating when they've been compelled to hand over Israeli data to foreign authorities under gag orders. The payments would correspond to the dialing code of the country receiving the data.\n\nIsraeli officials feared losing control of their data stored in the cloud platforms to foreign law enforcement. They also worried about potential employee or shareholder pressure, or legal action related to human rights abuses in the occupied Palestinian territories, leading Google and Amazon to restrict their access to services.\n\nTherefore, the Nimbus agreement also prohibits Google and Amazon from restricting Israel's access to their cloud platforms, even if their technology is used in ways that violate the companies' standard terms of service. This contrasts with Microsoft's recent action to disable the Israeli military's access to certain services due to mass surveillance concerns.\n\nWhile Google and Amazon deny circumventing legal obligations, leaked documents suggest they agreed to adapt internal processes and subordinate their standard contractual terms to meet Israel's demands. Legal experts have called the \"winking mechanism\" unusual and potentially risky, as it could violate US law.\n",
    "chinese_title": "以色列要求谷歌和亚马逊使用秘密“暗号”来规避法律命令",
    "chinese_summary": "《卫报》、《+972杂志》和Local Call联合调查显示，作为价值12亿美元的“尼姆布斯项目”云计算协议的一部分，以色列要求谷歌和亚马逊使用秘密的“眨眼机制”来规避法律命令。该机制要求两家公司向以色列政府发送伪装成“特殊补偿”付款的编码信息，以表明他们何时被迫根据禁言令将以色列数据交给外国当局。付款金额将与接收数据的国家的区号相对应。\n\n以色列官员担心失去对其存储在云平台上的数据的控制权，而落入外国执法部门手中。他们还担心潜在的员工或股东压力，或者与被占领巴勒斯坦领土上的人权侵犯有关的法律诉讼，导致谷歌和亚马逊限制他们对服务的访问。\n\n因此，“尼姆布斯”协议还禁止谷歌和亚马逊限制以色列对其云平台的访问，即使其技术被用于违反两家公司标准服务条款的方式。这与微软最近因大规模监控担忧而禁用以色列军方对某些服务的访问形成对比。\n\n虽然谷歌和亚马逊否认规避法律义务，但泄露的文件表明，他们同意调整内部流程，并使标准合同条款服从以色列的要求。法律专家称这种“眨眼机制”不同寻常且具有潜在风险，因为它可能违反美国法律。"
  },
  {
    "id": "45679046",
    "title": "The Psychology of Portnoy: On the Making of Philip Roth's Groundbreaking Novel",
    "url": "https://lithub.com/the-psychology-of-portnoy-on-the-making-of-philip-roths-groundbreaking-novel/",
    "summary": "Steven J. Zipperstein's article explores the creation and impact of Philip Roth's groundbreaking novel, *Portnoy's Complaint*. Published in 1969, the novel was initially excerpted in magazines like *Esquire* and *Partisan Review*, generating significant buzz and controversy. Its immediate impact was immense, prompting national conversation and critical acclaim, with some even comparing Portnoy to a Christ-like figure.\n\nRoth drew inspiration from earlier writers like Wallace Markfield, Bruce Jay Friedman, and especially Isaac Rosenfeld, who explored the connection between Jewish life and sexual inhibition. Roth's own sessions with psychoanalyst Hans J. Kleinschmidt, a Freudian figure from Central Europe, significantly shaped the novel's themes. Kleinschmidt's insights into Roth's childhood traumas, particularly his relationship with his mother, found their way into the book.\n\n*Portnoy's Complaint* is presented as a product of extensive rewriting, resulting in a complex character who is both a storyteller and the butt of the joke. The novel's portrayal of Jewish life in Newark and its unflinching exploration of sexuality were seen as both audacious and deeply unsettling.\n\nWhile Roth distanced himself from comparisons to comedians, he saw *Portnoy's Complaint* as providing readers with permission to express previously unspeakable thoughts. The character of Sophie Portnoy, though not a direct replica, draws on aspects of Roth's own mother. The novel's lasting impact lies in its liberation of taboo subjects and its invitation to readers to embrace their own complexities.\n",
    "chinese_title": "波特诺伊的心理学：论菲利普·罗斯开创性小说的创作",
    "chinese_summary": "史蒂文·J·齐珀斯坦的文章探讨了菲利普·罗斯开创性的长篇小说《波特诺伊的怨诉》的创作和影响。 这本小说于1969年出版，最初在《时尚先生》和《党派评论》等杂志上摘录，引起了广泛的关注和争议。 它立即产生了巨大的影响，引发了全国性的讨论和评论界的好评，甚至有人将波特诺伊比作基督般的形象。\n\n罗斯从早期的作家，如华莱士·马克菲尔德、布鲁斯·杰伊·弗里德曼，特别是艾萨克·罗森菲尔德那里汲取了灵感，他们探索了犹太生活和性压抑之间的联系。 罗斯自己与来自中欧的弗洛伊德学派人物，心理分析学家汉斯·J·克莱因施密特的疗程，极大地塑造了小说的主题。 克莱因施密特对罗斯童年创伤的洞察，特别是他与母亲的关系，都被融入了书中。\n\n《波特诺伊的怨诉》被认为是经过大量改写的产物，塑造了一个既是讲故事的人，又是笑柄的复杂角色。 这本小说对纽瓦克犹太生活的描写，以及对性毫不妥协的探索，被认为是既大胆又令人不安的。\n\n虽然罗斯不愿将自己与喜剧演员相提并论，但他认为《波特诺伊的怨诉》让读者可以表达以前难以启齿的想法。 索菲·波特诺伊这个角色虽然不是直接的复制品，但借鉴了罗斯自己母亲的某些方面。 这本小说的持久影响在于它解放了禁忌话题，并邀请读者拥抱自己的复杂性。"
  },
  {
    "id": "45694032",
    "title": "Show HN: Run a GitHub Actions step in a gVisor sandbox",
    "url": "https://github.com/geomys/sandboxed-step",
    "summary": "This \"Show HN\" submission introduces `sandboxed-step`, a GitHub Action that executes commands within a gVisor sandbox. The action aims to address security vulnerabilities inherent in GitHub Actions, particularly the risk of cache poisoning and lack of isolation between steps, even with read-only permissions.\n\nThe key motivations are to provide a safer environment for running untrusted code, such as CI processes against the latest dependency versions, thereby mitigating supply chain attack risks.\n\nThe action leverages gVisor to create an isolated environment using a root filesystem similar to Ubuntu 24.04, providing access to `GITHUB_WORKSPACE`, host network, and installed tools from `setup-*` actions.  It operates under the same user as the GitHub Actions runner and with sudo access.\n\nUsers can specify commands to run within the sandbox via the `run` input. It offers options to control network access, persist workspace changes (though strongly discouraged), and configure environment variables.  It also prevents the accidental exposure of GitHub tokens by detecting and failing if `actions/checkout` persists credentials unless explicitly allowed (also discouraged).\n\nExample workflows demonstrate using `sandboxed-step` for sandboxed Go tests with varying Go versions and dependency management strategies, as well as for running `staticcheck` and `govulncheck` tools.  The author emphasizes the use of GitHub's Immutable Releases for tag security.\n",
    "chinese_title": "Show HN: 在 gVisor 沙箱中运行 GitHub Actions 步骤",
    "chinese_summary": "此“Show HN”提交介绍了 `sandboxed-step`，这是一个在 gVisor 沙箱中执行命令的 GitHub Action。该 Action 旨在解决 GitHub Actions 中固有的安全漏洞，特别是缓存中毒的风险以及即使具有只读权限，各个步骤之间也缺乏隔离的问题。\n\n其主要动机是为运行不受信任的代码提供更安全的环境，例如针对最新依赖项版本的 CI 流程，从而降低供应链攻击的风险。\n\n该 Action 利用 gVisor 创建一个隔离环境，使用类似于 Ubuntu 24.04 的根文件系统，并提供对 `GITHUB_WORKSPACE`、主机网络和来自 `setup-*` Actions 的已安装工具的访问权限。它在与 GitHub Actions runner 相同的用户下运行，并具有 sudo 访问权限。\n\n用户可以通过 `run` 输入指定要在沙箱中运行的命令。它提供了控制网络访问、持久化工作区更改（强烈不建议）以及配置环境变量的选项。它还可以防止意外暴露 GitHub 令牌，如果 `actions/checkout` 持久化凭据，则会检测并报错，除非明确允许（同样不建议）。\n\n示例工作流程演示了如何使用 `sandboxed-step` 进行沙箱化的 Go 测试（使用不同的 Go 版本和依赖管理策略），以及运行 `staticcheck` 和 `govulncheck` 工具。作者强调使用 GitHub 的 Immutable Releases 来保证标签安全性。"
  },
  {
    "id": "45702091",
    "title": "It's the \"Hardware\", Stupid",
    "url": "https://haebom.dev/archive?post=4w67rj24q76nrm5yq8ep",
    "summary": "This article presents Time Magazine's Greatest Inventions of 2025, focusing on hardware advancements across various sectors. The inventions are categorized into Robotics, Aerospace, and Agriculture.\n\nIn **Robotics**, highlights include the EufyMake E1 UV printer enabling textured printing, the HoverAir X1 ProMax for personal videography, the agile humanoid robot Unitree R1, and the American Printing House Monarch offering braille and graphic accessibility. The Lotus Ring allows smart home control, and the Tilt Grip Stick simplifies lip balm application.\n\nThe **Aerospace** category features AST SpaceMobile BlueBird promising ultra-fast internet from space, Firefly Blue Ghost facilitating lunar missions, FireSat providing early wildfire detection, and the Vera C. Rubin Observatory enhancing sky observation.\n\nFinally, **Agriculture** showcases innovations like FutureFeed's Asparagopsis supplement to reduce methane emissions from livestock, the Innovea Global Coffee Breeding Network developing climate-smart coffee varieties, RootWave eWeeder offering electric weeding to save herbicides, Scout Gen 5 automating vineyard management, Thunderstruck Razors Edge Concaves improving harvesting efficiency, and Vanilla Vida using data-driven indoor curing for enhanced vanilla production.\n\nThe common thread is the reliance on physical hardware solutions to address contemporary challenges in diverse fields, emphasizing the ongoing importance of tangible technological progress.\n",
    "chinese_title": "笨蛋，关键在“硬件”！",
    "chinese_summary": "本文介绍了《时代》杂志评选的2025年最佳发明，重点关注各个领域的硬件进步。这些发明被分为机器人、航空航天和农业三个类别。\n\n在**机器人**领域，亮点包括实现纹理打印的EufyMake E1 UV打印机，用于个人录像的HoverAir X1 ProMax，敏捷的人形机器人宇树R1，以及提供盲文和图形可访问性的美国印刷之家Monarch。Lotus Ring可以实现智能家居控制，Tilt Grip Stick简化了润唇膏的涂抹。\n\n**航空航天**类别包括承诺提供来自太空的超高速互联网的AST SpaceMobile BlueBird，促进月球任务的Firefly Blue Ghost，提供早期野火探测的FireSat，以及增强天空观测的维拉·C·鲁宾天文台。\n\n最后，**农业**领域展示了诸如FutureFeed的海藻补充剂Asparagopsis以减少牲畜的甲烷排放，Innovea Global Coffee Breeding Network开发的适应气候变化的咖啡品种，提供电力除草以节省除草剂的RootWave eWeeder，自动化葡萄园管理的Scout Gen 5，提高收获效率的Thunderstruck Razors Edge Concaves，以及使用数据驱动的室内固化来增强香草生产的Vanilla Vida等创新。\n\n共同点在于依靠物理硬件解决方案来解决各个领域中的当代挑战，强调了有形技术进步的持续重要性。"
  },
  {
    "id": "45755821",
    "title": "Hello-World iOS App in Assembly",
    "url": "https://gist.github.com/nicolas17/966a03ce49f949dd17b0123415ef2e31",
    "summary": "This article presents a \"Hello-World\" iOS application implemented directly in ARM assembly language. The code, named `yellow.asm`, aims to create a simple iOS app with a yellow background.\n\nThe assembly code focuses on manually creating the necessary Objective-C runtime environment. This includes setting up an autorelease pool, initializing an app delegate, creating the application window, a view controller, and setting the view's background color to yellow. The code directly interacts with Objective-C runtime functions like `objc_getClass`, `objc_msgSend`, `class_addMethod`, and `UIApplicationMain`.\n\nThe code initializes the `AppDelegate`, dynamically creates a `UIWindow` and `UIViewController`, sets the background color, and makes the window visible.  The core logic resides in the `didFinishLaunching` function.  It retrieves the main screen's bounds, creates a `UIWindow` with those bounds, instantiates a `UIViewController`, sets its view's background to yellow, and sets the `UIViewController` as the root view controller for the window.\n\nSeveral commenters discuss potential improvements and points to consider. mraniki asks for build/deploy steps. Nukoooo inquires about the size allocated for local variables. hirschsn clarifies the meaning of \"word\" in the ARM architecture context. pguyot raises concerns about register preservation and suggests optimizations. ozanyasindogan makes a humorous comment about deploying the app to the App Store as a paid app.\n",
    "chinese_title": "汇编语言实现的Hello-World iOS应用",
    "chinese_summary": "本文介绍了一个直接用 ARM 汇编语言实现的 \"Hello-World\" iOS 应用程序。 该代码名为 `yellow.asm`，旨在创建一个具有黄色背景的简单 iOS 应用程序。\n\n该汇编代码专注于手动创建必要的 Objective-C 运行时环境，包括设置自动释放池、初始化应用程序委托、创建应用程序窗口、视图控制器，并将视图的背景颜色设置为黄色。 该代码直接与 Objective-C 运行时函数交互，例如 `objc_getClass`、`objc_msgSend`、`class_addMethod` 和 `UIApplicationMain`。\n\n该代码初始化了 `AppDelegate`，动态创建了一个 `UIWindow` 和 `UIViewController`，设置了背景颜色，并使窗口可见。 核心逻辑位于 `didFinishLaunching` 函数中。 它检索主屏幕的边界，使用这些边界创建一个 `UIWindow`，实例化一个 `UIViewController`，将其视图的背景设置为黄色，并将 `UIViewController` 设置为窗口的根视图控制器。\n\n一些评论者讨论了潜在的改进和需要考虑的点。 mraniki 询问构建/部署步骤。 Nukoooo 询问为局部变量分配的大小。 hirschsn 澄清了 ARM 架构上下文中“word”的含义。 pguyot 提出了关于寄存器保护的担忧并建议进行优化。 ozanyasindogan 对将该应用程序作为付费应用程序部署到 App Store 提出了幽默的评论。"
  },
  {
    "id": "45773245",
    "title": "There's No Speed Limit",
    "url": "https://sive.rs/kimo",
    "summary": "Derek Sivers recounts how a chance encounter with Kimo Williams, a Berklee College of Music alumnus and former instructor, profoundly impacted his life. Sivers, about to begin his first year at Berklee, contacted a local recording studio and was offered accelerated music theory and arranging lessons by Williams.\n\nWilliams, emphasizing that \"there's no speed limit\" to learning, challenged Sivers with an intense, personalized learning approach. In five lessons, Sivers covered the equivalent of six semesters of Berklee's harmony and arranging curriculum. This allowed him to test out of those requirements upon entering college.\n\nInspired by Williams' high expectations, Sivers continued to self-study and test out of other courses, supplementing his full course load. As a result, he graduated in two and a half years instead of the typical four, earning his bachelor's degree at twenty.\n\nSivers attributes his subsequent success to Williams' influence, stating that he learned to push beyond conventional limits and exceed expectations in all aspects of life. He credits Williams with instilling in him the belief that driven individuals can achieve far more than anticipated. Twenty years later, Sivers was invited to give the keynote speech to incoming Berklee students, a testament to the lasting impact of Williams' mentorship. They remain friends to this day.\n",
    "chinese_title": "没有速度限制",
    "chinese_summary": "德里克·西弗斯回忆了与伯克利音乐学院校友兼前导师基莫·威廉姆斯的一次偶然相遇如何深刻地影响了他的生活。即将进入伯克利学习的西弗斯联系了一家当地录音棚，威廉姆斯为他提供了速成的音乐理论和编曲课程。\n\n威廉姆斯强调学习“没有速度限制”，并以一种紧张而个性化的学习方式挑战西弗斯。通过五节课，西弗斯涵盖了伯克利六个学期的和声与编曲课程内容。这使他能够在入学时免修这些课程。\n\n受到威廉姆斯高期望的启发，西弗斯继续自学并免修其他课程，同时还完成了全部的课程负担。结果，他用两年半的时间而非通常的四年毕业，并在二十岁时获得了学士学位。\n\n西弗斯将他后来的成功归功于威廉姆斯的影响，他说自己学会了突破传统限制，并在生活的各个方面超越期望。他认为威廉姆斯向他灌输了一种信念，即有进取心的人可以取得远超预期的成就。二十年后，西弗斯受邀向伯克利新生发表主题演讲，这证明了威廉姆斯指导的持久影响。直到今天，他们仍然是朋友。"
  },
  {
    "id": "45746020",
    "title": "Zig's New Async I/O",
    "url": "https://andrewkelley.me/post/zig-new-async-io-text-version.html",
    "summary": "This article provides an introduction to Zig's new async I/O primitives coming in Zig 0.16.0. It uses a series of examples to demonstrate the core synchronization API. The initial examples establish basic async/await usage, highlighting how it decouples function calling and returning.\n\nThe article emphasizes the power of async/await for expressing asynchrony, allowing I/O implementations to optimize execution (e.g., `std.Io.Threaded` performing multiple tasks concurrently). However, it also points out potential pitfalls with error handling and resource leaks, especially when using `try` with multiple awaits.\n\nThe key solution presented is the `cancel` primitive. By deferring `cancel` calls, resources are properly cleaned up even if errors occur, leading to more robust and optimized code.  `cancel` is idempotent and requests cancellation from the I/O implementation.\n\nThe article then differentiates asynchrony from concurrency.  Using `io.async` can lead to deadlocks in scenarios requiring true concurrency.  The solution is to use `io.concurrent`, which allows the I/O implementation (e.g., `std.Io.Threaded`) to oversubscribe threads, ensuring tasks can run simultaneously. `io.concurrent` can fail with `error.ConcurrencyUnavailable` if concurrency is truly impossible. In essence, using `io.concurrent` makes it explicit that the program *needs* actual concurrency.\n\nThe article showcases how these new primitives allow developers to write idiomatic Zig code while effectively managing asynchronous operations and resources.\n",
    "chinese_title": "Zig 的新型异步 I/O",
    "chinese_summary": "本文介绍了 Zig 0.16.0 版本中新增的异步 I/O 原语。通过一系列示例，演示了核心同步 API。初始示例确立了基本的 async/await 用法，重点说明了其如何解耦函数调用和返回。\n\n文章强调了 async/await 在表达异步方面的强大功能，允许 I/O 实现优化执行（例如，`std.Io.Threaded` 同时执行多个任务）。然而，它也指出了错误处理和资源泄漏方面的潜在陷阱，尤其是在 `try` 与多个 awaits 结合使用时。\n\n提出的关键解决方案是 `cancel` 原语。通过延迟 `cancel` 调用，即使发生错误，资源也能得到妥善清理，从而产生更健壮和优化的代码。`cancel` 是幂等的，并从 I/O 实现请求取消操作。\n\n文章随后区分了异步和并发。在需要真正并发的场景中，使用 `io.async` 可能会导致死锁。解决方案是使用 `io.concurrent`，它允许 I/O 实现（例如，`std.Io.Threaded`）过度订阅线程，确保任务可以同时运行。如果真正无法实现并发，`io.concurrent` 可能会失败并返回 `error.ConcurrencyUnavailable`。本质上，使用 `io.concurrent` 明确表明程序*需要*实际并发。\n\n文章展示了这些新的原语如何使开发人员能够编写符合 Zig 习惯的代码，同时有效地管理异步操作和资源。"
  },
  {
    "id": "45760328",
    "title": "US declines to join more than 70 countries in signing UN cybercrime treaty",
    "url": "https://therecord.media/us-declines-signing-cybercrime-treaty?",
    "summary": "More than 70 countries, including the U.K., EU, China, and Russia, signed the UN Convention against Cybercrime in Hanoi, aiming to establish a global framework to combat digital crime. UN Secretary-General António Guterres emphasized the convention's importance in addressing illicit financial flows, ransomware attacks, and assisting countries in the Global South to combat cybercrime, which is estimated to cost $10.5 trillion annually.\n\nThe convention aims to improve coordination, build capacity, and track cybercriminals, and establish a 24/7 network for international cooperation and evidence sharing.\n\nNotably, the U.S. did not sign the treaty, stating that it is still under review. The tech industry and human rights groups have criticized the treaty, arguing it could criminalize cybersecurity research and lead to broad electronic surveillance, potentially abused by authoritarian regimes to suppress dissent. Concerns were also raised about data protection and the potential for \"cyber authoritarianism.\"\n\nDespite the criticism, Guterres acknowledged the human rights concerns and maintained the convention addresses the crucial issue of sharing digital evidence across borders, aiming to bring perpetrators to justice regardless of location. The UN notes that the convention provides the first global framework to recognize the non-consensual dissemination of intimate images as an offense.\n",
    "chinese_title": "美国拒绝加入联合国网络犯罪条约，该条约已有70余国签署。",
    "chinese_summary": "包括英国、欧盟、中国和俄罗斯在内的70多个国家在河内签署了联合国打击网络犯罪公约，旨在建立一个打击数字犯罪的全球框架。联合国秘书长安东尼奥·古特雷斯强调该公约在解决非法资金流动、勒索软件攻击以及协助全球南方国家打击网络犯罪方面的重要性，据估计，网络犯罪每年造成的损失达10.5万亿美元。\n\n该公约旨在改善协调，建设能力，追踪网络犯罪分子，并建立一个全天候的国际合作和证据共享网络。\n\n值得注意的是，美国尚未签署该条约，称仍在审查中。科技行业和人权组织批评该条约，认为它可能将网络安全研究定为犯罪，并导致广泛的电子监控，可能被专制政权滥用以压制异议。此外，人们还对数据保护和“网络威权主义”的可能性表示担忧。\n\n尽管受到批评，古特雷斯承认人权方面的担忧，并坚持认为该公约解决了跨境共享数字证据这一关键问题，旨在将肇事者绳之以法，无论其身在何处。联合国指出，该公约提供了第一个全球框架，将未经同意传播私密图像的行为认定为犯罪。"
  },
  {
    "id": "45680366",
    "title": "A classic graphic reveals nature's most efficient traveler",
    "url": "https://www.scientificamerican.com/article/a-human-on-a-bicycle-is-among-the-most-efficient-forms-of-travel-in-the/",
    "summary": "This Scientific American article celebrates the magazine's 180th anniversary by revisiting and updating a classic graphic comparing the energy efficiency of locomotion across various animal species. The article highlights that humans, while inefficient movers on their own, become highly efficient land travelers when using bicycles.\n\nThe piece explains that travel requires expending energy to fight gravity and propel oneself forward. Land animals expend energy to stand and move, while flying and swimming creatures can glide, leveraging air currents or buoyancy to minimize energy expenditure. Bicycles, the article argues, allow humans to mimic the efficiency of swimming by using wheels to coast and a rigid frame to counteract gravity.\n\nComparative physiologist Tyson Hedrick is quoted, emphasizing that bicycles essentially make land travel more akin to swimming for humans. The article acknowledges the disadvantage of human shape, which creates drag for cyclists. Hedrick also suggests that velomobiles, bicycles with aerodynamic shells, could further enhance human efficiency, even surpassing aquatic efficiency.\n\nThe article concludes with a call to support science journalism by subscribing to Scientific American, emphasizing the magazine's long history of advocating for science and the importance of its role in today's world.\n",
    "chinese_title": "经典图表揭示自然界最高效的旅行者",
    "chinese_summary": "《科学美国人》通过重温并更新一个比较各种动物物种运动能量效率的经典图表，庆祝杂志创刊180周年。文章强调，人类自身行动效率不高，但使用自行车后却能成为非常高效的陆地旅行者。\n\n文章解释说，旅行需要消耗能量来对抗重力并推动自身前进。陆地动物需要消耗能量来站立和移动，而飞行和游泳的生物则可以滑翔，利用气流或浮力来最大限度地减少能量消耗。文章认为，自行车让人类能够通过使用轮子滑行和使用刚性框架来抵消重力，从而模仿游泳的效率。\n\n比较生理学家泰森·海德里克被引用说，自行车基本上使人类的陆地旅行更类似于游泳。文章承认了人类体型不利的一面，即为骑自行车的人造成阻力。海德里克还建议，带有空气动力学外壳的自行车（机动车）可以进一步提高人类的效率，甚至超过水生效率。\n\n文章最后呼吁通过订阅《科学美国人》来支持科学新闻，强调该杂志长期倡导科学的历史以及其在当今世界中的重要作用。"
  },
  {
    "id": "45742907",
    "title": "Who needs Graphviz when you can build it yourself?",
    "url": "https://spidermonkey.dev/blog/2025/10/28/iongraph-web.html",
    "summary": "This article details the development of `iongraph`, a custom tool for visualizing the internal graphs of SpiderMonkey's Ion optimizing compiler, replacing the standard Graphviz output. The author found Graphviz unsatisfactory due to its unstable layouts, lack of intuitive relation to source code structure, and the limitations of static PDFs for complex graph exploration.\n\nThe core of `iongraph` is a tailored layout algorithm inspired by the Sugiyama method. This algorithm is broken down into four key steps:\n\n1.  **Layering:** Blocks are sorted into horizontal layers based on their depth in the graph, with loop structures influencing layer assignments to reflect source code structure.\n2.  **Create Dummy Nodes:** Dummy nodes are inserted for edges spanning multiple layers, ensuring clear routing.\n3.  **Straighten Edges:** A series of passes aligns nodes horizontally, \"indenting\" code within loops and minimizing edge wobbliness.\n4.  **Track Horizontal Edges:** Overlapping horizontal edges are sorted into parallel \"tracks\" to avoid visual clutter.\n\nBy leveraging the characteristics of control flow graphs (reducible control flow, well-defined loops) and simplifying the Sugiyama algorithm (avoiding edge crossing minimization), the author created a simple, fast, and stable layout algorithm. The resulting `iongraph` tool provides an interactive, intuitive, and efficient way to visualize and debug compiler graphs, leading to improved workflow for SpiderMonkey developers. The article demonstrates how custom-built solutions can often outperform generic tools when tailored to specific needs.\n",
    "chinese_title": "谁还需要Graphviz，自己就能建一个了？",
    "chinese_summary": "本文详细介绍了`iongraph`的开发过程，`iongraph`是一款定制工具，用于可视化SpiderMonkey的Ion优化编译器的内部图，取代了标准的Graphviz输出。作者发现Graphviz存在不足，包括布局不稳定、与源代码结构缺乏直观联系，以及静态PDF在复杂图探索方面的局限性。\n\n`iongraph`的核心是受到Sugiyama方法启发的定制布局算法。该算法分解为四个关键步骤：\n\n1. **分层：**根据块在图中的深度，将块排序到水平层中，循环结构会影响层分配，以反映源代码结构。\n2. **创建虚拟节点：**为跨越多个层的边插入虚拟节点，以确保清晰的路由。\n3. **拉直边：**通过一系列步骤，水平对齐节点，\"缩进\"循环中的代码，并最大限度地减少边的摆动。\n4. **跟踪水平边：**将重叠的水平边排序到平行的\"轨道\"中，以避免视觉混乱。\n\n通过利用控制流图的特性（可约控制流、明确定义的循环）并简化Sugiyama算法（避免边缘交叉最小化），作者创建了一个简单、快速且稳定的布局算法。由此产生的`iongraph`工具提供了一种交互式、直观且高效的方式来可视化和调试编译器图，从而改善了SpiderMonkey开发人员的工作流程。文章证明了在满足特定需求时，定制解决方案通常可以胜过通用工具。"
  },
  {
    "id": "45707971",
    "title": "Learn Multiplatform Z80 Assembly Programming with Vampires",
    "url": "https://www.chibiakumas.com/z80/",
    "summary": "This article is a comprehensive guide to learning Z80 assembly programming for multiple retro platforms, framed with a unique \"Vampires\" theme. It offers a structured learning path, starting with absolute beginner concepts and progressing to advanced techniques like multiplatform development and game creation.\n\nThe content is divided into several series:\n\n*   **Absolute Beginner Series:** Introduces fundamental programming concepts.\n*   **Z80 Assembly Series:** Teaches basic Z80 commands through examples.\n*   **Hello World Series:** Provides simple \"Hello World\" examples for various platforms.\n*   **Simple Series:** Covers basic tasks like sprite creation on different systems.\n*   **Platform Specific Series:** Focuses on hardware-specific details for systems like Amstrad CPC, MSX, ZX Spectrum, Gameboy and others.\n*   **Advanced Series:** Presents more complex Z80 programming techniques.\n*   **Multiplatform Series:** Guides users in creating code that works across multiple platforms.\n*   **Yquest Series (Xquest clone) and Photon Series (Tron clone):** Offers practical game development examples.\n*   **ChibiAkumas Series:** Analysis of the sourcecode for this game.\n\nThe tutorial emphasizes hands-on learning with practical examples and matching YouTube videos for each lesson. It recommends using VASM assembler for multi-language support and suggests starting with Winape for Amstrad CPC development. The goal is to empower learners to create games comparable to those from the 1980s while gaining valuable programming knowledge.\n",
    "chinese_title": "用吸血鬼学习多平台Z80汇编编程",
    "chinese_summary": "本文是一篇全面的指南，以独特的“吸血鬼”主题为框架，教授在多个复古平台上学习 Z80 汇编编程。它提供了一条结构化的学习路径，从绝对初学者的概念开始，逐步发展到多平台开发和游戏创建等高级技术。\n\n内容分为以下几个系列：\n\n*   **绝对初学者系列：** 介绍基本的编程概念。\n*   **Z80 汇编系列：** 通过示例教授基本的 Z80 指令。\n*   **Hello World 系列：** 为各种平台提供简单的“Hello World”示例。\n*   **简单系列：** 涵盖在不同系统上创建精灵等基本任务。\n*   **平台特定系列：** 侧重于 Amstrad CPC、MSX、ZX Spectrum、Gameboy 等系统的硬件特定细节。\n*   **高级系列：** 介绍更复杂的 Z80 编程技术。\n*   **多平台系列：** 指导用户创建可在多个平台上运行的代码。\n*   **Yquest 系列 (Xquest 克隆) 和 Photon 系列 (Tron 克隆)：** 提供实际的游戏开发示例。\n*   **ChibiAkumas 系列：** 分析这款游戏的源代码。\n\n本教程强调实践学习，为每节课提供实际示例和配套的 YouTube 视频。它建议使用 VASM 汇编器以获得多语言支持，并建议从 Winape 开始进行 Amstrad CPC 开发。其目标是使学习者能够创建与 20 世纪 80 年代游戏相媲美的游戏，同时获得宝贵的编程知识。"
  },
  {
    "id": "45767688",
    "title": "Consolidation in Hospital Sector Leading to Higher Health Care Costs, Study Find",
    "url": "https://harris.uchicago.edu/news-events/news/consolidation-hospital-sector-leading-higher-health-care-costs-study-finds",
    "summary": "A new study reveals that hospital consolidation in the U.S., fueled by weak antitrust enforcement, is driving up healthcare costs. Researchers found that the Federal Trade Commission (FTC) challenged only 1% of hospital mergers between 2000 and 2020, despite evidence suggesting that 20% of those mergers were likely to reduce competition and increase prices.\n\nThe study, co-authored by Assistant Professor Zarek Brot-Goldberg, estimates that unchallenged mergers between 2010 and 2015 led to price increases of 5% or more, costing the privately insured $204 million annually. Researchers argue that the FTC's underenforcement stems from a lack of funding, as the financial harm from hospital mergers nearly matches the agency's entire budget.\n\nAssociate Professor Zack Cooper highlights that hospital prices have outpaced all other sectors since 2000, with inpatient admissions now costing nearly $25,000 on average. He emphasizes the need for stronger competition preservation efforts.\n\nThe study also reveals that mergers in rural and low-income areas led to larger price increases, particularly in outpatient services, due to a lack of competing clinics. Given that 90% of hospital markets are already highly concentrated, researchers underscore the urgency of addressing the issue. Brot-Goldberg and his colleagues suggest that increased funding for the FTC could lead to better enforcement and curb rising healthcare costs.\n",
    "chinese_title": "医院行业整合导致医疗保健成本上升，研究发现",
    "chinese_summary": "一项新研究表明，由于反垄断执法不力，美国医院整合正在推高医疗成本。 研究人员发现，尽管有证据表明20%的医院合并案可能减少竞争并提高价格，但在2000年至2020年期间，联邦贸易委员会(FTC)仅对1%的医院合并案提出质疑。\n\n该研究由助理教授Zarek Brot-Goldberg共同撰写，估计2010年至2015年间未受挑战的合并导致价格上涨5%或更多，每年给私人保险者带来2.04亿美元的损失。 研究人员认为，联邦贸易委员会的执法不力源于资金不足，因为医院合并造成的经济损失几乎与该机构的全部预算相当。\n\n副教授Zack Cooper强调，自2000年以来，医院价格的上涨速度超过了所有其他行业，现在住院费用平均接近2.5万美元。 他强调需要加强竞争维护工作。\n\n该研究还表明，由于缺乏竞争诊所，农村和低收入地区的合并导致了更大的价格上涨，尤其是在门诊服务方面。 鉴于90%的医院市场已经高度集中，研究人员强调了解决这一问题的紧迫性。 Brot-Goldberg和他的同事认为，增加对联邦贸易委员会的资金投入可以带来更好的执法并遏制医疗成本的上涨。"
  },
  {
    "id": "45748879",
    "title": "Minecraft removing obfuscation in Java Edition",
    "url": "https://www.minecraft.net/en-us/article/removing-obfuscation-in-java-edition",
    "summary": "生成摘要时出错",
    "chinese_title": "Minecraft removing obfuscation in Java Edition",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45773021",
    "title": "Maryland's new privacy law puts strict limits on how companies use your data",
    "url": "https://technical.ly/civics/maryland-data-privacy-act/",
    "summary": "生成摘要时出错",
    "chinese_title": "Maryland's new privacy law puts strict limits on how companies use your data",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45722069",
    "title": "It's insulting to read AI-generated blog posts",
    "url": "https://blog.pabloecortez.com/its-insulting-to-read-your-ai-generated-blog-post/",
    "summary": "生成摘要时出错",
    "chinese_title": "It's insulting to read AI-generated blog posts",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45771317",
    "title": "Too Cruel Too Soon",
    "url": "https://paulkrugman.substack.com/p/too-cruel-too-soon",
    "summary": "生成摘要时出错",
    "chinese_title": "Too Cruel Too Soon",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45681156",
    "title": "NaN, the not-a-number number that isn't NaN",
    "url": "https://piccalil.li/blog/nan-the-not-a-number-number-that-isnt-nan/",
    "summary": "生成摘要时出错",
    "chinese_title": "NaN, the not-a-number number that isn't NaN",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45772259",
    "title": "Rats Caught on Camera Hunting Flying Bats",
    "url": "https://scienceclock.com/rats-caught-on-camera-hunting-flying-bats-for-the-first-time/",
    "summary": "生成摘要时出错",
    "chinese_title": "Rats Caught on Camera Hunting Flying Bats",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45739279",
    "title": "A Defense of Philosophical Intuitions",
    "url": "https://hilariusbookbinder.substack.com/p/a-defense-of-philosophical-intuitions",
    "summary": "生成摘要时出错",
    "chinese_title": "A Defense of Philosophical Intuitions",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45697450",
    "title": "Typst's Math Mode Problem",
    "url": "https://laurmaedje.github.io/posts/math-mode-problem/",
    "summary": "生成摘要时出错",
    "chinese_title": "Typst's Math Mode Problem",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45702831",
    "title": "Frozen DuckLakes for Multi-User, Serverless Data Access",
    "url": "https://ducklake.select/2025/10/24/frozen-ducklake/",
    "summary": "生成摘要时出错",
    "chinese_title": "Frozen DuckLakes for Multi-User, Serverless Data Access",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45742419",
    "title": "Tips for stroke-surviving software engineers",
    "url": "https://blog.j11y.io/2025-10-29_stroke_tips_for_engineers/",
    "summary": "生成摘要时出错",
    "chinese_title": "Tips for stroke-surviving software engineers",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45742446",
    "title": "uBlock Origin Lite in Apple App Store",
    "url": "https://apps.apple.com/in/app/ublock-origin-lite/id6745342698",
    "summary": "生成摘要时出错",
    "chinese_title": "uBlock Origin Lite in Apple App Store",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45770875",
    "title": "The cryptography behind electronic passports",
    "url": "https://blog.trailofbits.com/2025/10/31/the-cryptography-behind-electronic-passports/",
    "summary": "生成摘要时出错",
    "chinese_title": "The cryptography behind electronic passports",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45762064",
    "title": "Signs of introspection in large language models",
    "url": "https://www.anthropic.com/research/introspection",
    "summary": "生成摘要时出错",
    "chinese_title": "Signs of introspection in large language models",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45761027",
    "title": "PlanetScale Offering $5 Databases",
    "url": "https://planetscale.com/blog/5-dollar-planetscale",
    "summary": "生成摘要时出错",
    "chinese_title": "PlanetScale Offering $5 Databases",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45761042",
    "title": "ZOZO's Contact Solver for physics-based simulations",
    "url": "https://github.com/st-tech/ppf-contact-solver",
    "summary": "生成摘要时出错",
    "chinese_title": "ZOZO's Contact Solver for physics-based simulations",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45759649",
    "title": "Estimating the perceived 'claustrophobia' of New York City's streets (2024)",
    "url": "http://mfranchi.net/posts/claustrophobic-streets/",
    "summary": "生成摘要时出错",
    "chinese_title": "Estimating the perceived 'claustrophobia' of New York City's streets (2024)",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45736479",
    "title": "What we talk about when we talk about sideloading",
    "url": "https://f-droid.org/2025/10/28/sideloading.html",
    "summary": "生成摘要时出错",
    "chinese_title": "What we talk about when we talk about sideloading",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45769945",
    "title": "Today I Learned: Binfmt_misc",
    "url": "https://dfir.ch/posts/today_i_learned_binfmt_misc/",
    "summary": "生成摘要时出错",
    "chinese_title": "Today I Learned: Binfmt_misc",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45765328",
    "title": "Show HN: ekoAcademic – Convert ArXiv papers to interactive podcasts",
    "url": "https://www.wadamczyk.io/projects/ekoacademic/index.html",
    "summary": "生成摘要时出错",
    "chinese_title": "Show HN: ekoAcademic – Convert ArXiv papers to interactive podcasts",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45758093",
    "title": "Language models are injective and hence invertible",
    "url": "https://arxiv.org/abs/2510.15511",
    "summary": "生成摘要时出错",
    "chinese_title": "Language models are injective and hence invertible",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45771508",
    "title": "Deadly storm shatters NYC rainfall records",
    "url": "https://www.cbsnews.com/newyork/news/nyc-flooding-record-rainfall-totals/",
    "summary": "生成摘要时出错",
    "chinese_title": "Deadly storm shatters NYC rainfall records",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45766253",
    "title": "A change of address led to our Wise accounts being shut down",
    "url": "https://shaun.nz/why-were-never-using-wise-again-a-cautionary-tale-from-a-business-burned/",
    "summary": "生成摘要时出错",
    "chinese_title": "A change of address led to our Wise accounts being shut down",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45681023",
    "title": "Some Smalltalk about Ruby Loops",
    "url": "https://tech.stonecharioteer.com/posts/2025/ruby-loops/",
    "summary": "生成摘要时出错",
    "chinese_title": "Some Smalltalk about Ruby Loops",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45746401",
    "title": "Grammarly rebrands to 'Superhuman,' launches a new AI assistant",
    "url": "https://techcrunch.com/2025/10/29/grammarly-rebrands-to-superhuman-launches-a-new-ai-assistant/",
    "summary": "生成摘要时出错",
    "chinese_title": "Grammarly rebrands to 'Superhuman,' launches a new AI assistant",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45773884",
    "title": "New Covid virus found in wild Brazilian bats",
    "url": "https://www.telegraph.co.uk/global-health/science-and-disease/new-covid-virus-with-furin-cleavage-site-found-in-wild-braz/",
    "summary": "生成摘要时出错",
    "chinese_title": "New Covid virus found in wild Brazilian bats",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45732800",
    "title": "China has added forest the size of Texas since 1990",
    "url": "https://e360.yale.edu/digest/china-new-forest-report",
    "summary": "生成摘要时出错",
    "chinese_title": "China has added forest the size of Texas since 1990",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45722471",
    "title": "More than DNS: Learnings from the 14 hour AWS outage",
    "url": "https://thundergolfer.com/blog/aws-us-east-1-outage-oct20",
    "summary": "生成摘要时出错",
    "chinese_title": "More than DNS: Learnings from the 14 hour AWS outage",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45763076",
    "title": "I have released a 69.0MB version of Windows 7 x86",
    "url": "https://twitter.com/XenoPanther/status/1983477707968291075",
    "summary": "生成摘要时出错",
    "chinese_title": "I have released a 69.0MB version of Windows 7 x86",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45748725",
    "title": "Composer: Building a fast frontier model with RL",
    "url": "https://cursor.com/blog/composer",
    "summary": "生成摘要时出错",
    "chinese_title": "Composer: Building a fast frontier model with RL",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45745281",
    "title": "AWS to bare metal two years later: Answering your questions about leaving AWS",
    "url": "https://oneuptime.com/blog/post/2025-10-29-aws-to-bare-metal-two-years-later/view",
    "summary": "生成摘要时出错",
    "chinese_title": "AWS to bare metal two years later: Answering your questions about leaving AWS",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45706570",
    "title": "Show HN: Status of my favorite bike share stations",
    "url": "https://blog.alexboden.ca/toronto-bike-share-status/",
    "summary": "生成摘要时出错",
    "chinese_title": "Show HN: Status of my favorite bike share stations",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45750995",
    "title": "Extropic is building thermodynamic computing hardware",
    "url": "https://extropic.ai/",
    "summary": "生成摘要时出错",
    "chinese_title": "Extropic is building thermodynamic computing hardware",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45747112",
    "title": "I made a 10¢ MCU Talk",
    "url": "https://www.atomic14.com/2025/10/29/CH32V003-talking",
    "summary": "生成摘要时出错",
    "chinese_title": "I made a 10¢ MCU Talk",
    "chinese_summary": "生成摘要时出错"
  }
]