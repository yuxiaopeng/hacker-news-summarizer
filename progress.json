[
  {
    "id": "45559305",
    "title": "Addictive-like behavioural traits in pet dogs with extreme motivation for toys",
    "url": "https://www.nature.com/articles/s41598-025-18636-0",
    "summary": "This study investigates whether excessive toy motivation in domestic dogs can be considered a parallel to behavioural addictions in humans. Researchers explored if a subset of highly play-motivated dogs exhibit key behavioural addiction criteria such as craving, salience, lack of self-control, and mood modification.\n\nThe study involved a behavioural test and owner questionnaire with 105 highly play-motivated dogs. Results showed that 33 dogs displayed addictive-like tendencies, including excessive fixation on toys, reduced responsiveness to other stimuli, and persistent attempts to access toys. Owner reports corroborated these findings and showed significant associations with behavioural test scores.\n\nThe authors propose that excessive toy motivation in dogs shares similarities with human behavioural addictions. Dogs are presented as the only non-human species known to spontaneously develop addictive-like behaviours without artificial induction. This research provides preliminary insights into the psychological mechanisms underlying behavioural addictions across species, suggesting that further research in this area could be valuable. The study also outlines a methodology using behavioral tests and owner questionnaires that could be useful in future research.\n",
    "chinese_title": "对玩具极度渴求的宠物犬身上类成瘾的行为特征",
    "chinese_summary": "本研究调查了家犬过度玩具驱动行为是否可被视为人类行为成瘾的平行现象。研究人员探讨了一部分具有高度玩耍动机的犬只是否表现出关键的行为成瘾标准，例如渴求、显著性、缺乏自我控制和情绪改变。\n\n该研究对105只具有高度玩耍动机的犬只进行了行为测试和主人问卷调查。结果显示，33只犬只表现出类似成瘾的倾向，包括过度专注于玩具、对其他刺激反应降低以及持续尝试获取玩具。主人报告证实了这些发现，并显示与行为测试分数存在显著关联。\n\n作者提出，犬只过度玩具驱动行为与人类行为成瘾具有相似之处。犬类是已知唯一在没有人工诱导的情况下自发产生类似成瘾行为的非人类物种。这项研究为跨物种行为成瘾的心理机制提供了初步见解，表明该领域的进一步研究可能具有价值。该研究还概述了一种使用行为测试和主人问卷调查的方法，该方法可能对未来的研究有所帮助。"
  },
  {
    "id": "45559023",
    "title": "No I don't want to turn on Windows Backup with One Drive",
    "url": "https://idiallo.com/byte-size/say-no-to-onedrive-backup",
    "summary": "The author is frustrated with constant prompts to enable Windows Backup with OneDrive, despite not wanting to use OneDrive. They criticize the limited options provided: \"1 Week\" or \"30 Days\" for reminders, implying no way to permanently dismiss the prompt.\n\nThe author questions the function of the \"No thanks\" button, unsure if it completely removes the prompt or simply validates the chosen reminder schedule. They express annoyance at OneDrive's deep integration into Windows, making it difficult to remove and resenting being asked about OneDrive repeatedly after setting up the machine.\n\nThey argue that the available choices are an illusion, offering only options to use OneDrive now or later, but not a \"never\" option. The author concludes by labeling this persistent prompting as a \"dark pattern\" and expresses frustration at encountering the prompt again after restarting their computer. The core issue is the lack of a permanent opt-out option for Windows Backup integrated with OneDrive, despite the user's clear lack of interest.\n",
    "chinese_title": "不，我不想开启包含OneDrive的Windows备份。",
    "chinese_summary": "作者对不断弹出启用 OneDrive 的 Windows 备份提示感到沮丧，尽管他们不想使用 OneDrive。他们批评了选项的局限性：提醒选项只有“1 周”或“30 天”，暗示没有永久关闭提示的方法。\n\n作者质疑“不用了，谢谢”按钮的功能，不确定它是否完全取消提示，还是仅仅确认所选的提醒计划。他们对 OneDrive 深度集成到 Windows 中感到恼火，很难移除，并且对在设置机器后反复被询问关于 OneDrive 的问题感到不满。\n\n他们认为可用的选择是一种错觉，只提供现在或稍后使用 OneDrive 的选项，而不是“永不”选项。作者最后将这种持续的提示标记为一种“黑暗模式”，并对重启电脑后再次遇到提示感到沮丧。核心问题是缺乏一个永久退出 Windows 备份与 OneDrive 集成的选项，尽管用户明显不感兴趣。"
  },
  {
    "id": "45556952",
    "title": "Macro Gaussian Splats",
    "url": "https://danybittel.ch/macro.html",
    "summary": "Dany Bittel created 3D models of macro subjects, like insects, using Gaussian splatting, a technique that generates 3D photographs from multiple images. The challenge with macro photography is the shallow depth of field, resulting in blurry images that negatively impact the final model.\n\nBittel overcame this by using focus stacking, combining 16 images with different focal points from the same angle into one sharp image. He rotated the insect on a disk and adjusted the camera angle to capture 111 perspectives, resulting in 1776 total photos. This process, involving a WeMacro focus rail and manual vertical angle adjustments, took about four hours due to limitations of his camera. He used a Tamron 90mm lens with a 20mm extension on a cropped sensor to minimize perspective changes during focus stacking.\n\nAfter focus-stacking, the camera positions were reconstructed using COLMAP. Color correction and background masking were applied before feeding the data into Postshot for training. The final splat model only required minimal retouching.\n\nBittel showcases his macro splats on superspl.at and is releasing the cluster fly model for free under a CC BY license.\n",
    "chinese_title": "宏观高斯溅射",
    "chinese_summary": "Dany Bittel 使用高斯溅射技术创建了昆虫等微观物体的 3D 模型。高斯溅射是一种从多张图像生成 3D 照片的技术。微距摄影的挑战在于景深浅，导致图像模糊，对最终模型产生负面影响。\n\nBittel 通过使用焦点堆叠克服了这个问题，将来自同一角度但焦点不同的 16 张图像组合成一张清晰的图像。他将昆虫放在转盘上旋转，并调整相机角度以捕捉 111 个视角，总共拍摄了 1776 张照片。由于相机的限制，这个过程（涉及 WeMacro 调焦导轨和手动垂直角度调整）大约花费了四个小时。他使用带有 20mm 延长管的 Tamron 90mm 镜头在裁剪传感器上拍摄，以最大限度地减少焦点堆叠期间的透视变化。\n\n焦点堆叠后，使用 COLMAP 重建相机位置。在将数据输入 Postshot 进行训练之前，应用了色彩校正和背景蒙版。最终的溅射模型只需要进行最少的修饰。\n\nBittel 在 superspl.at 上展示了他的微距溅射作品，并以 CC BY 许可免费发布了丽蝇模型。"
  },
  {
    "id": "45559076",
    "title": "How I'm Using Helix Editor",
    "url": "https://rushter.com/blog/helix-editor/",
    "summary": "This article details the author's configuration and usage of the Helix editor, focusing on enhancing its functionality and replicating familiar Vim behaviors. The author switched to Helix to avoid the security risks and complexity of numerous Vim/Neovim plugins.\n\nThe article highlights the use of Tmux with custom keybindings for Yazi (file manager), Lazygit, and accessing Tmux output within Helix. It outlines Vim-like keybindings implemented for line selection and deletion in Helix, improving the editor's default behavior.\n\nFurther customization includes an improved status line displaying Git branch information and other useful data. The author shares several keybindings for file management (saving, closing buffers), formatting, whitespace rendering, git actions (undo, blame), and toggling options.\n\nThe author's editor configuration is provided, emphasizing options like true-color support, showing hidden files in the file picker, visual rulers, auto-save on focus loss or after a delay, indent guides, and rainbow brackets. The Harper-ls LSP is used to highlight comment grammar errors. The author concludes by soliciting feedback and tips from other Helix users.\n",
    "chinese_title": "我是如何使用 Helix 编辑器的",
    "chinese_summary": "本文详细介绍了作者对 Helix 编辑器的配置和使用，重点在于增强其功能并复刻熟悉的 Vim 操作习惯。作者切换到 Helix 是为了避免众多 Vim/Neovim 插件带来的安全风险和复杂性。\n\n文章重点介绍了 Tmux 与自定义快捷键在 Yazi (文件管理器)、Lazygit 以及在 Helix 中访问 Tmux 输出上的使用。文章概述了为 Helix 实现的类 Vim 快捷键，用于行选择和删除，从而改进了编辑器的默认行为。\n\n进一步的定制包括改进的状态栏，显示 Git 分支信息和其他有用的数据。作者分享了多个用于文件管理（保存、关闭缓冲区）、格式化、空白渲染、git 操作（撤销、blame）和切换选项的快捷键。\n\n作者的编辑器配置被提供，强调了诸如真彩色支持、在文件选择器中显示隐藏文件、可视标尺、焦点丢失或延迟后自动保存、缩进引导线和彩虹括号等选项。Harper-ls LSP 用于突出显示注释中的语法错误。作者最后征求其他 Helix 用户的反馈和建议。"
  },
  {
    "id": "45558635",
    "title": "Germany's Schleswig-Holstein Completes Migration to Open Source Email",
    "url": "https://news.itsfoss.com/schleswig-holstein-email-system-migration/",
    "summary": "This article reports on the German state of Schleswig-Holstein successfully migrating its entire state administration email system from Microsoft Exchange and Outlook to open source alternatives, Open-Xchange (server) and Thunderbird (client). The transition, completed on October 2, 2025, involved moving over 40,000 mailboxes containing 100 million emails and calendar entries for approximately 30,000 employees across various government departments.\n\nWhile the migration wasn't without challenges, including downtime and email traffic delays, Digitization Minister Dirk Schrödter emphasizes its success and importance. He highlights that the project makes Schleswig-Holstein pioneers, as there are few comparable open-source migrations of this scale globally. The state aims to leverage its experience to support others undertaking similar transitions.\n\nThis email system migration aligns with Schleswig-Holstein's broader open-source strategy, which includes already rolling out LibreOffice as the standard office software, gradually replacing Microsoft Office. The article also highlights the It's FOSS Plus membership as a way to support independent Linux-focused journalism and enjoy an ad-free reading experience.\n",
    "chinese_title": "德国石勒苏益格-荷尔斯泰因州完成向开源邮件的迁移",
    "chinese_summary": "本文报道了德国石勒苏益格-荷尔斯泰因州成功地将其整个州政府行政邮件系统从微软Exchange和Outlook迁移到开源替代方案Open-Xchange（服务器）和Thunderbird（客户端）。此次迁移于2025年10月2日完成，涉及为大约30,000名员工，跨越各个政府部门，迁移超过40,000个邮箱，包含1亿封电子邮件和日历条目。\n\n虽然迁移并非没有挑战，包括停机时间和电子邮件流量延迟，但数字化部长Dirk Schrödter强调了其成功和重要性。他强调，该项目使石勒苏益格-荷尔斯泰因州成为先驱，因为在全球范围内，如此规模的开源迁移案例寥寥无几。该州旨在利用其经验来支持其他进行类似过渡的地区。\n\n此次电子邮件系统迁移符合石勒苏益格-荷尔斯泰因州更广泛的开源战略，其中包括已经推出LibreOffice作为标准办公软件，逐步取代Microsoft Office。文章还强调了It's FOSS Plus会员资格，作为支持独立Linux主题新闻报道并享受无广告阅读体验的一种方式。"
  },
  {
    "id": "45559567",
    "title": "In 1776, Thomas Paine made the best case for fighting kings −and being skeptical",
    "url": "https://theconversation.com/in-1776-thomas-paine-made-the-best-case-for-fighting-kings-and-for-being-skeptical-266448",
    "summary": "In this article, Matthew Redmond explores the enduring relevance of Thomas Paine's ideas, particularly his fervent opposition to monarchy and advocacy for skepticism. Redmond argues that Paine's \"Common Sense\" was pivotal in transforming the American Revolution into a fight for liberty, fueled by a powerful rejection of hereditary privilege and unchecked power.\n\nPaine's critique of kings stemmed from a deep belief in equality and the dangers of surrendering freedom to any ruler, benevolent or not. He saw hereditary right as inherently flawed, prone to producing tyrannical leaders and perpetuating abuses of power. Paine challenged readers to critically examine the historical evidence of monarchical abuses, urging them not to blindly accept his claims but to investigate for themselves.\n\nRedmond emphasizes Paine's disdain for those who enable tyranny by willingly sacrificing their freedom, highlighting that such actions endanger future generations. He argues that Paine's skepticism and call for resistance against both tyranny and tyrants remain relevant in contemporary society, particularly in guarding against unchecked power and defending individual liberties. In essence, Paine's message encourages constant vigilance and a refusal to compromise on the principles of freedom and self-governance.\n",
    "chinese_title": "1776年，托马斯·潘恩为反抗国王以及保持怀疑态度提供了最佳理由。",
    "chinese_summary": "本文中，马修·雷德蒙探讨了托马斯·潘恩思想的持久 relevance，尤其是他对君主制的强烈反对和对怀疑主义的倡导。 雷德蒙认为，潘恩的《常识》对将美国革命转变为争取自由的斗争至关重要，这场斗争的动力来自于对世袭特权和不受约束的权力的强烈否定。\n\n潘恩对国王的批判源于对平等的深刻信念以及将自由出让给任何统治者的危险，无论其是否仁慈。 他认为世袭权利本身就存在缺陷，容易产生暴虐的领导人并使权力滥用永久化。 潘恩挑战读者批判性地考察君主制滥用权力的历史证据，敦促他们不要盲目接受他的主张，而是自行调查。\n\n雷德蒙强调了潘恩对那些通过自愿牺牲自由来助纣为虐的人的鄙视，强调了这种行为会危及后代。 他认为，潘恩的怀疑主义和对暴政与暴君的反抗呼吁在当今社会仍然具有现实意义，尤其是在防范不受约束的权力和捍卫个人自由方面。 本质上，潘恩的信息鼓励人们保持警惕，并且拒绝在自由和自治的原则上妥协。"
  },
  {
    "id": "45556474",
    "title": "Faster LLM inference",
    "url": "https://www.together.ai/blog/adaptive-learning-speculator-system-atlas",
    "summary": "The article introduces AdapTive-LeArning Speculator System (ATLAS), a new inference innovation from Together AI that accelerates Large Language Model (LLM) inference speeds by up to 4x. ATLAS is a runtime-learning accelerator that dynamically improves performance without manual tuning, adapting to evolving workloads and traffic patterns. It builds upon Together Turbo Speculator and Custom Speculators, offering continuous alignment with the target model's behavior in real-time.\n\nATLAS uses two cooperating speculators: a heavyweight static speculator for general speculation and a lightweight adaptive speculator for rapid, on-the-fly specialization. A confidence-aware controller chooses which speculator to trust and adjusts the speculation lookahead. This system improves performance in serverless, multi-tenant environments and accelerates reinforcement learning (RL) training by adapting to the evolving policy distribution.\n\nThe article highlights that ATLAS achieves significant speedups, reaching up to 500 TPS on DeepSeek-V3.1 and 460 TPS on Kimi-K2, outperforming specialized hardware. Performance gains stem from near-lossless quantization, Turbo Speculator, and the Adaptive-Learning Speculator System. The system specializes quickly when the input distribution is narrow, leading to even higher TPS. Together AI is hiring research scientists and engineers to develop efficient AI further.\n",
    "chinese_title": "更快的LLM推理",
    "chinese_summary": "本文介绍了Together AI 的一项新的推理创新——自适应学习推测系统 (ATLAS)，该系统可将大型语言模型 (LLM) 的推理速度提高至多 4 倍。ATLAS 是一种运行时学习加速器，无需手动调整即可动态提高性能，从而适应不断变化的工作负载和流量模式。它建立在 Together Turbo Speculator 和 Custom Speculators 的基础上，能够与目标模型的实时行为保持持续对齐。\n\nATLAS 使用两个协同工作的推测器：一个用于通用推测的重量级静态推测器和一个用于快速、即时专业化的轻量级自适应推测器。一个具有置信度感知能力的控制器会选择信任哪个推测器，并调整推测的前瞻性。该系统提高了在无服务器、多租户环境中的性能，并通过适应不断演变的策略分布来加速强化学习 (RL) 训练。\n\n本文强调，ATLAS 实现了显著的加速，在 DeepSeek-V3.1 上达到高达 500 TPS，在 Kimi-K2 上达到 460 TPS，优于专用硬件。性能提升源于近乎无损的量化、Turbo Speculator 和自适应学习推测系统。当输入分布较窄时，该系统能够快速专业化，从而实现更高的 TPS。Together AI 正在招聘研究科学家和工程师，以进一步开发高效的人工智能。"
  },
  {
    "id": "45500422",
    "title": "Loko Scheme: bare metal optimizing Scheme compiler",
    "url": "https://scheme.fail/",
    "summary": "Loko Scheme is an optimizing Scheme compiler that natively supports R6RS Scheme and R7RS Scheme as a second language. It cross-compiles to Linux/amd64, NetBSD/amd64, and bare metal amd64 and features concurrency based on Concurrent ML. It is licensed under the EUPL-1.2-or-later.\n\nLoko is available via git, a GitLab mirror, package repositories (Arch Linux AUR, GNU Guix, Docker), and a bootable hard drive image for a REPL experience.\n\nThe developer's manual is available as a PDF. The compiler is positioned as a niche tool for tasks such as building statically linked concurrent applications, systems-level language development, systems research, unikernel experiments, lock-free kernel experiments, bare metal Scheme experiments, and new userspace-to-kernel interfaces.\n\nLoko Scheme offers limited hardware support, including drivers for networking, disk, video, serial, PS/2, and USB devices. It works on real hardware with a legacy PIC. Bug reports can be submitted via email, and questions can be asked in comp.lang.scheme or the #loko IRC channel.\n",
    "chinese_title": "Loko方案：裸机优化Scheme编译器",
    "chinese_summary": "Loko Scheme是一个优化Scheme编译器，原生支持R6RS Scheme，并作为第二语言支持R7RS Scheme。它可以交叉编译到Linux/amd64、NetBSD/amd64和裸机amd64平台，并具有基于并发ML的并发性。它以EUPL-1.2-or-later协议授权。\n\nLoko可通过git、GitLab镜像、软件包仓库（Arch Linux AUR、GNU Guix、Docker）以及用于REPL体验的可引导硬盘镜像获取。\n\n开发者手册以PDF格式提供。该编译器定位为一种小众工具，适用于构建静态链接并发应用程序、系统级语言开发、系统研究、Unikernel实验、无锁内核实验、裸机Scheme实验以及新的用户空间到内核接口等任务。\n\nLoko Scheme提供有限的硬件支持，包括网络、磁盘、视频、串口、PS/2和USB设备的驱动程序。它可以在具有传统PIC的真实硬件上工作。可以通过电子邮件提交错误报告，问题可以在comp.lang.scheme或#loko IRC频道中提出。"
  },
  {
    "id": "45518367",
    "title": "How to Run WordPress completely from RAM",
    "url": "https://rickconlee.com/how-to-run-wordpress-completely-from-ram/",
    "summary": "Rick Conlee, channeling his \"Hat Man\" persona, presents a radical approach to WordPress hosting: running the entire stack from RAM. He argues that disk I/O is a performance bottleneck, advocating for RAM-based WordPress and MariaDB to achieve significantly faster loading times.\n\nThe core idea involves creating RAMDisks using `tmpfs` for both the WordPress root directory and the MariaDB data directory. This eliminates disk access for reads and writes, resulting in nanosecond speeds compared to milliseconds with traditional storage. The tradeoff is data volatility – any reboot wipes the data.\n\nTo mitigate data loss, Conlee proposes externalized backups using `rclone` or `mysqldump` to S3-compatible object storage. Restores are handled through Ansible, allowing for rapid recovery. He emphasizes that speed is the primary goal, with durability secondary.\n\nThe stack utilizes Debian 12 on AMD EPYC, chosen for memory bandwidth, L3 cache, and power efficiency. NGINX is manually compiled from the `nginx-quiche` branch (Cloudflare's QUIC and HTTP/3 implementation) with custom modules like Brotli and Lua scripting, optimized for RAM speed and low latency.\n\nAnsible handles provisioning, installing dependencies, compiling NGINX, mounting `tmpfs` volumes, extracting the WordPress archive, configuring PHP-FPM and MariaDB, and setting up systemd overrides. The article provides a quick start guide with instructions to clone a git repository, customize configuration files, and execute the Ansible playbook. The author argues that he has developed this system as a reaction to badly designed WordPress systems.\n",
    "chinese_title": "如何完全从内存运行WordPress",
    "chinese_summary": "瑞克·康利化身“帽子男”，提出一种激进的WordPress托管方案：从RAM运行整个堆栈。他认为磁盘I/O是性能瓶颈，主张使用基于RAM的WordPress和MariaDB，以实现显著更快的加载速度。\n\n其核心思想是使用`tmpfs`为WordPress根目录和MariaDB数据目录创建RAMDisk。这消除了磁盘读写访问，从而获得纳秒级的速度，而传统存储则为毫秒级。其权衡是数据易失性——任何重启都会擦除数据。\n\n为了减轻数据丢失，康利建议使用`rclone`或`mysqldump`进行外部备份到S3兼容的对象存储。通过Ansible处理恢复，从而实现快速恢复。他强调速度是主要目标，而持久性是次要的。\n\n该堆栈在AMD EPYC上使用Debian 12，选择原因是其内存带宽、L3缓存和电源效率。NGINX是从`nginx-quiche`分支（Cloudflare的QUIC和HTTP/3实现）手动编译的，带有Brotli和Lua脚本等自定义模块，针对RAM速度和低延迟进行了优化。\n\nAnsible负责配置、安装依赖项、编译NGINX、挂载`tmpfs`卷、提取WordPress存档、配置PHP-FPM和MariaDB以及设置systemd覆盖。文章提供了一个快速入门指南，其中包含克隆git存储库、自定义配置文件和执行Ansible playbook的说明。作者认为，他开发这个系统是对设计糟糕的WordPress系统的一种回应。"
  },
  {
    "id": "45508611",
    "title": "Konrad Zuse's Helix Tower [pdf]",
    "url": "https://www.iaarc.org/publications/fulltext/The_helix-tower_by_konrad_zuse_automated_con-_and_deconstruction.pdf",
    "summary": "This document, titled \"Konrad Zuse's Helix Tower [pdf]\", appears to be a corrupted or incompletely rendered PDF file. The content consists largely of unreadable binary data and PDF structural elements like xref tables, object definitions, and stream data, rather than human-readable text.\n\nGiven the title, it's likely the document *intended* to describe Konrad Zuse's concept for a \"Helix Tower.\" Konrad Zuse was a pioneer in computer science, and it's possible he also explored architectural designs like this. However, due to the PDF's damaged state, none of the design details, rationale, or any descriptive information about the tower are accessible. The content lacks any coherent sentences or paragraphs that could be interpreted.\n\nIn conclusion, the PDF file is unusable for extracting information about Konrad Zuse's Helix Tower beyond the title itself. The actual content related to the tower design is irretrievable from this damaged file.\n",
    "chinese_title": "康拉德·楚泽的螺旋塔 [pdf]",
    "chinese_summary": "题为“康拉德·楚泽的螺旋塔[pdf]”的这份文档，似乎是一个已损坏或未完全渲染的PDF文件。其内容主要由无法读取的二进制数据和PDF结构元素（如交叉引用表、对象定义和流数据）组成，而非人类可读的文本。\n\n根据标题，该文档*本意*可能是描述康拉德·楚泽的“螺旋塔”概念。康拉德·楚泽是计算机科学的先驱，他可能也探索过像这样的建筑设计。然而，由于PDF文件的损坏状态，关于该塔的设计细节、原理或任何描述性信息都无法访问。其内容缺乏任何可以被解释的连贯句子或段落。\n\n总而言之，除了标题本身，该PDF文件无法用于提取关于康拉德·楚泽螺旋塔的信息。与塔设计相关的实际内容无法从此损坏的文件中恢复。"
  },
  {
    "id": "45556763",
    "title": "Nostr and ATProto (2024)",
    "url": "https://shreyanjain.net/2024/07/05/nostr-and-atproto.html",
    "summary": "This article explores the origins and motivations behind Nostr and ATProto, two decentralized social protocols, contrasting them with centralized platforms like Twitter and decentralized predecessors like ActivityPub (Mastodon) and Secure Scuttlebutt.\n\nThe author argues that Twitter's rise as a global platform exposed inherent problems stemming from centralized control. This led to exploration of decentralized alternatives. ActivityPub prioritized federated, smaller communities, while Scuttlebutt emphasized offline-first, peer-to-peer communication. Both had limitations in scalability and portability, hindering their adoption as a \"decentralized Twitter.\"\n\nATProto and Nostr emerged from the desire to overcome these limitations and create truly portable accounts. Twitter itself recognized the need for decentralization. Both Nostr and ATProto aim to address the shortcomings of centralized social media by offering user-controlled identities and data. The author establishes the groundwork for a deeper comparison of these two protocols, highlighting their shared goal of liberating social networking from corporate control and drawing inspiration from earlier decentralized efforts.\n",
    "chinese_title": "Nostr 和 ATProto (2024)",
    "chinese_summary": "本文探讨了去中心化社交协议Nostr和ATProto的起源和动机，并将它们与Twitter等中心化平台以及ActivityPub (Mastodon)和Secure Scuttlebutt等去中心化前辈进行对比。\n\n作者认为，Twitter作为全球平台的崛起暴露了源于中心化控制的内在问题，这导致了对去中心化替代方案的探索。 ActivityPub优先考虑联合的、较小的社区，而Scuttlebutt则强调离线优先的点对点通信。两者在可扩展性和可移植性方面都存在局限性，阻碍了它们作为“去中心化的Twitter”的普及。\n\nATProto和Nostr的出现源于克服这些局限性并创建真正可移植账户的愿望。 Twitter本身也认识到去中心化的必要性。 Nostr和ATProto都旨在通过提供用户控制的身份和数据来解决中心化社交媒体的缺点。作者为深入比较这两种协议奠定了基础，突出了它们将社交网络从企业控制中解放出来的共同目标，并从早期去中心化努力中汲取灵感。"
  },
  {
    "id": "45553577",
    "title": "Meta Superintelligence's surprising first paper",
    "url": "https://paddedinputs.substack.com/p/meta-superintelligences-surprising",
    "summary": "Okay, I have read the article \"Meta Superintelligence's surprising first paper\" from Padded Inputs. Here's a summary:\n\nThe article discusses Meta's (formerly Facebook) Fundamental AI Research (FAIR) team's first published paper from its GenAI group focused on \"superintelligence\" research. The surprising aspect of the paper, according to the author, is that instead of tackling the immense and abstract challenges of superintelligence safety (like alignment), it focuses on a relatively simple and concrete problem: **formal verification of simple programs against simple specifications.**\n\nSpecifically, the paper explores using AI to prove properties of very basic code, like proving that a program will always return a positive number or that it will not crash under certain conditions. The author emphasizes that this is a *deliberately* narrow and tractable problem.\n\nThe author sees this as a potentially smart and practical approach to the broader problem of AI safety. By starting with formally verifiable small programs, researchers can build a foundation for understanding and verifying the behavior of more complex AI systems. The hope is that techniques developed on these simpler systems can then be scaled and generalized to larger, more complex AI models, ultimately contributing to safer and more reliable superintelligence. The article also acknowledges the long road ahead but praises the move towards a more grounded and verifiable approach to superintelligence safety research. It is argued that this approach could lead to more concrete progress than directly tackling the harder problems of aligning superintelligent AIs with human values.\n",
    "chinese_title": "Meta超人工智能的首篇惊人之作",
    "chinese_summary": "好的，我阅读了Padded Inputs上发表的文章《Meta超智能的令人惊讶的第一篇论文》。以下是摘要：\n\n该文章讨论了Meta（原Facebook）的基础人工智能研究（FAIR）团队发表的其GenAI小组关于“超智能”研究的第一篇论文。作者认为，该论文令人惊讶的地方在于，它并没有解决超智能安全（如对齐）的巨大而抽象的挑战，而是专注于一个相对简单和具体的问题：**针对简单规范的简单程序的正式验证。**\n\n具体来说，该论文探讨了使用人工智能来证明非常基本代码的属性，例如证明程序总是返回一个正数，或者在特定条件下不会崩溃。作者强调，这是一个*故意*缩小和易于处理的问题。\n\n作者认为这是解决更广泛的人工智能安全问题的一种潜在的聪明和实用的方法。通过从形式上可验证的小程序开始，研究人员可以为理解和验证更复杂的人工智能系统的行为奠定基础。希望在这种更简单的系统上开发的技术可以扩展和推广到更大、更复杂的人工智能模型，最终有助于更安全和更可靠的超智能。文章还承认前路漫漫，但赞扬了朝着一种更扎实和可验证的超智能安全研究方法的转变。文章认为，与直接解决将超智能人工智能与人类价值观对齐的更困难的问题相比，这种方法可能带来更具体的进展。"
  },
  {
    "id": "45519310",
    "title": "I have a GPS bike computer",
    "url": "https://utcc.utoronto.ca/~cks/space/blog/tech/WhyIHaveGPSBikeComputer",
    "summary": "Chris Siebenmann's blog, Wandering Thoughts, is blocking users with old or suspicious browsers due to a surge in malicious web crawlers disguised as outdated Chrome versions. This is an effort to reduce the load on the server caused by these crawlers, many of which are gathering data for LLM training.\n\nThe author acknowledges that legitimate users with current browsers might be mistakenly blocked and encourages them to contact him with their browser details, including the User-Agent string, if they encounter this issue.\n\nA specific problem is identified with archive services like archive.today, archive.ph, and archive.is. These services are categorized as indistinguishable from malicious crawlers due to their use of old Chrome User-Agent values, distributed IP address blocks, and potentially falsified reverse DNS entries. Siebenmann recommends using archive.org instead, as it is a better-behaved archiving service. The post is dated February 17, 2025.\n",
    "chinese_title": "我有一个GPS自行车码表。",
    "chinese_summary": "由于伪装成旧版本Chrome的恶意网络爬虫激增，Chris Siebenmann的博客“Wandering Thoughts”正在屏蔽使用旧浏览器或可疑浏览器的用户。此举旨在减轻服务器因这些爬虫造成的负载，其中许多爬虫正在为LLM训练收集数据。\n\n作者承认，使用最新浏览器的合法用户可能被误屏蔽，并鼓励遇到此问题的用户联系他，提供浏览器详细信息，包括User-Agent字符串。\n\n一个具体问题是archive.today、archive.ph和archive.is等存档服务。由于它们使用旧的Chrome User-Agent值、分布式IP地址块以及可能伪造的反向DNS条目，因此这些服务被归类为与恶意爬虫无法区分。Siebenmann建议改用archive.org，因为它是一个行为更好的存档服务。该文章发布于2025年2月17日。"
  },
  {
    "id": "45504540",
    "title": "The Flummoxagon",
    "url": "https://n-e-r-v-o-u-s.com/blog/?p=9827",
    "summary": "Flummoxagon is a new geometric puzzle game that combines Pentominoes and Sudoku elements. Players fit polyhex tiles (shapes made of up to 5 hexagons) into a hexagonal frame, with the constraint that tiles of the same color cannot touch.\n\nThe game comes with 13 gameboards with varying difficulty levels, and new puzzles are added weekly online. It's currently available for $45, with a 20% discount using code FLUMMOX until 10/31/2025.\n\nThe idea originated from Jules's interest in tiling patterns and a desire to create a polyhex puzzle. While uncolored polyhex puzzles exist, the addition of colors and the \"no same colors touching\" rule added a meaningful challenge. However, solving a fully colored puzzle proved too difficult.\n\nThe solution was to provide partially filled gameboards with only one unique solution, making the game more akin to Sudoku. This approach allowed for varying difficulty levels and endless puzzle possibilities.\n\nA crucial aspect is the automatic solver, based on Donald Knuth's Algorithm X and using a \"Dancing Links\" technique for efficient memory usage and faster problem-solving. The algorithm represents the puzzle as an exact cover problem where each cell and tile must be covered exactly once. The addition of optional columns represents the color constraint. The solver is integral to generating new puzzles and grading their difficulty.\n",
    "chinese_title": "弗拉莫克萨冈",
    "chinese_summary": "Flummoxagon 是一款结合了五格拼板和数独元素的新型几何拼图游戏。玩家需将多六边形瓷砖（由最多 5 个六边形组成的形状）放入六边形框架中，并遵守相同颜色的瓷砖不能接触的约束。\n\n该游戏包含 13 个具有不同难度的游戏面板，并且每周都会在线添加新的谜题。目前售价 45 美元，使用代码 FLUMMOX 可享受 20% 的折扣，截止日期为 2025 年 10 月 31 日。\n\n这个想法源于 Jules 对瓷砖铺砌图案的兴趣以及创造多六边形拼图的愿望。虽然存在未着色的多六边形拼图，但添加颜色和“相同颜色不能接触”的规则增加了一个有意义的挑战。然而，解决一个完全着色的拼图被证明太困难了。\n\n解决方案是提供部分填充且只有唯一解的游戏面板，使游戏更类似于数独。这种方法允许不同的难度级别和无限的谜题可能性。\n\n一个关键方面是自动求解器，它基于 Donald Knuth 的 Algorithm X 并使用“Dancing Links”技术来实现高效的内存使用和更快的解决问题速度。该算法将拼图表示为一个精确覆盖问题，其中每个单元格和瓷砖必须被精确覆盖一次。可选列的添加表示颜色约束。求解器对于生成新的谜题和评估它们的难度至关重要。"
  },
  {
    "id": "45536686",
    "title": "Show HN: I extracted BASIC listings for Tim Hartnell's 1986 book",
    "url": "https://github.com/nzduck/hartnell-exploring-ai-book",
    "summary": "This \"Show HN\" post introduces a project that preserves and provides editable electronic copies of the BASIC source code listings from Tim Hartnell's 1986 book, \"Exploring Artificial Intelligence on Your IBM PC.\" The project aims to provide educational and historical access to AI programming examples from the early days of personal computing.\n\nThe repository includes source code organized by chapter, covering topics like machine learning, expert systems, natural language processing, and creative programming. It includes programs like a Tic-Tac-Toe learning game, an ELIZA-style chatbot (DOCTOR), and a Chinese poetry generator.\n\nTo facilitate running the programs, the project includes a ready-to-use runtime environment with PC-BASIC, a GW-BASIC compatible interpreter. Quick start instructions are provided for Linux/macOS and Windows. Alternative BASIC interpreters like DOSBox + GW-BASIC, QB64, and FreeBASIC are also suggested.\n\nThe post highlights the book's focus on fundamental AI concepts through practical BASIC examples. It encourages contributions to improve the code, preserve its original style, and maintain historical accuracy. The project acknowledges Tim Hartnell and others dedicated to preserving vintage computing knowledge. The source code is provided for educational and historical preservation purposes, respecting the book's original copyright.\n",
    "chinese_title": "Show HN: 我提取了蒂姆·哈特内尔1986年书籍中的BASIC程序清单",
    "chinese_summary": "此“Show HN”帖子介绍了一个项目，该项目保存并提供 Tim Hartnell 1986 年出版的《Exploring Artificial Intelligence on Your IBM PC》一书中 BASIC 源代码清单的可编辑电子副本。该项目旨在为早期个人计算领域的 AI 编程示例提供教育和历史访问途径。\n\n该存储库包含按章节组织的源代码，涵盖机器学习、专家系统、自然语言处理和创造性编程等主题。其中包括井字棋学习游戏、ELIZA 式聊天机器人 (DOCTOR) 和中文诗歌生成器等程序。\n\n为了方便程序的运行，该项目包含一个即用型运行时环境，其中包含 PC-BASIC（一个与 GW-BASIC 兼容的解释器）。提供了 Linux/macOS 和 Windows 快速入门说明。还推荐了其他 BASIC 解释器，如 DOSBox + GW-BASIC、QB64 和 FreeBASIC。\n\n该帖子重点介绍了该书通过实用的 BASIC 示例侧重于基本 AI 概念。它鼓励贡献者改进代码，保留其原始风格并保持历史准确性。该项目感谢 Tim Hartnell 和其他致力于保护古董计算知识的人。提供源代码是为了教育和历史保护目的，尊重该书的原始版权。"
  },
  {
    "id": "45521584",
    "title": "C++ Reflection and Qt MOC",
    "url": "https://wiki.qt.io/C%2B%2B_reflection_(P2996)_and_moc",
    "summary": "This article explores the potential of replacing Qt's Meta Object Compiler (moc) with standard C++ reflection features introduced in C++26 and beyond. Moc extracts metadata from QObject subclasses to enable features like signals, slots, and properties at runtime. The goal is to reduce technical debt by leveraging the compiler's capabilities instead of maintaining a custom parser.\n\nThe article identifies the key metadata moc extracts: class name, parent class, properties (Q_PROPERTY), invokables (Q_INVOKABLE, Q_SIGNAL, Q_SLOT), revision number, class info, enums/flags, and interfaces. It then assesses whether C++26 reflection can extract the same information. While class names, parent classes, invokables (with annotations), enums/flags, and interfaces seem achievable, properties (Q_PROPERTY) present a challenge due to the lack of string-based reflection for looking up getter/setter methods by name.\n\nReplacing signal implementations, which involve injecting `QMetaObject::activate` calls, requires token sequence injection (C++29 feature). Finally, generating JSON output with metaobject information is deemed currently impossible with reflection. The article concludes that C++26 reflection alone might be insufficient for replacing moc, requiring features like token injection and possibly string-based lookup, potentially leading to API breaks and build system integration challenges.\n",
    "chinese_title": "C++反射与Qt元对象系统",
    "chinese_summary": "本文探讨了使用 C++26 及更高版本中引入的标准 C++ 反射特性来替代 Qt 的元对象编译器 (moc) 的潜力。 Moc 从 QObject 子类中提取元数据，以在运行时启用信号、槽和属性等特性。 目标是通过利用编译器的功能而不是维护自定义解析器来减少技术债务。\n\n本文确定了 moc 提取的关键元数据：类名、父类、属性 (Q_PROPERTY)、可调用方法 (Q_INVOKABLE、Q_SIGNAL、Q_SLOT)、修订号、类信息、枚举/标志和接口。 然后评估 C++26 反射是否可以提取相同的信息。 虽然类名、父类、可调用方法（带有注解）、枚举/标志和接口似乎可以实现，但由于缺乏基于字符串的反射来按名称查找 getter/setter 方法，属性 (Q_PROPERTY) 提出了挑战。\n\n替换信号实现（涉及注入 `QMetaObject::activate` 调用）需要令牌序列注入（C++29 特性）。 最后，使用元对象信息生成 JSON 输出被认为目前使用反射是不可能的。 文章得出结论，仅凭 C++26 反射可能不足以替代 moc，需要令牌注入和可能基于字符串的查找等特性，这可能会导致 API 中断和构建系统集成挑战。"
  },
  {
    "id": "45558160",
    "title": "Extreme weather caused more than $100B in damage by June",
    "url": "https://www.livescience.com/planet-earth/climate-change/extreme-weather-caused-more-than-usd100-billion-in-damage-by-june-smashing-us-records",
    "summary": "The first half of 2025 saw record-breaking extreme weather damage in the U.S., estimated between $93 billion and $126 billion, surpassing the previous record of $57 billion (inflation-adjusted) in 2023. This surge is attributed to events like the Los Angeles wildfires (the costliest in history), and a high frequency of other disasters, including tornadoes, floods, and winter storms. Climate change and land-use changes are major drivers behind this trend.\n\nExperts emphasize that warmer temperatures exacerbate extreme weather, causing more intense storms with heavier rainfall. Building in disaster-prone areas, like coastlines and flammable forests, further amplifies economic losses. The \"expanding bull's-eye effect,\" caused by urbanization and increased population density, increases the likelihood of disasters impacting populated areas and causing more damage.\n\nWhile fatalities haven't risen significantly due to improved forecasting and warning systems, experts worry that climate change could lead to a rise in deaths, particularly from heat waves and floods. Proposed government budget cuts to FEMA, the Forest Service, and NOAA are a concern, as they may hinder disaster preparedness and response, potentially leading to even greater losses in the future.\n",
    "chinese_title": "六月前极端天气已造成超过千亿美元的损失。",
    "chinese_summary": "2025上半年美国极端天气灾害损失创纪录，估计在930亿至1260亿美元之间，超过2023年创下的570亿美元（经通货膨胀调整后）的纪录。 这次激增归因于洛杉矶野火（历史上损失最大的一次）以及其他灾害的高发，包括龙卷风、洪水和冬季风暴。 气候变化和土地利用变化是这一趋势的主要驱动因素。\n\n专家强调，气温升高加剧了极端天气，导致更强的风暴和更大的降雨量。 在易受灾地区（如海岸线和易燃森林）的建设进一步扩大了经济损失。 城市化和人口密度增加造成的“靶心扩大效应”增加了灾害影响人口稠密地区并造成更大损失的可能性。\n\n虽然由于改进的预测和预警系统，死亡人数没有显著增加，但专家担心气候变化可能导致死亡人数增加，特别是因热浪和洪水造成的死亡。拟议的政府削减对联邦紧急事务管理局（FEMA）、林务局（Forest Service）和国家海洋和大气管理局（NOAA）的预算令人担忧，因为这可能会阻碍灾害准备和应对工作，从而可能导致未来更大的损失。"
  },
  {
    "id": "45555308",
    "title": "Pipelining in psql (PostgreSQL 18)",
    "url": "https://postgresql.verite.pro/blog/2025/10/01/psql-pipeline.html",
    "summary": "This article introduces pipelining in psql (PostgreSQL 18), a client-side feature that significantly improves query throughput by sending multiple queries to the server without waiting for individual results. Pipelining allows the client, network, and server to work in parallel, optimizing network utilization by grouping queries into fewer packets.\n\nWhile pipelining has been technically possible since PostgreSQL 7.4, it became accessible through libpq in PostgreSQL 14. Now, PostgreSQL 18 integrates pipelining directly into `psql` with the `\\startpipeline`, `\\endpipeline`, `\\syncpipeline`, and `\\getresults` commands. Pipelining initiates an implicit transaction; a failed query rolls back all changes since the start or last synchronization point.\n\nThe article highlights the performance benefits with a test case involving `INSERT ... ON CONFLICT` queries simulating device data imports. The test compares performance with and without pipelining across different network latencies (localhost, LAN, WAN). The results show substantial speedups, ranging from 1.5x to 71x depending on batch size and network conditions, demonstrating improved network utilization.\n\nThe author concludes that pipelining is especially beneficial when queries are independent and don't require intermediate results. While alternative optimization strategies exist, like adding multiple rows to `VALUES` clauses, pipelining offers a simpler and potentially more adaptable approach, particularly in complex client-side logic scenarios. Importantly, the `psql` pipelining commands do not require a PostgreSQL 18 server and can be used with older server versions as long as the `psql` client is updated.\n",
    "chinese_title": "psql（PostgreSQL 18）中的流水线",
    "chinese_summary": "本文介绍了psql (PostgreSQL 18) 中的流水线技术，这是一项客户端功能，通过在无需等待各个结果的情况下向服务器发送多个查询，从而显著提高查询吞吐量。流水线技术允许客户端、网络和服务器并行工作，并通过将查询分组到更少的数据包中来优化网络利用率。\n\n虽然从 PostgreSQL 7.4 开始，流水线技术在技术上已经可行，但它在 PostgreSQL 14 中通过 libpq 变得可用。现在，PostgreSQL 18 将流水线技术直接集成到 `psql` 中，并提供了 `\\startpipeline`、`\\endpipeline`、`\\syncpipeline` 和 `\\getresults` 命令。流水线技术会启动一个隐式事务；失败的查询会回滚自开始或上次同步点以来的所有更改。\n\n本文重点介绍了流水线技术的性能优势，并提供了一个涉及 `INSERT ... ON CONFLICT` 查询的测试用例，该用例模拟设备数据导入。该测试比较了在不同网络延迟（localhost、LAN、WAN）下使用和不使用流水线技术时的性能。结果显示了显著的加速，范围从 1.5 倍到 71 倍不等，具体取决于批量大小和网络条件，这表明网络利用率得到了提高。\n\n作者总结说，当查询独立且不需要中间结果时，流水线技术尤其有益。虽然存在其他优化策略，例如向 `VALUES` 子句添加多行，但流水线技术提供了一种更简单且可能更具适应性的方法，尤其是在复杂的客户端逻辑场景中。重要的是，`psql` 流水线命令不需要 PostgreSQL 18 服务器，只要更新了 `psql` 客户端，就可以与旧版本的服务器一起使用。"
  },
  {
    "id": "45559603",
    "title": "GitHub Copilot: Remote Code Execution via Prompt Injection (CVE-2025-53773)",
    "url": "https://embracethered.com/blog/posts/2025/github-copilot-remote-code-execution-via-prompt-injection/",
    "summary": "This article details a critical vulnerability (CVE-2025-53773) found in GitHub Copilot and VS Code that allows remote code execution via prompt injection. The exploit involves injecting malicious instructions, often invisibly, into a project's source code or other accessible content. This injection modifies the `.vscode/settings.json` file to enable \"YOLO mode\" (`\"chat.tools.autoApprove\": true`), which disables user confirmations and allows Copilot to execute commands without approval.\n\nThe attacker can then leverage this access to execute arbitrary code on the developer's machine, potentially adding it to a botnet, installing malware, or spreading the malicious code to other Git repositories and developers, creating an \"AI virus.\" The article showcases this with examples of running a calculator, changing the VS Code theme, and establishing a command-and-control connection.\n\nThe vulnerability extends beyond simply enabling YOLO mode, encompassing the ability to modify other configuration files like `.vscode/tasks.json` or manipulate MCP server settings for code execution.\n\nThe author recommends preventing AI agents from modifying files without explicit user approval and suggests displaying a diff for the user to review before changes are applied. The vulnerability was reported to Microsoft on June 29, 2025, and patched in August 2025. Other researchers, Markus Vervier from Persistent Security and Ari Marzuk, independently discovered and reported the same issue.\n",
    "chinese_title": "GitHub Copilot：通过提示注入实现远程代码执行 (CVE-2025-53773)",
    "chinese_summary": "本文详细介绍了一个在 GitHub Copilot 和 VS Code 中发现的严重漏洞 (CVE-2025-53773)，该漏洞允许通过提示注入进行远程代码执行。该漏洞利用方式包括将恶意指令（通常是不可见的）注入到项目的源代码或其他可访问的内容中。这种注入会修改 `.vscode/settings.json` 文件以启用“YOLO 模式” (`\"chat.tools.autoApprove\": true`)，从而禁用用户确认并允许 Copilot 在未经批准的情况下执行命令。\n\n攻击者可以利用此权限在开发人员的机器上执行任意代码，可能将其添加到僵尸网络、安装恶意软件或将恶意代码传播到其他 Git 存储库和开发人员，从而创建“AI 病毒”。本文通过运行计算器、更改 VS Code 主题和建立命令和控制连接的示例展示了这一点。\n\n该漏洞不仅限于启用 YOLO 模式，还包括修改其他配置文件（如 `.vscode/tasks.json`）或操纵 MCP 服务器设置以执行代码的能力。\n\n作者建议防止 AI 代理在未经明确用户批准的情况下修改文件，并建议在应用更改之前显示差异供用户审查。该漏洞于 2025 年 6 月 29 日报告给微软，并于 2025 年 8 月进行了修复。Persistent Security 的 Markus Vervier 和 Ari Marzuk 等其他研究人员也独立发现并报告了相同的问题。"
  },
  {
    "id": "45523370",
    "title": "I/O Multiplexing (select vs. poll vs. epoll/kqueue)",
    "url": "https://nima101.github.io/io_multiplexing",
    "summary": "This article explains I/O multiplexing, a technique for handling multiple I/O events with a single event loop, focusing on `select`, `poll`, `kqueue`, and `epoll`.\n\nIt begins by introducing `select`, highlighting its O(n) performance (where n is the highest file descriptor being watched) due to looping through all possible file descriptors. It also points out `select`'s limitation of `FD_SETSIZE` (typically 1024) which, if exceeded, can lead to crashes by writing to arbitrary memory locations.\n\nNext, the article discusses `poll` as an improvement over `select`. `poll` addresses the FD limit and offers more event types. However, it still suffers from O(n) performance as it iterates over all provided file descriptors.\n\nFinally, it delves into `kqueue` (macOS) and `epoll` (Linux) as scalable event notification mechanisms. `kqueue` uses a `kevent` structure to represent events (identified by file descriptor and filter), flags to manage events in the queue (add, delete, enable, disable), and the `kqueue` itself to hold registered events. The `kevent()` system call is used to add/modify/delete events and wait/read occurred events. The article concludes with a basic event loop structure demonstrating how to wait for events and handle them accordingly. `kqueue` and `epoll` offer significantly better performance than `select` and `poll`, particularly for high concurrency scenarios.\n",
    "chinese_title": "I/O多路复用 (select, poll, epoll/kqueue)",
    "chinese_summary": "本文阐述了I/O多路复用，这是一种使用单个事件循环处理多个I/O事件的技术，重点介绍了`select`、`poll`、`kqueue`和`epoll`。\n\n首先介绍了`select`，强调了其O(n)的性能（其中n是被监视的最高文件描述符），因为它会循环遍历所有可能的文件描述符。文章还指出了`select`的`FD_SETSIZE`限制（通常为1024），如果超出此限制，可能会因写入任意内存位置而导致崩溃。\n\n接下来，文章讨论了`poll`，作为对`select`的改进。`poll`解决了FD限制，并提供了更多事件类型。但是，它仍然存在O(n)的性能问题，因为它会遍历所有提供的文件描述符。\n\n最后，文章深入探讨了`kqueue` (macOS) 和 `epoll` (Linux) 作为可扩展的事件通知机制。`kqueue` 使用 `kevent` 结构来表示事件（由文件描述符和过滤器标识），使用标志来管理队列中的事件（添加、删除、启用、禁用），并使用 `kqueue` 本身来保存注册的事件。`kevent()` 系统调用用于添加/修改/删除事件并等待/读取发生的事件。文章最后介绍了一个基本的事件循环结构，演示了如何等待事件并相应地处理它们。`kqueue`和`epoll` 提供了比 `select` 和 `poll` 明显更好的性能，尤其是在高并发场景下。"
  },
  {
    "id": "45551260",
    "title": "Anthropic's Prompt Engineering Tutorial",
    "url": "https://github.com/anthropics/prompt-eng-interactive-tutorial",
    "summary": "This document introduces Anthropic's interactive tutorial on prompt engineering for Claude, specifically focusing on optimizing prompts for the Claude 3 family of models, with Haiku being the primary model used in the exercises. The tutorial aims to equip users with the skills to craft effective prompts, identify and address common issues, understand Claude's capabilities and limitations, and develop robust prompts for various use cases.\n\nThe course is structured into nine chapters, progressively moving from beginner to advanced topics, and includes exercises for practical application. It emphasizes hands-on learning through \"Example Playground\" sections within each lesson where users can experiment with prompt variations and see the impact on Claude's responses. An answer key is provided for self-assessment.\n\nThe tutorial covers key areas such as basic prompt structure, clarity and directness, assigning roles, separating data from instructions, formatting output, encouraging step-by-step reasoning (\"precognition\"), using examples, mitigating hallucinations, and building complex prompts for industry-specific applications (chatbot, legal services, financial services, and coding).\n\nThe tutorial also mentions an appendix on advanced prompting techniques like chaining prompts, tool use, and search & retrieval. The document suggests that the tutorial is available in a more user-friendly format on Google Sheets using Anthropic's Claude for Sheets extension. The goal is for users to master prompt engineering techniques to effectively leverage Claude's capabilities.\n",
    "chinese_title": "Anthropic的提示工程教程",
    "chinese_summary": "本文介绍了Anthropic关于Claude提示工程的互动式教程，重点在于优化Claude 3系列模型的提示，其中Haiku是练习中使用的主要模型。本教程旨在帮助用户掌握编写有效提示的技能，识别和解决常见问题，了解Claude的能力和局限性，并为各种用例开发稳健的提示。\n\n本课程分为九个章节，循序渐进地从初学者到高级主题，并包含实践练习。 它强调通过每节课中的“示例游乐场”部分进行动手学习，用户可以在其中尝试提示变体并了解其对Claude响应的影响。 提供答案以供自我评估。\n\n本教程涵盖的关键领域包括基本提示结构、清晰度和直接性、分配角色、将数据与指令分离、格式化输出、鼓励逐步推理（“预知”）、使用示例、减轻幻觉以及构建用于行业特定应用程序（聊天机器人、法律服务、金融服务和编码）的复杂提示。\n\n本教程还提到了一个关于高级提示技术的附录，例如链接提示、工具使用和搜索与检索。 该文档建议可以在Google Sheets上使用Anthropic的Claude for Sheets扩展程序以更方便用户友好的格式访问该教程。 目标是让用户掌握提示工程技术，从而有效地利用Claude的功能。"
  },
  {
    "id": "45553422",
    "title": "CamoLeak: Critical GitHub Copilot Vulnerability Leaks Private Source Code",
    "url": "https://www.legitsecurity.com/blog/camoleak-critical-github-copilot-vulnerability-leaks-private-source-code",
    "summary": "In June 2025, a critical vulnerability (CVSS 9.6) named \"CamoLeak\" was discovered in GitHub Copilot Chat, allowing for the silent exfiltration of secrets and source code from private repositories and granting control over Copilot's responses. The attack combined a novel Content Security Policy (CSP) bypass leveraging GitHub's own Camo infrastructure with remote prompt injection.\n\nThe attacker injected prompts into Copilot's context via hidden comments in pull request descriptions, influencing Copilot's responses for other users viewing the same page. This injection allowed the attacker to instruct Copilot to access the victim user's private repositories.\n\nGitHub's CSP, designed to prevent arbitrary data exfiltration through images, was bypassed by leveraging GitHub's Camo image proxy. The attacker pre-generated Camo URLs for individual letters and symbols, creating a \"dictionary.\" The injected prompt then instructed Copilot to render the desired data (e.g., code, issue descriptions, secrets like \"AWS_KEY\") as \"ASCII art\" composed of these Camo URLs, effectively leaking the data through image requests to the attacker's server.\n\nThe attacker demonstrated the ability to steal sensitive information, including a zero-day vulnerability description from a private repository, and exfiltrate the results of a codebase search for \"AWS_KEY.\"  GitHub fixed the vulnerability by disabling image rendering within Copilot Chat.\n",
    "chinese_title": "CamoLeak：GitHub Copilot 严重漏洞泄露私有源代码",
    "chinese_summary": "2025年6月，GitHub Copilot Chat中发现一个名为“CamoLeak”的严重漏洞（CVSS 9.6），该漏洞允许从私有仓库中静默泄露密钥和源代码，并控制Copilot的响应。该攻击结合了一种利用GitHub自身Camo基础设施的新型内容安全策略（CSP）绕过技术和远程提示注入。\n\n攻击者通过拉取请求描述中的隐藏注释将提示注入到Copilot的上下文中，从而影响其他用户查看同一页面时Copilot的响应。这种注入允许攻击者指示Copilot访问受害者用户的私有仓库。\n\nGitHub的CSP旨在防止通过图像进行任意数据泄露，但攻击者通过利用GitHub的Camo图像代理绕过了该策略。攻击者预先生成了用于单个字母和符号的Camo URL，创建了一个“字典”。然后，注入的提示指示Copilot将所需数据（例如，代码、问题描述、密钥如“AWS_KEY”）渲染为由这些Camo URL组成的“ASCII艺术”，从而有效地通过对攻击者服务器的图像请求泄露数据。\n\n攻击者演示了窃取敏感信息的能力，包括从私有仓库泄露零日漏洞描述，以及泄露代码库中搜索“AWS_KEY”的结果。GitHub通过禁用Copilot Chat中的图像渲染修复了该漏洞。"
  },
  {
    "id": "45557267",
    "title": "Quantification of fibrinaloid clots in plasma from pediatric Long COVID patients",
    "url": "https://www.researchsquare.com/article/rs-7483367/v1",
    "summary": "This preprint article investigates the potential of quantifying fibrinaloid microclots in the plasma of pediatric Long COVID (LC) patients as a diagnostic marker. The authors developed a novel microfluidic device to overcome the limitations of existing qualitative methods for microclot assessment. They compared microclot levels in plasma samples from 45 LC patients and 14 healthy children, finding significantly higher microclot levels in the LC group.\n\nThe study demonstrates a high accuracy (94%) of the microfluidic device in distinguishing LC patients from healthy controls, significantly surpassing the accuracy of traditional slide-based microclot counting (66%). Interestingly, the highest microclot counts were observed in LC patients exhibiting persistent SARS-CoV-2 spike protein in their blood.\n\nThe research suggests that quantifying fibrinaloid microclots using the microfluidic assay could serve as a valuable diagnostic tool for Long COVID in children, potentially improving the speed and accuracy of diagnosis and facilitating earlier intervention. The authors propose further studies to validate the assay's utility as a screening test in larger populations and to evaluate its effectiveness in monitoring treatment responses.\n",
    "chinese_title": "儿科长新冠患者血浆中纤维蛋白样血凝块的定量",
    "chinese_summary": "本预印本文章研究了量化小儿长新冠(LC)患者血浆中纤维蛋白样微血栓作为诊断标志物的潜力。作者开发了一种新型微流控装置，以克服现有微血栓评估定性方法的局限性。他们比较了45名LC患者和14名健康儿童血浆样本中的微血栓水平，发现LC组的微血栓水平显著较高。\n\n该研究表明，该微流控装置在区分LC患者和健康对照者方面具有高准确率（94%），显著超过了传统基于载玻片的微血栓计数（66%）的准确率。有趣的是，在血液中持续存在SARS-CoV-2刺突蛋白的LC患者中观察到了最高的微血栓计数。\n\n该研究表明，使用微流控检测量化纤维蛋白样微血栓可以作为儿童长新冠的一种有价值的诊断工具，可能提高诊断的速度和准确性，并促进早期干预。作者建议进行进一步的研究，以验证该检测方法作为大规模人群筛查测试的效用，并评估其在监测治疗反应方面的有效性。"
  },
  {
    "id": "45555523",
    "title": "Show HN: I made an esoteric programming language that's read like a spellbook",
    "url": "https://github.com/sirbread/spellscript",
    "summary": "This \"Show HN\" post introduces Spellscript, an esoteric programming language designed to read like magical incantations from a spellbook. Code is written in \"grimoires\" and aims for a free-form, English-like style, eschewing strict newline or indentation requirements.\n\nThe language supports variables, dynamic typing, arrays, functions, conditionals, loops, string manipulation, type conversion, user input, and output. The post provides basic syntax examples translating traditional programming concepts like variable declaration, printing, input, strings, arrays, if statements, and loops into Spellscript. It also includes a table outlining common operators.\n\nThe author provides instructions for running Spellscript (requiring Python 3.6+) and links to documentation and examples within the repository. The limitations of the language, such as the absence of nested arrays, string indexing, modulo operator, break/continue statements, recursion, and comments, are presented as intentional design choices. The language requires all functions to have at least one parameter and lacks a null concept. The post acknowledges inspiration from the Muffin programming language and the use of AI for debugging purposes.\n",
    "chinese_title": "Show HN: 我做了一个像魔法书一样阅读的深奥编程语言",
    "chinese_summary": "这篇“Show HN”帖子介绍了一种名为 Spellscript 的深奥编程语言，其设计目的是使其读起来像魔法书中的魔法咒语。代码写在“魔法书中”，旨在采用自由形式、类似英语的风格，避免严格的换行或缩进要求。\n\n该语言支持变量、动态类型、数组、函数、条件语句、循环、字符串操作、类型转换、用户输入和输出。该帖子提供了基本语法示例，将传统的编程概念（如变量声明、打印、输入、字符串、数组、if 语句和循环）翻译成 Spellscript。它还包括一个概述常用运算符的表格。\n\n作者提供了运行 Spellscript 的说明（需要 Python 3.6+），并链接到存储库中的文档和示例。该语言的局限性，例如缺少嵌套数组、字符串索引、模运算符、break/continue 语句、递归和注释，被认为是故意的设计选择。该语言要求所有函数至少有一个参数，并且缺乏空值的概念。该帖子承认灵感来自 Muffin 编程语言，并使用人工智能进行调试。"
  },
  {
    "id": "45553783",
    "title": "Vancouver Stock Exchange: Scam capital of the world (1989) [pdf]",
    "url": "https://scamcouver.wordpress.com/wp-content/uploads/2012/04/scam-capital.pdf",
    "summary": "This document is a PDF containing an article titled \"Vancouver Stock Exchange: Scam capital of the world (1989).\" However, the provided content is not the actual text of the article, but rather the underlying PDF code. The visible part contains file headers and embedded data that, when processed by a PDF reader, would be interpreted as formatting, images, and ultimately the text of the article.\n\nTherefore, without the ability to properly render and extract the article's textual content from the PDF code, it's impossible to provide an accurate summary of its main points and key information. The title suggests the article likely discusses fraudulent activities and the VSE's reputation as a hub for scams during that period. But I cannot provide any details from the context given.\n",
    "chinese_title": "温哥华证券交易所：世界诈骗之都 (1989) [pdf]",
    "chinese_summary": "此文档是一个PDF文件，其中包含一篇题为《温哥华证券交易所：世界诈骗之都（1989）》的文章。然而，提供的内容并非文章的实际文本，而是底层的PDF代码。可见部分包含文件头和嵌入数据，PDF阅读器处理这些数据后，会将其解释为格式、图像，最终呈现为文章的文本。\n\n因此，在无法正确渲染并从PDF代码中提取文章的文本内容的情况下，无法提供对其主要观点和关键信息的准确总结。标题暗示该文章可能讨论了欺诈活动以及当时温哥华证券交易所作为诈骗中心的名声。但根据现有内容，我无法提供任何细节。"
  },
  {
    "id": "45520585",
    "title": "Show HN: A Lisp Interpreter for Shell Scripting",
    "url": "https://github.com/gue-ni/redstart",
    "summary": "Redstart is a lightweight Lisp interpreter designed for shell scripting, allowing users to combine the expressiveness of Lisp with the practicality of Unix shell commands. Instead of writing shell scripts in Bash, you can use Lisp syntax. It can be installed with a simple bash command.\n\nKey features include:\n\n*   **Shell Command Execution:** Run shell commands using the `sh` function, capturing output and piping between processes.\n*   **Variable Definition:** Define variables to store command outputs.\n*   **Function Definition:** Create Lisp functions for code reusability and abstraction.\n*   **Control Flow:** Implement logic and control flow using Lisp constructs like `if`, `and`, and `for-each`.\n*   **String Manipulation:** Includes string functions like `strcat` and `split`.\n*   **Advanced Lisp Features:** Supports recursive functions, closures, and lambda expressions.\n\nThe provided examples demonstrate common shell scripting tasks, such as piping commands, defining functions for tasks like file uploading via `scp`, and utilizing control flow for iterative tasks. The documentation covers getting started and shell scripting with Redstart.\n",
    "chinese_title": "Show HN: 用于Shell脚本的Lisp解释器",
    "chinese_summary": "Redstart：用于 Shell 脚本的轻量级 Lisp 解释器，让用户能够将 Lisp 的表达能力与 Unix Shell 命令的实用性相结合。您可以使用 Lisp 语法代替 Bash 编写 Shell 脚本，并且可以通过简单的 Bash 命令进行安装。\n\n主要功能包括：\n\n*   **Shell 命令执行：** 使用 `sh` 函数运行 Shell 命令，捕获输出并在进程间进行管道传输。\n*   **变量定义：** 定义变量以存储命令输出。\n*   **函数定义：** 创建 Lisp 函数以实现代码重用和抽象。\n*   **控制流：** 使用 Lisp 结构（如 `if`、`and` 和 `for-each`）实现逻辑和控制流。\n*   **字符串操作：** 包括 `strcat` 和 `split` 等字符串函数。\n*   **高级 Lisp 功能：** 支持递归函数、闭包和 lambda 表达式。\n\n提供的示例演示了常见的 Shell 脚本任务，例如管道命令、定义用于诸如通过 `scp` 上传文件等任务的函数，以及利用控制流进行迭代任务。 文档涵盖 Redstart 的入门和 Shell 脚本编写。"
  },
  {
    "id": "45552049",
    "title": "A Guide for WireGuard VPN Setup with Pi-Hole Adblock and Unbound DNS",
    "url": "https://psyonik.tech/posts/a-guide-for-wireguard-vpn-setup-with-pi-hole-adblock-and-unbound-dns/",
    "summary": "This article provides a comprehensive guide for setting up a WireGuard VPN with Pi-Hole adblocking and Unbound DNS on a VPS, offering granular control over DNS queries and network connectivity. It begins by outlining the author's motivation for transitioning from a commercial VPN provider, emphasizing the desire for greater control and learning opportunities.\n\nThe article details a hub-and-spoke network topology with a VPS acting as a central point for inter-device communication and internet access. It includes a practical network setup with example IP addresses for a VPN server, home server, desktop, laptop, and mobile devices.\n\nThe guide then covers essential server setup steps, including selecting a suitable VPS provider based on proximity, bandwidth, and performance. It emphasizes the importance of initial setup, especially SSH key authentication for improved security and ease of access. The article also explains how to configure automatic updates, set the system hostname, and enhance SSH security by disabling password authentication, changing the default port, and creating a new user with sudo privileges.\n\nFinally, it details how to configure the Uncomplicated Firewall (UFW) to restrict incoming connections to essential ports and enable logging for security purposes. The article assumes a basic understanding of command-line interfaces and includes specific commands and configuration file examples for Ubuntu 24.04.\n",
    "chinese_title": "使用 Pi-Hole 广告拦截和 Unbound DNS 设置 WireGuard VPN 指南",
    "chinese_summary": "本文全面介绍了如何在 VPS 上设置 WireGuard VPN，并集成 Pi-Hole 广告拦截和 Unbound DNS，从而实现对 DNS 查询和网络连接的精细控制。文章首先阐述了作者从商业 VPN 提供商转型的原因，强调了对更大控制权和学习机会的渴望。\n\n文章详细介绍了中心辐射型网络拓扑，其中 VPS 作为设备间通信和互联网访问的中心点。它包含一个实用的网络设置，其中包含 VPN 服务器、家庭服务器、桌面、笔记本电脑和移动设备的示例 IP 地址。\n\n该指南随后介绍了必要的服务器设置步骤，包括根据位置、带宽和性能选择合适的 VPS 提供商。它强调了初始设置的重要性，尤其是 SSH 密钥身份验证，以提高安全性和易于访问性。文章还解释了如何配置自动更新、设置系统主机名以及通过禁用密码身份验证、更改默认端口和创建具有 sudo 权限的新用户来增强 SSH 安全性。\n\n最后，文章详细介绍了如何配置简易防火墙 (UFW) 以限制传入连接到基本端口，并启用日志记录以实现安全目的。本文假定读者对命令行界面有基本的了解，并包含 Ubuntu 24.04 的特定命令和配置文件示例。"
  },
  {
    "id": "45556741",
    "title": "Why it took 4 years to get a lock files specification",
    "url": "https://snarky.ca/why-it-took-4-years-to-get-a-lock-files-specification/",
    "summary": "This blog post details the four-year journey to create a lock file specification for Python, culminating in PEP 751 and the `pylock.toml` format. The author recounts the challenges of defining what a lock file should contain: dependencies, installation methods (source trees, sdists, wheels), version specifiers, and handling optional and platform-specific dependencies. The goal was to create a human-readable, secure, fast, and cross-language compatible format.\n\nThe journey was fraught with setbacks. Initial attempts, including PEP 665, were rejected due to limitations like only supporting wheels and not addressing build backend dependencies. The author then took on the project solo, developing proof-of-concept code for metadata retrieval, dependency resolution, and wheel reading.\n\nThe emergence of `uv` added complexity, and disagreements arose concerning features like optional version specifications and multi-use lock files. After numerous drafts, intense discussions (over 1.8k posts!), and strict deadlines, PEP 751 was finally accepted by integrating feedback from PDM, Poetry, and uv, by balancing the needs of the different tools.\n\nThe result is a multi-use lock file format that is now being adopted by tools like PDM, uv, and pip. Despite the successful outcome, the author expresses exhaustion and plans to shift focus to other areas of Python development.\n",
    "chinese_title": "为何花了四年才出锁定文件规范",
    "chinese_summary": "本文详细介绍了创建 Python 锁文件规范的四年历程，最终形成了 PEP 751 和 `pylock.toml` 格式。作者回顾了定义锁文件应包含内容的挑战：依赖项、安装方法（源码树、sdists、wheels）、版本说明符，以及处理可选和平台特定依赖项。目标是创建一个人类可读、安全、快速且跨语言兼容的格式。\n\n这段旅程充满了挫折。最初的尝试，包括 PEP 665，因仅支持 wheels 且未解决构建后端依赖项等限制而被拒绝。随后，作者独自承担了这个项目，为元数据检索、依赖项解析和 wheel 读取开发了概念验证代码。\n\n`uv` 的出现增加了复杂性，并且在诸如可选版本说明和多用途锁文件等功能方面出现了分歧。经过多次草稿、激烈的讨论（超过 1.8k 个帖子！）和严格的截止日期后，PEP 751 最终通过整合来自 PDM、Poetry 和 uv 的反馈，以及平衡不同工具的需求而被采纳。\n\n最终成果是一个多用途锁文件格式，现在正被 PDM、uv 和 pip 等工具采用。尽管取得了成功，作者表示精疲力竭，并计划将重心转移到 Python 开发的其他领域。"
  },
  {
    "id": "45506055",
    "title": "The World's 2.75B Buildings",
    "url": "https://tech.marksblogg.com/building-footprints-gba.html",
    "summary": "This article details the process of working with the \"GlobalBuildingAtlas\" (GBA) dataset, a collection estimating the number of buildings on Earth at 2.75 billion. The author focuses on the LoD1 dataset, which consists of 1.1 TB of uncompressed GeoJSON files.\n\nThe author describes downloading and converting these files into a more manageable 210 GB of Parquet files, now hosted on AWS S3. They outline their powerful workstation setup, equipped with a high-end CPU, ample RAM, and a fast SSD, and the software tools used for analysis, including Python, DuckDB with spatial extensions, and QGIS.\n\nThe article provides step-by-step instructions on how to download the GBA data using a custom URL within QGIS via the GeoParquet Downloader plugin. It also details how to visualize the data in 2.5D and identify features.\n\nThe author also describes the ETL process used to convert the GeoJSON data to Parquet format. This involved downloading the GeoJSON files, handling server outages through retries, extracting the data, reprojecting it to EPSG:4326, creating bounding boxes, and spatially sorting the data into ZStandard-compressed Parquet files. The article analyzes the dataset's structure, file sizes, and regional distribution using DuckDB.\n",
    "chinese_title": "全球27.5亿栋建筑",
    "chinese_summary": "本文详细介绍了使用“全球建筑图集”(GBA)数据集的过程，该数据集估计地球上的建筑物数量为27.5亿栋。作者重点关注LoD1数据集，它由1.1TB的未压缩GeoJSON文件组成。\n\n作者描述了如何下载这些文件并将其转换为更易于管理的210GB Parquet文件，这些文件现在托管在AWS S3上。他们概述了其强大的工作站设置，配备高端CPU、充足的RAM和快速SSD，以及用于分析的软件工具，包括Python、带有空间扩展的DuckDB和QGIS。\n\n本文提供了逐步说明，介绍如何使用QGIS内的自定义URL通过GeoParquet Downloader插件下载GBA数据。它还详细介绍了如何在2.5D中可视化数据并识别要素。\n\n作者还描述了用于将GeoJSON数据转换为Parquet格式的ETL过程。这包括下载GeoJSON文件、通过重试处理服务器中断、提取数据、将其重新投影到EPSG:4326、创建边界框以及将数据空间排序到ZStandard压缩的Parquet文件中。本文使用DuckDB分析了数据集的结构、文件大小和区域分布。"
  },
  {
    "id": "45553701",
    "title": "Paper2video: Automatic video generation from scientific papers",
    "url": "https://arxiv.org/abs/2510.05096",
    "summary": "This paper introduces \"Paper2Video,\" a novel approach for automatic video generation from scientific papers, addressing the labor-intensive process of creating academic presentation videos. The authors highlight the challenges of generating these videos, including the need to integrate dense multi-modal information (text, figures, tables) and coordinate multiple channels like slides, subtitles, speech, and a talking head.\n\nTo facilitate research in this area, they present a benchmark dataset called Paper2Video, consisting of 101 research papers paired with author-created presentation videos, slides, and speaker metadata. They also propose four evaluation metrics – Meta Similarity, PresentArena, PresentQuiz, and IP Memory – to assess the faithfulness and informativeness of generated videos.\n\nBuilding on this foundation, the authors introduce PaperTalker, a multi-agent framework designed for academic presentation video generation. PaperTalker leverages techniques like slide generation with layout refinement using tree search visual choice, cursor grounding, subtitling, speech synthesis, and talking-head rendering. The system is designed for efficiency by parallelizing slide-wise generation.\n\nExperiments using Paper2Video demonstrate that PaperTalker produces presentation videos that are more faithful and informative than existing baselines. The authors make their dataset, agent, and code publicly available, marking a step towards automated and readily usable academic video generation.\n",
    "chinese_title": "Paper2video: 从科学论文自动生成视频",
    "chinese_summary": "本文介绍了一种名为“Paper2Video”的新方法，该方法旨在从科学论文中自动生成视频，从而解决创建学术演示视频过程中耗费大量人力的难题。作者强调了生成这些视频的挑战，包括需要整合密集的多种模态信息（文本、图表）以及协调幻灯片、字幕、语音和虚拟形象等多个通道。\n\n为了促进该领域的研究，他们提出了一个名为Paper2Video的基准数据集，其中包含101篇研究论文，并配有作者创建的演示视频、幻灯片和演讲者元数据。他们还提出了四个评估指标——Meta Similarity、PresentArena、PresentQuiz和IP Memory——以评估生成视频的忠实性和信息量。\n\n在此基础上，作者介绍了一种名为PaperTalker的多代理框架，该框架专为学术演示视频生成而设计。PaperTalker利用诸如使用树搜索视觉选择进行布局细化的幻灯片生成、光标定位、字幕制作、语音合成和虚拟形象渲染等技术。该系统旨在通过并行幻灯片式生成来提高效率。\n\n使用Paper2Video进行的实验表明，PaperTalker生成的演示视频比现有基线更忠实、信息更丰富。作者公开了他们的数据集、代理和代码，标志着朝着自动化且易于使用的学术视频生成迈出了一步。"
  },
  {
    "id": "45551504",
    "title": "Microsoft only lets you opt out of AI photo scanning 3x a year",
    "url": "https://hardware.slashdot.org/story/25/10/11/0238213/microsofts-onedrive-begins-testing-face-recognizing-ai-for-photos-for-some-preview-users",
    "summary": "Microsoft's OneDrive is rolling out an AI face recognition feature in photos, but users are encountering confusing privacy settings and limitations. Slashdot reports users are seeing a setting to disable the AI, but with a bizarre restriction: it can only be toggled off three times a year. Some users report the setting fails to toggle off at all.\n\nThe rollout seems premature. While Microsoft claims it's a limited \"preview\" to \"learn and improve,\" documentation contradictory states the feature is \"coming soon\" for almost two years.\n\nSlashdot pressed Microsoft on the strange \"three times a year\" limit, the buggy toggling behavior, and the opt-out versus opt-in approach, but received evasive answers. Microsoft cited adherence to its general privacy statement, GDPR, and inheriting settings from Microsoft 365 and SharePoint. They offered to investigate the toggling issue, but provided no specifics on the feature's rollout timeline.\n\nPrivacy advocates like EFF's Thorin Klosowski criticized the opt-out approach and the restrictive \"three times a year\" limit, arguing that privacy features should be opt-in and users should have control to change settings whenever needed. The lack of clear documentation and user control raises concerns about Microsoft's approach to privacy with this new AI feature.\n",
    "chinese_title": "微软每年仅允许您退出AI照片扫描3次",
    "chinese_summary": "微软 OneDrive 在照片中推出 AI 人脸识别功能，但用户遇到了令人困惑的隐私设置和限制。Slashdot 报道称，用户看到了禁用 AI 的设置，但带有一个奇怪的限制：每年只能关闭三次。有些用户报告称该设置根本无法关闭。\n\n该功能的推出似乎为时过早。虽然微软声称这是一个有限的“预览”版，旨在“学习和改进”，但矛盾的是，文档表明该功能“即将推出”已近两年。\n\nSlashdot 就奇怪的“每年三次”限制、有问题的切换行为以及选择退出与选择加入的方式向微软施压，但收到了回避性的回答。微软援引其通用隐私声明、GDPR 以及从 Microsoft 365 和 SharePoint 继承的设置。他们表示将调查切换问题，但未提供有关该功能推出时间表的具体信息。\n\nEFF 的 Thorin Klosowski 等隐私倡导者批评了选择退出方式和限制性的“每年三次”限制，认为隐私功能应该选择加入，用户应该有权随时更改设置。缺乏清晰的文档和用户控制引发了人们对微软在使用这项新的 AI 功能时所采取的隐私保护方式的担忧。"
  },
  {
    "id": "45558318",
    "title": "Jeep pushed software update that bricked all 2024 Wrangler 4xe models",
    "url": "https://twitter.com/StephenGutowski/status/1977055831720862101",
    "summary": "The article reports that a recent software update pushed to 2024 Jeep Wrangler 4xe models has caused widespread issues, essentially \"bricking\" the vehicles. The primary information comes from X.com (formerly Twitter), but the content provided from the X.com page indicates that Javascript is disabled, preventing the user from seeing the actual tweet or article content detailing the problems with the Jeep Wrangler 4xe software update. Therefore, beyond the title stating that a software update bricked the vehicles, there's no verifiable information regarding the specific problems, the extent of the issue, or Jeep's response.\n",
    "chinese_title": "Jeep推送软件更新，导致所有2024款牧马人4xe车型变砖。",
    "chinese_summary": "报道称，最近推送给2024款 Jeep Wrangler 4xe 车型的软件更新导致了广泛问题，基本上“砖化”了这些车辆。主要信息来自 X.com（原 Twitter），但来自 X.com 页面的内容显示 Javascript 已被禁用，导致用户无法查看详细描述 Jeep Wrangler 4xe 软件更新问题的实际推文或文章内容。因此，除了标题声明软件更新砖化了车辆之外，没有关于具体问题、问题范围或 Jeep 回应的可验证信息。"
  },
  {
    "id": "45489497",
    "title": "Testing two 18 TB white label SATA hard drives from datablocks.dev",
    "url": "https://ounapuu.ee/posts/2025/10/06/datablocks-white-label-drives/",
    "summary": "This article details the author's experience buying and testing two 18 TB white label SATA hard drives from datablocks.dev, a European company specializing in this niche. Dissatisfied with the anxiety of running small SSD pools and finding US-based ServerPartDeals too expensive due to shipping to Estonia, the author sought alternative storage solutions.\n\nThe main appeal of datablocks.dev was their white label hard drives, which offer a price advantage over recertified drives with minimal drawbacks (minor cosmetic blemishes, very low power-on hours). The author purchased two 18 TB drives, choosing this size for easy replacement with WD Elements/My Book drives if needed.\n\nThe drives arrived adequately packaged with minor scratches as described. The author formatted them using badblocks, noting performance fluctuations from 275 MB/s to 123 MB/s. While he forgot to save initial SMART data, the drives showed expected low power-on hours.\n\nThe author acknowledges the drives are noisy due to their 7200 RPM, but this is acceptable given his server's new closet location. He tiered his storage with SSDs for speed-sensitive tasks and the HDDs for bulk storage and backups. He hasn't noticed a significant performance drop in daily use. Power usage increased by 10-20W, but remains acceptable. The drives operate at reasonable temperatures (38-51°C).\n\nOverall, the author is satisfied with the white label drives, expecting them to last at least 5 years and potentially replacing one sooner to mitigate risk. He concludes with observations about hard drive performance and encourages readers to subscribe to his blog.\n",
    "chinese_title": "测试来自datablocks.dev的两块18TB白标SATA硬盘",
    "chinese_summary": "本文详述了作者从欧洲一家专注于小众市场的公司 datablocks.dev 购买并测试两块 18TB 白色标签 SATA 硬盘的经历。由于运行小型 SSD 存储池带来的焦虑，以及美国 ServerPartDeals 因运往爱沙尼亚的运费过于昂贵，作者不满意现状，转而寻求替代存储解决方案。\n\nDatablocks.dev 的主要吸引力在于其白色标签硬盘，与翻新认证硬盘相比，它们在价格上更具优势，且缺点极小（轻微外观瑕疵、极短的上电时间）。作者购买了两块 18TB 的硬盘，选择此容量是为了在需要时可以轻松更换为 WD Elements/My Book 硬盘。\n\n硬盘到货时包装充分，正如描述的那样，略有划痕。作者使用 badblocks 进行了格式化，注意到性能波动范围为 275 MB/s 到 123 MB/s。虽然他忘记保存初始的 SMART 数据，但硬盘显示的上电时间符合预期，非常短。\n\n作者承认这些硬盘由于 7200 RPM 的转速而产生噪音，但考虑到他的服务器的新位置在壁橱里，这是可以接受的。他将存储分层，SSD 用于对速度敏感的任务，HDD 用于大容量存储和备份。他没有注意到日常使用中性能有明显下降。功耗增加了 10-20W，但仍然可以接受。硬盘在合理的温度（38-51°C）下运行。\n\n总而言之，作者对这些白色标签硬盘感到满意，预计它们至少能使用 5 年，并可能提前更换其中一块以降低风险。他最后总结了关于硬盘性能的观察结果，并鼓励读者订阅他的博客。"
  },
  {
    "id": "45547566",
    "title": "The <output> Tag",
    "url": "https://denodell.com/blog/html-best-kept-secret-output-tag",
    "summary": "This article introduces the `<output>` tag in HTML, positioning it as an often overlooked but useful element. While the content itself is limited to the title and introductory information, we can infer its likely purpose:\n\nThe article will probably explain the functionality and uses of the `<output>` tag. Given the title \"HTML's Best Kept Secret,\" it's likely to highlight how the tag can be used in surprising and beneficial ways.\n\nBased on standard HTML usage, the `<output>` tag is likely used to display the result of a calculation or user action within a web form or application. The article will probably explain how to associate it with relevant form elements using the `for` attribute, linking the output to specific input fields.\n\nExpect the article to provide examples of how to use the `<output>` tag effectively, potentially showcasing scenarios where it simplifies user interaction or provides a better user experience compared to using other methods like JavaScript for displaying dynamic results. The article is also likely to be a tutorial on how to use this tag with some real-world examples.\n",
    "chinese_title": "`<output>`标签",
    "chinese_summary": "本文介绍了HTML中的`<output>`标签，并将其定位为一个经常被忽视但很有用的元素。虽然内容本身仅限于标题和介绍性信息，但我们可以推断其可能目的：\n\n这篇文章可能会解释`<output>`标签的功能和用途。鉴于标题为“HTML的最佳保密秘密”，它很可能会强调该标签如何以令人惊讶且有益的方式使用。\n\n根据标准的HTML用法，`<output>`标签可能用于在Web表单或应用程序中显示计算结果或用户操作。本文可能会解释如何使用`for`属性将其与相关的表单元素关联，从而将输出链接到特定的输入字段。\n\n期望本文提供如何有效使用`<output>`标签的示例，可能会展示与使用JavaScript等其他方法显示动态结果相比，它可以简化用户交互或提供更好用户体验的场景。这篇文章也很可能是一个关于如何使用此标签的教程，并提供一些实际示例。"
  },
  {
    "id": "45549434",
    "title": "Vibing a non-trivial Ghostty feature",
    "url": "https://mitchellh.com/writing/non-trivial-vibing",
    "summary": "Mitchell Hashimoto details his experience using AI to develop a non-trivial feature for Ghostty: unobtrusive macOS automatic updates. He emphasizes the importance of human expertise and iteration alongside AI assistance, treating AI as a helpful assistant rather than a complete replacement.\n\nThe development process began with Hashimoto formulating a plan for the feature and then using AI to prototype the UI. He outlines his strategy of breaking down tasks into smaller, manageable chunks, focusing on UI prototyping before full feature implementation. He highlights the value of AI for generating inspiration and overcoming creative blocks.\n\nHowever, the process wasn't without its challenges. He encountered a bug that the AI couldn't resolve and he had to step back, research the issue, and formulate his own solutions. He also describes the iterative \"cleanup\" process, involving refactoring, documentation, and code optimization to improve code quality and facilitate future AI assistance.\n\nHashimoto utilized AI for tasks like code completion (fill-in-the-blank), documentation, test/simulation generation, and bug fixing. He emphasizes the benefit of clear scaffolding, descriptive function names, and TODO comments to guide the AI effectively. When the initial UI implementation proved problematic, he pivoted to an alternative approach: an overlay display in the bottom corner of the window. Finally, he details hooking up the completed UI and backend.\n\nThroughout the post, Hashimoto highlights specific use cases and provides practical tips for leveraging AI in development workflows, emphasizing the significance of clear planning, iterative refinement, and human oversight.\n",
    "chinese_title": "体验Ghostty的一项重要功能",
    "chinese_summary": "米切尔·桥本详述了他使用人工智能为Ghostty开发一项重要功能——非侵入式macOS自动更新的经验。他强调了人类专业知识和迭代与人工智能辅助相结合的重要性，将人工智能视为有用的助手，而非完全的替代品。\n\n开发过程始于桥本制定功能计划，然后使用人工智能原型化UI。他概述了他的策略，即将任务分解为更小、更易于管理的块，并在全面实现功能之前专注于UI原型设计。他强调了人工智能在激发灵感和克服创意瓶颈方面的价值。\n\n然而，这个过程并非没有挑战。他遇到了一个人工智能无法解决的错误，他不得不退后一步，研究这个问题，并提出自己的解决方案。他还描述了迭代的“清理”过程，包括重构、文档编写和代码优化，以提高代码质量并促进未来的人工智能辅助。\n\n桥本利用人工智能完成代码补全（填空）、文档编写、测试/模拟生成和错误修复等任务。他强调了清晰的脚手架、描述性的函数名称和TODO注释对有效指导人工智能的好处。当最初的UI实现被证明有问题时，他转向了另一种方法：在窗口底部角落的叠加显示。最后，他详细介绍了如何连接完成的UI和后端。\n\n在整篇文章中，桥本强调了具体的用例，并提供了在开发工作流程中利用人工智能的实用技巧，强调了清晰的计划、迭代的改进和人为监督的重要性。"
  },
  {
    "id": "45555012",
    "title": "Coral Protocol: Open infrastructure connecting the internet of agents",
    "url": "https://arxiv.org/abs/2505.00749",
    "summary": "The paper \"Coral Protocol: Open Infrastructure Connecting The Internet of Agents\" introduces Coral Protocol, a decentralized and open collaboration infrastructure designed to facilitate communication, coordination, trust, and payments within the emerging \"Internet of Agents.\" Authored by Roman J. Georgio et al., it addresses the increasing need for interoperability as organizations deploy diverse and specialized AI agents that need to collaborate across domains and vendors.\n\nCoral Protocol serves as a foundational platform, establishing a common language and coordination framework to enable seamless participation of any agent in complex workflows. It emphasizes broad compatibility, security, and vendor neutrality to ensure efficient and trustworthy interactions. Key innovations include standardized messaging formats for agent communication, a modular coordination mechanism for orchestrating multi-agent tasks, and secure team formation capabilities for dynamically assembling trusted agent groups.\n\nThe whitepaper, consisting of 46 pages and 7 figures, positions Coral Protocol as a crucial component of the future of AI, unlocking new levels of automation, collective intelligence, and business value through open agent collaboration. The paper is categorized under Multiagent Systems (cs.MA) and Artificial Intelligence (cs.AI) on arXiv.\n",
    "chinese_title": "珊瑚协议：连接智能体网络的开放基础设施",
    "chinese_summary": "论文“珊瑚协议：连接代理互联网的开放基础设施”介绍了珊瑚协议，一种去中心化和开放的协作基础设施，旨在促进新兴“代理互联网”中的通信、协调、信任和支付。该论文由Roman J. Georgio等人撰写，旨在解决随着各组织部署需要跨领域和供应商协作的各种专业人工智能代理而日益增长的互操作性需求。\n\n珊瑚协议作为一个基础平台，建立了一种通用的语言和协调框架，以使任何代理都能无缝参与复杂的工作流程。它强调广泛的兼容性、安全性和供应商中立性，以确保高效和可信赖的交互。主要创新包括用于代理通信的标准化消息格式、用于编排多代理任务的模块化协调机制，以及用于动态组装可信代理组的安全团队组建能力。\n\n这份白皮书包含46页和7张图表，将珊瑚协议定位为人工智能未来的关键组成部分，通过开放的代理协作释放新的自动化水平、集体智能和商业价值。该论文在arXiv上被归类为多代理系统 (cs.MA) 和人工智能 (cs.AI)。"
  },
  {
    "id": "45553835",
    "title": "LineageOS 23",
    "url": "https://lineageos.org/Changelog-30/",
    "summary": "LineageOS 23, based on Android 16, has been released, bringing updates and new features. A key focus is adapting to Google's changing approach to Android Security Bulletins (ASBs) and Quarterly Platform Releases (QPRs), which are no longer fully released monthly to AOSP. LineageOS 23.0 is based on Android 16 \"QPR0\" due to QPR1's source not being publicly available yet, but it includes publicly available ASB patches. Security patch levels will only be updated once all fixes are public.\n\nPixel devices are no longer guaranteed day-one support due to reduced source access from Google. Legacy device support is impacted by Android 16's requirement for Linux 5.4 kernels or above, making older kernels difficult to support without significant backporting efforts.\n\nThe release includes updated apps like Aperture (camera app, rewritten with new features) and Twelve (music player, new playback statistics and Jellyfin improvements). A new Android TV launcher, Catapult, is introduced to provide a cleaner, user-controlled interface. Extended QEMU and mainline kernel support facilitate development and testing in virtualized environments, potentially extending device lifespans. There's also been efforts toward SoC-specific common kernels.\n\nUpgrading from official builds generally doesn't require wiping the device unless specified in the device's wiki.\n",
    "chinese_title": "LineageOS 23",
    "chinese_summary": "LineageOS 23发布，基于Android 16，带来更新和新功能。重点在于适应谷歌对Android安全公告(ASB)和季度平台版本(QPR)不断变化的策略，它们不再每月完整发布到AOSP。LineageOS 23.0基于Android 16 \"QPR0\"，因为QPR1的源代码尚未公开，但它包含了公开可用的ASB补丁。只有在所有修复公开后，安全补丁级别才会更新。\n\n由于谷歌减少了源代码访问，Pixel设备不再保证首日支持。旧设备支持受到Android 16要求Linux 5.4或更高版本内核的影响，使得在没有大量反向移植工作的情况下难以支持旧内核。\n\n该版本包括更新的应用程序，如Aperture（相机应用程序，重写并添加了新功能）和Twelve（音乐播放器，新增播放统计和Jellyfin改进）。引入了一个新的Android TV启动器Catapult，以提供更简洁、用户可控的界面。扩展的QEMU和主线内核支持促进了虚拟化环境中的开发和测试，有可能延长设备的使用寿命。此外，还朝着SoC特定的通用内核方向努力。\n\n从官方构建升级通常不需要擦除设备，除非设备的wiki中另有说明。"
  },
  {
    "id": "45553995",
    "title": "Show HN: Rift – A tiling window manager for macOS",
    "url": "https://github.com/acsandmann/rift",
    "summary": "Rift is a new tiling window manager for macOS prioritizing performance and usability, differentiating itself by not requiring SIP disabling and working with \"Displays have separate Spaces\" enabled. It offers multiple layout styles including tiling (like i3/sway) and Binary Space Partitioning (like bspwm). Key features include a menubar icon for workspace navigation, a macOS-style mission control, focus-follows-mouse with auto-raise, window swapping via drag-and-drop, performant animations, trackpad gestures for workspace switching, hot-reloadable configuration, and interop with programs like Sketchybar. Rift also exposes a CLI and Mach port for external program control and signal sending.\n\nThe project is under active development and currently has no official release, welcoming issues and pull requests. The motivation behind Rift's creation stems from a desire for better animations, the ability to use fullscreen on one display while working on another, and a preference for private/undocumented APIs for their reliability and performance. While originating as a fork of glide-wm, Rift has significantly diverged. It leverages private APIs reverse engineered by other projects like yabai.\n",
    "chinese_title": "Show HN: Rift – macOS 上的平铺窗口管理器",
    "chinese_summary": "Rift：一款macOS上的新型平铺窗口管理器，注重性能和易用性，其特点是不需要禁用SIP且可在“显示器具有单独的空间”启用时工作。它提供多种布局风格，包括平铺（如i3/sway）和二叉空间分割（如bspwm）。主要功能包括用于工作区导航的菜单栏图标、macOS风格的调度中心、焦点跟随鼠标并自动置顶、通过拖放进行窗口交换、高性能动画、用于工作区切换的触控板手势、热重载配置以及与Sketchybar等程序的互操作性。Rift还公开了CLI和Mach端口，用于外部程序控制和信号发送。\n\n该项目正在积极开发中，目前尚未发布正式版本，欢迎提交问题和Pull Request。Rift的创建动机源于对更好动画效果的渴望，在专注于一个显示器上的全屏的同时可以在另一个显示器上工作，以及偏好私有/未公开的API，因为它们的可靠性和性能。虽然最初是glide-wm的一个分支，但Rift已经有了很大的不同。它利用了其他项目（如yabai）逆向工程的私有API。"
  },
  {
    "id": "45506748",
    "title": "How Apple designs a virtual knob (2012)",
    "url": "https://jherrm.github.io/knobs/",
    "summary": "This article explores Apple's innovative design of virtual knobs in Garageband for iPad (circa 2011), highlighting how they leverage the multitouch interface for a natural user experience. The author identifies three distinct interaction methods: spinning the knob directly, vertical sliding for continuous rotation (with direction determined by the side of the knob), and horizontal sliding (similar directional control).\n\nThe article then delves into the technical implementation of these knobs. Apple uses various techniques, including static backgrounds with repositioned or rotated indicators (using CSS, SVG, or images), repeating backgrounds to show more complex changes during rotation, and fully rendered 3D knobs represented by sequences of images (one for every 3 degrees of rotation). The choice of technique depends on the desired visual complexity and performance trade-offs.\n\nThe article also reveals \"Garageband Secrets,\" including an early version of a 3D knob sprite sheet with a lower frame rate and some fully rendered knobs that didn't make it into the final release.\n\nThe author concludes by emphasizing Apple's commitment to detail and the effort put into creating intuitive and seamless user interactions, exemplified by the virtual knobs in Garageband. The author shares their own attempt to replicate the knobs, Knob.js, as well.\n",
    "chinese_title": "苹果如何设计虚拟旋钮 (2012)",
    "chinese_summary": "本文探讨了苹果在iPad版Garageband（约2011年）中虚拟旋钮的创新设计，重点介绍了他们如何利用多点触控界面来实现自然的用户体验。作者识别了三种不同的交互方式：直接旋转旋钮、垂直滑动进行连续旋转（方向由旋钮的侧面决定）以及水平滑动（类似的方向控制）。\n\n然后，本文深入研究了这些旋钮的技术实现。苹果使用了多种技术，包括带有重新定位或旋转指示器的静态背景（使用CSS、SVG或图像）、重复背景以显示旋转过程中更复杂的变化，以及用图像序列表示的完全渲染的3D旋钮（每旋转3度一个图像）。技术的选择取决于所需的视觉复杂性和性能权衡。\n\n本文还揭示了“Garageband的秘密”，包括早期版本的3D旋钮精灵图，其帧速率较低，以及一些未进入最终版本的完全渲染的旋钮。\n\n作者最后强调了苹果对细节的执着以及为创建直观和无缝的用户交互所付出的努力，Garageband中的虚拟旋钮就是典范。作者还分享了他们自己尝试复制旋钮的作品，Knob.js。"
  },
  {
    "id": "45516964",
    "title": "Beyond indexes: How open table formats optimize query performance",
    "url": "https://jack-vanlightly.com/blog/2025/10/8/beyond-indexes-how-open-table-formats-optimize-query-performance",
    "summary": "This article explores the differences between indexing in traditional Relational Database Management Systems (RDBMS) and open table formats (OTFs) like Apache Iceberg, focusing on how these systems optimize query performance. The author, a former SQL Server performance specialist, highlights that while the term \"index\" is used loosely in the context of OTFs, its meaning and implementation differ significantly from RDBMS.\n\nRDBMS relies on B-tree indexes (clustered and non-clustered) to efficiently locate specific rows, especially in OLTP workloads with frequent reads/writes of small data sets. Secondary indexes enable diverse queries by mapping non-primary key columns to rows, but they come with write and maintenance overhead. The query optimizer uses table statistics to decide whether to use indexes or perform full table scans.\n\nOTFs, designed for analytical workloads involving large data scans, prioritize data skipping and pruning over traditional indexing. Data is stored in columnar format within immutable files, and the table structure forms a tree of metadata (snapshots, manifest lists, manifest files) pointing to these data files. Performance hinges on efficient pruning, which depends on data locality and auxiliary structures.\n\nThe core message is that read performance in both RDBMS and OTFs ultimately depends on minimizing IO. However, the workload dictates the optimal data organization and auxiliary structures. RDBMS prioritizes fast single-row lookups using B-trees, while OTFs focus on efficiently scanning large datasets through columnar storage and pruning. Secondary indexes, beneficial for diverse queries in RDBMS, are not as useful in OTFs due to their architecture and reliance on object storage.\n",
    "chinese_title": "超越索引：开放表格式如何优化查询性能",
    "chinese_summary": "本文探讨了传统关系数据库管理系统(RDBMS)与诸如Apache Iceberg等开放表格式(OTF)在索引方面的差异，重点关注这些系统如何优化查询性能。作者，一位前SQL Server性能专家，强调虽然“索引”一词在OTF的语境中被广泛使用，但其含义和实现与RDBMS有着显著不同。\n\nRDBMS依赖于B树索引（聚簇索引和非聚簇索引）来高效定位特定行，尤其是在频繁读写小数据集的OLTP工作负载中。二级索引通过将非主键列映射到行来实现多样化的查询，但它们会带来写入和维护开销。查询优化器使用表统计信息来决定是使用索引还是执行全表扫描。\n\nOTF专为涉及大数据扫描的分析工作负载而设计，它优先考虑数据跳过和裁剪，而不是传统的索引。数据以列式格式存储在不可变文件中，表结构形成一个元数据树（快照、清单列表、清单文件），指向这些数据文件。性能取决于高效的裁剪，这依赖于数据局部性和辅助结构。\n\n核心信息是，RDBMS和OTF中的读取性能最终都取决于最大限度地减少IO。然而，工作负载决定了最佳的数据组织和辅助结构。RDBMS优先使用B树进行快速单行查找，而OTF则侧重于通过列式存储和裁剪来高效扫描大型数据集。二级索引在RDBMS中对多样化查询有益，但在OTF中，由于其架构和对对象存储的依赖，其作用不大。"
  },
  {
    "id": "45553764",
    "title": "Google blocks Android hack that let Pixel users enable VoLTE anywhere",
    "url": "https://www.androidauthority.com/pixel-ims-broken-october-update-3606444/",
    "summary": "The October 2025 Google Pixel update has broken the \"Pixel IMS\" app, a popular tool used by Pixel owners who imported their devices to regions where VoLTE and VoWiFi (Voice over LTE and Wi-Fi calling) are not officially supported. The app circumvented carrier restrictions by exploiting a loophole that allowed it to override carrier settings, a vulnerability Google has now patched and classified as high-severity (CVE-2025-48617).\n\nPreviously, Pixel IMS used the Shizuku app to gain elevated privileges, enabling it to force VoLTE and VoWiFi on unsupported carriers. The update now prevents the \"shell\" user (used by ADB commands and Shizuku) from overriding carrier configurations.\n\nWhile this disables the Pixel IMS app, a new, less accessible workaround has reportedly been discovered to enable VoLTE, though only VoLTE is possible with this workaround, not VoWiFi. Users requiring VoWiFi in unsupported regions now face the options of rooting their devices (which has its own drawbacks) or waiting for Google to expand official carrier support for VoLTE and VoWiFi in more regions, something Google has hinted at working on.\n",
    "chinese_title": "谷歌阻止了一项允许Pixel用户在任何地方启用VoLTE的Android破解方法",
    "chinese_summary": "2025年10月谷歌Pixel更新已破坏“Pixel IMS”应用。该应用曾被Pixel用户广泛使用，这些用户将其设备进口到VoLTE和VoWiFi（基于LTE和Wi-Fi的语音通话）未获官方支持的地区。该应用利用漏洞绕过运营商限制，使其能够覆盖运营商设置。谷歌现已修复该漏洞并将其归类为高危漏洞(CVE-2025-48617)。\n\n此前，Pixel IMS使用Shizuku应用获取提升的权限，从而在不受支持的运营商上强制启用VoLTE和VoWiFi。此次更新现已阻止“shell”用户（由ADB命令和Shizuku使用）覆盖运营商配置。\n\n虽然这禁用了Pixel IMS应用，但据报道已发现一种新的、访问性较差的变通方法来启用VoLTE，尽管此变通方法只能启用VoLTE，而不能启用VoWiFi。在不受支持地区需要VoWiFi的用户现在面临着root其设备（有其自身的缺点）或等待谷歌在更多地区扩展对VoLTE和VoWiFi的官方运营商支持的选择，谷歌已暗示正在努力实现这一点。"
  },
  {
    "id": "45495051",
    "title": "A quiet change to RSA",
    "url": "https://www.johndcook.com/blog/2025/10/06/a-quiet-change-to-rsa/",
    "summary": "This article discusses a subtle but important shift in the RSA cryptosystem related to calculating the private key. Originally, the private key `d` was calculated based on Euler's totient function φ(n), satisfying the equation `ed = 1 mod φ(n)`. However, the standard has gradually shifted to using Carmichael's totient function λ(n) instead, solving `ed = 1 mod λ(n)`.\n\nThe core reason for this change is that λ(n) is always a divisor of φ(n), and using it results in a smaller private key `d`. This smaller `d` allows for faster decryption.  λ(n) is defined as the smallest number that satisfies Fermat's Little Theorem, replacing φ(n).  For `n = pq`, `λ(n) = lcm( (p − 1), (q − 1) )`. The savings are equal to a factor of `gcd((p-1), (q-1))`.\n\nWhile theoretically beneficial, the article questions the practical impact of this change, citing an experiment generating random primes and calculating the GCD of (p-1) and (q-1). The experiment shows the gcd is often small (usually 2 or 4). This indicates that the efficiency gain from using Carmichael's totient might be less significant than anticipated. The article suggests that other techniques, like Garner's algorithm, may offer more substantial efficiency improvements in RSA. Finally, the article also notes that `e` is now almost always 65537.\n",
    "chinese_title": "RSA的悄然改变",
    "chinese_summary": "本文讨论了RSA密码系统中一个微妙但重要的变化，即关于私钥的计算。最初，私钥 `d` 是基于欧拉函数 φ(n) 计算的，满足方程 `ed = 1 mod φ(n)`。然而，标准已经逐渐转向使用卡迈克尔函数 λ(n) 代替，求解 `ed = 1 mod λ(n)`。\n\n这种改变的核心原因是 λ(n) 总是 φ(n) 的一个因子，并且使用它会导致更小的私钥 `d`。更小的 `d` 允许更快的解密。λ(n) 被定义为满足费马小定理的最小数，取代了 φ(n)。对于 `n = pq`， `λ(n) = lcm( (p − 1), (q − 1) )`。节省的量等于 `gcd((p-1), (q-1))` 的因子。\n\n虽然理论上有益，但本文质疑这种改变的实际影响，引用了一个生成随机素数并计算 (p-1) 和 (q-1) 的 GCD 的实验。实验表明 gcd 通常很小（通常为 2 或 4）。这表明使用卡迈克尔函数的效率提升可能不如预期那么显著。文章建议，像 Garner 算法这样的其他技术可能在 RSA 中提供更实质性的效率改进。最后，文章还指出 `e` 现在几乎总是 65537。"
  },
  {
    "id": "45557682",
    "title": "SonicWall confirms all Cloud Backup Service users were compromised",
    "url": "https://www.scworld.com/news/sonicwall-confirms-all-cloud-backup-service-users-were-compromised",
    "summary": "SonicWall has confirmed that all users of its Cloud Backup service were compromised in a recent security incident. The company has reset passwords and is requiring all users to set up multi-factor authentication (MFA).\n\nThe breach stemmed from a vulnerability within the Cloud Backup service itself, allowing unauthorized access to user accounts. While SonicWall hasn't disclosed the specific vulnerability, they emphasize that it has been patched and the service is now secure.\n\nThe potential impact of the compromise is significant, as Cloud Backup services store sensitive data used for recovery purposes. This data could include configuration files, system images, and other critical information, potentially allowing attackers to gain a foothold into other systems or perform data exfiltration.\n\nSonicWall is urging all affected customers to immediately reset their passwords, enable MFA, and thoroughly review their backup data for any signs of unauthorized access or modification. The company is also providing resources and support to help customers mitigate any potential damage.\n\nThe incident underscores the critical importance of securing cloud-based backup services and implementing strong authentication measures to protect sensitive data. While the exact scope of the damage remains unclear, the potential impact on SonicWall's customers is substantial, highlighting the risks associated with even seemingly secure cloud services.\n",
    "chinese_title": "SonicWall确认所有云备份服务用户均遭泄露",
    "chinese_summary": "SonicWall已确认其云备份服务的所有用户在最近的安全事件中遭到入侵。该公司已重置密码，并要求所有用户设置多因素身份验证 (MFA)。\n\n此次漏洞源于云备份服务本身的一个漏洞，允许未经授权访问用户帐户。虽然SonicWall尚未披露具体漏洞，但他们强调该漏洞已得到修复，并且该服务现在是安全的。\n\n此次入侵的潜在影响非常重大，因为云备份服务存储用于恢复目的的敏感数据。这些数据可能包括配置文件、系统镜像和其他关键信息，从而可能允许攻击者进入其他系统或执行数据泄露。\n\nSonicWall敦促所有受影响的客户立即重置密码、启用MFA，并彻底审查其备份数据，以查找任何未经授权的访问或修改迹象。该公司还提供资源和支持，以帮助客户减轻任何潜在损害。\n\n该事件突显了保护基于云的备份服务和实施强大的身份验证措施以保护敏感数据的关键重要性。虽然损害的确切范围仍不清楚，但对SonicWall客户的潜在影响是巨大的，突显了与看似安全的云服务相关的风险。"
  },
  {
    "id": "45550049",
    "title": "GNU Health",
    "url": "https://www.gnuhealth.org/about-us.html",
    "summary": "GNU Health is a free/libre, community-driven project focused on improving healthcare equity and access through technology and social medicine. It's a comprehensive ecosystem designed for individuals, healthcare professionals, institutions, and governments, addressing health determinants from socioeconomic factors to molecular biology.\n\nThe GNU Health ecosystem comprises several key components: Hospital Management (HMIS) for electronic medical records and health information systems, Laboratory Management (Occhiolino/GNU LIMS) for managing lab analyses, Personal Health Record (MyGNUHealth) empowering citizens with control over their health data, and the GNU Health Federation, enabling large-scale health networks for improved information sharing and research.\n\nGNU Health also explores integration with Single-Board Computers for real-time monitoring and data collection. It emphasizes social medicine, addressing the root causes of health disparities such as poverty, lack of access to education, and inadequate sanitation. GNU Health aims to prioritize \"people before patients\" by focusing on the social and economic factors that influence health outcomes.\n",
    "chinese_title": "GNU 健康",
    "chinese_summary": "GNU Health是一个自由/开源的、社区驱动的项目，专注于通过技术和社会医学改善医疗公平性和可及性。它是一个为个人、医疗专业人员、机构和政府设计的综合生态系统，解决从社会经济因素到分子生物学的健康决定因素。\n\nGNU Health生态系统包含几个关键组成部分：用于电子病历和健康信息系统的医院管理系统(HMIS)，用于管理实验室分析的实验室管理系统(Occhiolino/GNU LIMS)，通过控制个人健康数据赋能公民的个人健康记录(MyGNUHealth)，以及GNU Health联邦，它支持大规模的健康网络，以改善信息共享和研究。\n\nGNU Health还探索了与单板计算机的集成，以进行实时监测和数据收集。它强调社会医学，解决健康差异的根本原因，如贫困、缺乏教育机会和卫生条件不足。GNU Health旨在通过关注影响健康结果的社会和经济因素，将“人置于患者之前”。"
  },
  {
    "id": "45551450",
    "title": "Rating 26 years of Java changes",
    "url": "https://neilmadden.blog/2025/09/12/rating-26-years-of-java-changes/",
    "summary": "Neil Madden, a Java programmer since 1999, retrospectively rates significant language and core library changes in Java SE over 26 years, starting from Java 2 (1998). He focuses on his subjective experience and omits UI and VM/GC improvements.\n\nHe critiques the Collections Framework (4/10) for its design flaws and inconsistent mutability. He found the `assert` keyword largely unused (3/10) but praised Regular Expressions (9/10). He strongly disliked the \"New\" I/O (NIO) (0/10) for its poor API, and crypto APIs (1/10) for being error-prone. Java 5 was a pivotal release, with Generics (8/10) being essential, Annotations (5/10) as sometimes overused, Autoboxing (7/10) enhancing brevity, Enums (6/10) being underwhelming, Varargs (8/10) improving verbosity, and the for-each loop (8/10) being frequently used. Doug Lea's concurrency utilities (10/10) were a highlight.\n\nSubsequent releases included features like try-with-resources (10/10), diamond operator (6/10), and lambdas (4/10), which he found controversial. He heavily criticized Streams (1/10) for being over-complicated and prone to resource leaks but liked Java Time (8/10). He detested Modules ( -10/10) for minimal benefit. He appreciated local type inference (\"var\") (9/10), the new HTTP Client (6/10), and TLS 1.3 support (9/10). He considered switch expressions (6/10) a minor improvement but found text blocks (3/10) potentially dangerous. He liked Records (10/10), better NullPointerException messages (8/10), and Sealed classes (8/10). Later additions like UTF-8 by default (10/10) and record patterns (9/10) were highly valued. String templates (10/10 - if implemented well) are eagerly awaited to fix Text Blocks. Recent changes like Sequenced Collections (6/10) and Simplified console applications (8/10) received moderate praise. He ends by inviting discussion and differing opinions.\n",
    "chinese_title": "Java 26年变革评价",
    "chinese_summary": "自1999年以来一直从事Java编程的Neil Madden回顾性地评价了Java SE在26年内（从Java 2 (1998)开始）的重大语言和核心库变更。他专注于自己的主观体验，并省略了UI和VM/GC的改进。\n\n他批评了Collections Framework（4/10）的设计缺陷和不一致的可变性。他认为`assert`关键字基本上没有被使用（3/10），但称赞了正则表达式（9/10）。他非常不喜欢“New” I/O (NIO)（0/10），因为它API很差，并且批评加密API（1/10）容易出错。Java 5是一个关键版本，其中泛型（8/10）至关重要，注解（5/10）有时被过度使用，自动装箱（7/10）增强了简洁性，枚举（6/10）令人失望，可变参数（8/10）改善了冗长性，并且for-each循环（8/10）被频繁使用。 Doug Lea的并发实用程序（10/10）是一个亮点。\n\n随后的版本包括try-with-resources（10/10）、diamond运算符（6/10）和lambdas（4/10）等功能，他觉得这些功能存在争议。他强烈批评Streams（1/10）过于复杂且容易导致资源泄漏，但喜欢Java Time（8/10）。他讨厌Modules（-10/10），认为收益甚微。他赞赏局部类型推断(\"var\")（9/10）、新的HTTP Client（6/10）和TLS 1.3支持（9/10）。他认为switch表达式（6/10）是一个小的改进，但发现文本块（3/10）可能存在危险。他喜欢Records（10/10）、更好的NullPointerException消息（8/10）和Sealed classes（8/10）。 默认UTF-8（10/10）和记录模式（9/10）等后来的添加受到高度赞赏。人们热切期待字符串模板（10/10 - 如果实施得当）来修复文本块。最近的更改，如Sequenced Collections（6/10）和简化的控制台应用程序（8/10）受到了适度的赞扬。他最后邀请大家进行讨论并提出不同的意见。"
  },
  {
    "id": "45557772",
    "title": "Apple Introduces $2M Bug Bounty for Spyware-Level Exploits",
    "url": "https://www.macrumors.com/2025/10/10/apple-bug-bounty-program-overhauled/",
    "summary": "Apple is significantly upgrading its bug bounty program, doubling the top reward to $2 million for exploit chains comparable to sophisticated spyware attacks. With potential bonuses for Lockdown Mode bypasses and beta software vulnerabilities, payouts could exceed $5 million.\n\nThe program now focuses on complete exploit chains over individual vulnerabilities and offers increased rewards for remote-entry vectors, while decreasing payouts for less common attack types. A new \"Target Flags\" system allows researchers to prove their exploit's access level and receive immediate notification of their bounty award and faster payment, bypassing the previous delay until a software fix was released.\n\nEffective November 2025, the updated program expands to include one-click WebKit sandbox escapes (up to $300,000) and wireless proximity exploits (up to $1 million). A complete Gatekeeper bypass on macOS now earns $100,000. Detailed information is available on Apple's Security Research website. Since launching its public program in 2020, Apple has paid out over $35 million to more than 800 researchers.\n",
    "chinese_title": "苹果推出针对间谍软件级别漏洞的200万美元漏洞赏金计划",
    "chinese_summary": "苹果大幅升级漏洞赏金计划，将最高奖励翻倍至200万美元，奖励那些堪比复杂间谍软件攻击的漏洞利用链。对于锁定模式绕过和测试版软件漏洞，还可能获得额外奖金，奖金总额可能超过500万美元。\n\n该计划现在侧重于完整的漏洞利用链，而非单个漏洞，并提高远程入口向量的奖励，同时降低不常见攻击类型的奖励。新的“目标标志”系统允许研究人员证明其漏洞的访问级别，并立即收到赏金通知，更快获得报酬，从而绕过之前需要等到软件修复发布后才能获得报酬的延迟。\n\n自2025年11月起，更新后的计划将扩展至包括一键式WebKit沙箱逃逸（最高30万美元）和无线近距离漏洞利用（最高100万美元）。macOS上完整的Gatekeeper绕过现在可获得10万美元。详细信息可在Apple的安全研究网站上找到。自2020年推出公开计划以来，Apple已向800多名研究人员支付了超过3500万美元。"
  },
  {
    "id": "45557970",
    "title": "Why do Stanford math professors still use chalk?",
    "url": "https://stanforddaily.com/2021/10/17/why-do-stanford-math-professors-still-use-chalk/",
    "summary": "This Stanford Daily article explores why mathematics professors at Stanford University overwhelmingly prefer using chalk and chalkboards over alternatives like slides or whiteboards. The preference is attributed to several factors, including tradition, the nature of mathematical derivations, and practical benefits.\n\nProfessors argue that chalkboards facilitate a slower, more deliberate pace crucial for understanding complex mathematical concepts, allowing students to follow step-by-step derivations. The larger surface area of chalkboards also allows for easier reference to previous steps.\n\nThe article highlights the cultural significance of chalk within the mathematics community, mentioning the near-panic when the preferred Japanese Hagoromo chalk company faced bankruptcy.\n\nCompared to whiteboards, chalk offers advantages like knowing the remaining quantity, superior penmanship, and durability. Whiteboard markers are prone to running out unexpectedly, and permanent marker accidents can ruin the surface. Chalkboards are also considered more environmentally friendly due to their biodegradable nature and lack of chemical cleaners.\n\nDespite the advantages, the article acknowledges the decline of chalkboards in high schools and the potential for increased technology use in classrooms due to the pandemic. However, the interviewed professors and students believe that chalk and chalkboards will remain a staple in mathematics education at Stanford due to their effectiveness and established tradition.\n",
    "chinese_title": "为什么斯坦福的数学教授还在用粉笔？",
    "chinese_summary": "这篇《斯坦福日报》的文章探讨了为何斯坦福大学的数学教授们普遍更喜欢使用粉笔和黑板，而不是幻灯片或白板等替代品。这种偏好归因于几个因素，包括传统、数学推导的本质以及实际益处。\n\n教授们认为，黑板有助于放慢节奏，这种更为审慎的节奏对于理解复杂的数学概念至关重要，使学生能够跟随逐步推导的过程。黑板更大的表面积也便于参考之前的步骤。\n\n这篇文章强调了粉笔在数学界中的文化意义，并提及了当他们偏爱的日本羽衣粉笔公司面临破产时的近乎恐慌。\n\n与白板相比，粉笔具有诸如了解剩余数量、书写效果更好以及耐用性等优点。白板笔容易意外用完，永久性记号笔的意外使用会损坏表面。由于其可生物降解的特性和无需化学清洁剂，黑板也被认为更环保。\n\n尽管存在这些优势，但文章承认黑板在高中学校的衰落以及由于疫情导致课堂上技术使用增加的可能性。然而，接受采访的教授和学生们认为，由于其有效性和既定传统，粉笔和黑板仍将是斯坦福大学数学教育中的主要工具。"
  },
  {
    "id": "45553296",
    "title": "Heroin addicts often seem normal",
    "url": "https://justismills.substack.com/p/heroin-addicts-often-seem-normal",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "海洛因成瘾者通常看起来很正常。",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45493128",
    "title": "Show HN: A Digital Twin of my coffee roaster that runs in the browser",
    "url": "https://autoroaster.com/",
    "summary": "AutoRoaster, showcased on Show HN, is a browser-based digital twin of the author's Kaleido M1 coffee sample roaster. This interactive demo forecasts the physics of the roaster and beans, allowing users to simulate real-world roasting processes. Users can adjust parameters like bean mass (50-200g), heater power, and fan speed, and then observe the real-time temperature curves and rate of rise.\n\nThe simulation starts with preheating and defaults to Ethiopian Guji beans with specific settings (24C ambient, 180C preheat, 60% drum speed). Users can add beans, adjust controls, and monitor the roasting process. The interface displays key metrics like bean probe, bean surface, drum, environment, and environment probe temperatures, as well as roast time and rate of rise.\n\nThe author offers to create similar digital twins for other roasters and provides contact information (james@autoroaster.com) for inquiries. The demo includes functionalities like \"Add Beans,\" \"Stop,\" and \"Reset\" buttons, and also offers different simulation speeds (1x, 2x, 4x, 8x). The current status of the simulation is displayed, and the system is initially shown as \"PREHEATING\" while loading ONNX models.\n",
    "chinese_title": "展示HN：一个运行在浏览器中的咖啡烘焙机数字孪生",
    "chinese_summary": "AutoRoaster，在Show HN上展示，是作者Kaleido M1咖啡样品烘焙机的浏览器端数字孪生。这个互动演示预测了烘焙机和咖啡豆的物理特性，允许用户模拟真实的烘焙过程。用户可以调整参数，如豆重（50-200克）、加热功率和风扇速度，然后观察实时温度曲线和升温速率。\n\n模拟从预热开始，默认使用埃塞俄比亚古吉咖啡豆，并采用特定设置（24摄氏度环境温度，180摄氏度预热温度，60%滚筒速度）。用户可以添加咖啡豆、调整控制参数，并监控烘焙过程。界面显示关键指标，如豆探头温度、豆表面温度、滚筒温度、环境温度和环境探头温度，以及烘焙时间和升温速率。\n\n作者表示可以为其他烘焙机创建类似的数字孪生，并提供联系方式（james@autoroaster.com）以供咨询。该演示包括“添加咖啡豆”、“停止”和“重置”按钮等功能，并提供不同的模拟速度（1倍、2倍、4倍、8倍）。当前模拟状态会显示出来，系统初始状态显示为“预热中”，同时加载ONNX模型。"
  },
  {
    "id": "45509636",
    "title": "Building a JavaScript Runtime using C",
    "url": "https://devlogs.xyz/blog/building-a-javaScript-runtime",
    "summary": "This article documents the development of a JavaScript runtime implemented in C. The content, categorized as \"devlogs,\" suggests a series of updates or progress reports outlining the journey of building such a complex system.\n\nWithout access to the actual devlogs, we can infer the potential topics covered:\n\n*   **Core JavaScript Engine:** The devlogs likely detail the implementation of a JavaScript engine in C, encompassing essential components like a parser, interpreter (or compiler for JIT), and garbage collector. Challenges addressed might include handling dynamic typing, memory management, and language features like closures and prototypes.\n\n*   **Host Environment:** The runtime needs to provide an environment for JavaScript code to interact with. The devlogs could describe the creation of bindings between JavaScript and C, allowing access to system resources and APIs. This might involve implementing functionalities like input/output operations, timers, and network requests.\n\n*   **Testing and Debugging:** Given the complexity, the devlogs would likely describe testing strategies and debugging techniques used throughout the development process. This could include unit tests, integration tests, and the development of debugging tools.\n\n*   **Performance Optimization:** Building a performant runtime is crucial. The devlogs might discuss optimization techniques applied to the engine, such as code caching, inline caching, and garbage collection strategies.\n\n*   **Challenges and Lessons Learned:** As devlogs, the entries could provide insights into encountered difficulties, design decisions, and valuable lessons learned during the development process. This could cover aspects like choosing appropriate data structures, dealing with memory leaks, or handling concurrency.\n\nIn essence, the article provides a behind-the-scenes look at the creation of a JavaScript runtime from scratch using C, offering valuable information and potential learning opportunities for those interested in language implementation and runtime environments.\n",
    "chinese_title": "使用 C 构建 JavaScript 运行时",
    "chinese_summary": "本文档记录了一个用 C 语言实现的 JavaScript 运行时的开发过程。内容分类为“开发日志”，表明这是一系列更新或进度报告，概述了构建这样一个复杂系统的历程。\n\n在无法访问实际开发日志的情况下，我们可以推断出可能涵盖的主题：\n\n*   **核心 JavaScript 引擎：** 开发日志可能详细介绍了用 C 语言实现的 JavaScript 引擎，包括必要的组件，如解析器、解释器（或 JIT 编译器）和垃圾回收器。解决的挑战可能包括处理动态类型、内存管理以及诸如闭包和原型等语言特性。\n\n*   **宿主环境：** 运行时需要为 JavaScript 代码提供一个交互环境。开发日志可以描述 JavaScript 和 C 之间的绑定创建，从而允许访问系统资源和 API。这可能涉及实现诸如输入/输出操作、定时器和网络请求等功能。\n\n*   **测试与调试：** 考虑到复杂性，开发日志可能会描述在整个开发过程中使用的测试策略和调试技术。这可能包括单元测试、集成测试和调试工具的开发。\n\n*   **性能优化：** 构建一个高性能的运行时至关重要。开发日志可能会讨论应用于引擎的优化技术，例如代码缓存、内联缓存和垃圾回收策略。\n\n*   **挑战与经验教训：** 作为开发日志，这些条目可以提供对所遇到困难、设计决策以及开发过程中获得的宝贵经验教训的见解。这可以涵盖诸如选择适当的数据结构、处理内存泄漏或处理并发性等方面。\n\n本质上，本文提供了一个从头开始使用 C 语言创建 JavaScript 运行时的幕后视角，为那些对语言实现和运行时环境感兴趣的人提供了有价值的信息和潜在的学习机会。"
  },
  {
    "id": "45552913",
    "title": "The story of X-Copy on the Amiga",
    "url": "https://spillhistorie.no/2025/10/10/the-story-of-x-copy-on-the-amiga/",
    "summary": "This article details the history of X-Copy, the popular Amiga disk copying program, through an interview with Christian Bartsch, a veteran of its publisher, Cachet Software. X-Copy, created by Frank Neuhaus and Hans Georg Berg, became a favorite tool for copying games due to its ability to copy disks with non-standard AmigaDOS, surpassing the popularity of competitors like Marauder II.\n\nThe program was designed to keep the protection in place, so that people who bought an original could play the game with their backup, also designed to be user friendly and have fast copy speed. Cachet's CEO, Claus Peter Lippert, recognized its potential and shaped it into a suite of tools focused on usability.\n\nBartsch recounts joining Cachet at a young age, providing customer support and feature implementation. He shares insights into Cachet's other products and business practices, including a subscription service and acting as a distributor for companies like id Software. The article also touches on the irony of X-Copy being heavily pirated, while also being a commercial product.\n\nDespite piracy, Cachet tried to offer a holistic experience with their service package and welcomed customers. Bartsch also discusses the eventual decline of Cachet after the Amiga's demise, but notes the company still exists. He concludes by mentioning his current project, KryoFlux, dedicated to digitizing and preserving disks, and its connection to the Software Preservation Society. Finally mentions that all versions of X-Copy is free for private and personal use, but no money shall change hands.\n",
    "chinese_title": "Amiga 平台上的 X-Copy 故事",
    "chinese_summary": "本文通过对X-Copy发行商Cachet Software的老员工Christian Bartsch的采访，详细介绍了流行的Amiga磁盘复制程序X-Copy的历史。X-Copy由Frank Neuhaus和Hans Georg Berg创建，由于其能够复制具有非标准AmigaDOS的磁盘，超越了Marauder II等竞争对手，成为复制游戏的首选工具。\n\n该程序旨在保留保护措施，以便购买正版的人可以用备份来玩游戏，并且设计得用户友好且复制速度快。Cachet的首席执行官Claus Peter Lippert意识到了它的潜力，并将其塑造成一套注重可用性的工具。\n\nBartsch回忆起年轻时加入Cachet，提供客户支持和功能实现。他分享了对Cachet其他产品和商业行为的见解，包括订阅服务和作为id Software等公司的分销商。文章还提到了X-Copy被大量盗版的讽刺之处，尽管它也是一款商业产品。\n\n尽管存在盗版，Cachet仍试图通过其服务包提供全面的体验，并欢迎客户。Bartsch还讨论了Amiga消亡后Cachet最终衰落的原因，但指出该公司仍然存在。他最后提到了他目前的项目KryoFlux，该项目致力于数字化和保存磁盘，以及它与软件保存协会的联系。最后提到所有版本的X-Copy都可免费用于私人和个人用途，但不得进行任何金钱交易。"
  },
  {
    "id": "45557599",
    "title": "KDE Connect: Enabling communication between all your devices",
    "url": "https://community.kde.org/KDEConnect",
    "summary": "KDE Connect is a project enabling communication between devices, offering features like notification mirroring, remote control, music control, command execution, battery monitoring, file sharing, and more. It achieves this through a secure communication protocol and plugins.\n\nThe article provides guidance for both users and developers, including installation instructions for Linux, Windows, Android, iOS, and macOS. It highlights the use of meta-build systems like \"kde-builder\" for easier development on Linux and provides links to specific build instructions for different platforms and tools like Craft and CMake.\n\nFor developers, it outlines how to contribute to the project, emphasizing the welcoming nature for beginners and suggesting involvement in the development group on Matrix or Libera IRC. The guide covers setting up the KDE Connect repository, using Gitlab for patch submissions, and addresses development tips such as restarting the daemon and debug logging.\n\nThe article also details the release process for the C++ application (including Tarballs, Windows Store, Windows EXE), Android app (Google Play Store, FDroid, Huawei) and iOS app (Apple App Store) ensuring quality assurance and proper distribution channels are utilized.\n",
    "chinese_title": "KDE Connect：连接你的所有设备",
    "chinese_summary": "KDE Connect是一个实现设备间通信的项目，提供诸如通知镜像、远程控制、音乐控制、命令执行、电池监控、文件共享等功能。它通过安全的通信协议和插件实现这些功能。\n\n本文为用户和开发者提供指导，包括Linux、Windows、Android、iOS和macOS的安装说明。它强调了使用诸如\"kde-builder\"之类的元构建系统，以便在Linux上更轻松地进行开发，并提供了指向不同平台和工具（如Craft和CMake）的特定构建说明的链接。\n\n对于开发者，本文概述了如何为项目做出贡献，强调了对初学者的欢迎，并建议参与Matrix或Libera IRC上的开发组。该指南涵盖了设置KDE Connect存储库、使用Gitlab提交补丁，并讨论了诸如重启守护进程和调试日志记录等开发技巧。\n\n本文还详细介绍了C++应用程序（包括Tarball、Windows Store、Windows EXE）、Android应用程序（Google Play商店、FDroid、华为）和iOS应用程序（Apple App Store）的发布流程，确保质量保证并利用适当的分发渠道。"
  },
  {
    "id": "45490980",
    "title": "My First Murder",
    "url": "https://www.texasmonthly.com/true-crime/skip-hollandsworth-new-book-she-kills/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "我的第一次谋杀",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45555657",
    "title": "Ksmbd – Exploiting CVE-2025-37947",
    "url": "https://blog.doyensec.com/2025/10/08/ksmbd-3.html",
    "summary": "This article details the exploitation of CVE-2025-37947, a kernel out-of-bounds write vulnerability in ksmbd (kernel SMB daemon). The vulnerability occurs when the `stream_xattr` module is enabled and a writable share is configured, allowing an authenticated user to write beyond the allocated buffer in the `ksmbd_vfs_stream_write` function. Specifically, by setting a crafted file offset and write length, the `memcpy` operation writes past the allocated memory.\n\nThe authors initially considered other vulnerabilities, but chose CVE-2025-37947 for its reliability and potential to bypass kernel mitigations. They focused on a local privilege escalation exploit on Ubuntu 22.04.5 LTS.\n\nThe exploit strategy involves heap shaping using `kmalloc-cg-4k` by allocating many `msg_msg` objects. This creates a memory layout where the vulnerable `stream_buf` allocation can overwrite a neighboring `msg_msg` object. By overwriting the `next` pointer of a primary message queue entry, they create a situation where two primary messages point to the same secondary message. This duplicate message is detected by tagging messages and scanning queues with `msgrcv`. Freeing the real secondary message leads to a use-after-free condition on the fake queue, enabling further exploitation using techniques similar to CVE-2021-22555.  The authors overwrite two bytes in memory, and then reimplement the exploit stages to pivot the stack and gain root privileges.\n",
    "chinese_title": "Ksmbd – 利用 CVE-2025-37947",
    "chinese_summary": "本文详细介绍了 CVE-2025-37947 漏洞的利用，该漏洞是 ksmbd (内核 SMB 守护程序) 中的内核越界写入漏洞。当启用 `stream_xattr` 模块并配置可写共享时，该漏洞允许经过身份验证的用户在 `ksmbd_vfs_stream_write` 函数中写入超出已分配的缓冲区。具体来说，通过设置精心构造的文件偏移量和写入长度，`memcpy` 操作会写入到已分配内存之外。\n\n作者最初考虑了其他漏洞，但选择了 CVE-2025-37947，因为它具有可靠性以及绕过内核缓解措施的潜力。他们专注于 Ubuntu 22.04.5 LTS 上的本地提权漏洞利用。\n\n该漏洞利用策略涉及使用 `kmalloc-cg-4k` 进行堆塑形，方法是分配大量 `msg_msg` 对象。这创建了一种内存布局，其中易受攻击的 `stream_buf` 分配可以覆盖相邻的 `msg_msg` 对象。通过覆盖主消息队列条目的 `next` 指针，他们创建了一种情况，即两个主消息指向同一个次要消息。这种重复消息可以通过标记消息并使用 `msgrcv` 扫描队列来检测到。释放真正的次要消息会导致伪造队列上的使用后释放情况，从而可以使用类似于 CVE-2021-22555 的技术进行进一步的利用。作者覆盖内存中的两个字节，然后重新实现利用阶段，以转移堆栈并获得 root 权限。"
  },
  {
    "id": "45546593",
    "title": "AMD and Sony's PS6 chipset aims to rethink the current graphics pipeline",
    "url": "https://arstechnica.com/gaming/2025/10/amd-and-sony-tease-new-chip-architecture-ahead-of-playstation-6/",
    "summary": "This article discusses \"Project Amethyst,\" a joint effort between AMD and Sony to develop a new chipset architecture for future PlayStation consoles, potentially the PS6. Mark Cerny and Jack Huynh unveiled the project, emphasizing a shift away from brute-force rasterization towards machine learning-based solutions.\n\nThe primary goal is to improve efficiency in graphics processing, particularly concerning upscaling and ray tracing. Project Amethyst introduces \"neural arrays\" to allow compute units to share data for more efficient ML processing, enabling enhanced image quality with technologies like AMD's FSR and Sony's PSSR.\n\nFurthermore, the architecture addresses ray-tracing bottlenecks by implementing dedicated \"radiance cores\" to handle ray traversal, freeing up the CPU and GPU for shader calculations. A key innovation is \"universal compression,\" aiming to reduce the size of all data sent to the GPU, thereby alleviating memory bandwidth limitations and improving overall performance.\n\nWhile Project Amethyst is still in its early stages with no concrete demo, it represents a significant rethinking of the graphics pipeline, focusing on efficiency and leveraging machine learning to achieve more detailed and realistic real-time graphics. The improvements target the eternal struggle for realistic graphics.\n",
    "chinese_title": "AMD和索尼的PS6芯片组旨在重新思考当前的图形流水线。",
    "chinese_summary": "本文探讨了“紫水晶计划”，这是AMD和索尼之间的一项合作，旨在为未来的PlayStation游戏机（可能是PS6）开发一种新的芯片组架构。Mark Cerny和Jack Huynh公布了该项目，强调从蛮力光栅化转向基于机器学习的解决方案。\n\n主要目标是提高图形处理的效率，特别是关于放大和光线追踪。 “紫水晶计划”引入了“神经阵列”，允许计算单元共享数据，从而实现更高效的ML处理，并通过AMD的FSR和索尼的PSSR等技术实现增强的图像质量。\n\n此外，该架构通过实现专用的“辐射核心”来处理光线遍历，从而解决了光线追踪瓶颈，从而释放了CPU和GPU以进行着色器计算。一项关键创新是“通用压缩”，旨在减少发送到GPU的所有数据的大小，从而缓解内存带宽限制并提高整体性能。\n\n虽然“紫水晶计划”仍处于早期阶段，没有具体的演示，但它代表了对图形流水线的一次重大重新思考，侧重于效率，并利用机器学习来实现更详细和逼真的实时图形。这些改进针对的是对逼真图形的永恒追求。"
  },
  {
    "id": "45555106",
    "title": "Show HN: Radiopuppy.com – Minimal Web App for Listening to Online Radio",
    "url": "https://radiopuppy.com",
    "summary": "Radiopuppy.com is a minimal web application designed for listening to online radio. It presents itself as a simple and straightforward interface (\"Skip to main content\" suggests a focus on the core radio functionality). The \"Show HN\" prefix indicates that the creator is sharing their project with the Hacker News community for feedback and discovery. In essence, it's a project focused on providing a streamlined and easy-to-use experience for listening to internet radio stations, presumably without unnecessary features or complexity.\n",
    "chinese_title": "Show HN: Radiopuppy.com – 聆听网络电台的极简网页应用",
    "chinese_summary": "Radiopuppy.com是一个极简的网络应用，旨在收听在线广播。它提供简洁明了的界面（“跳至主要内容”表明其专注于核心广播功能）。 “Show HN”前缀表示创建者正在与 Hacker News 社区分享他们的项目，以获取反馈和推广。 本质上，这是一个专注于为收听网络广播电台提供精简且易于使用的体验的项目，大概没有不必要的功能或复杂性。"
  },
  {
    "id": "45555570",
    "title": "Spyware maker NSO Group confirms acquisition by US investors",
    "url": "https://techcrunch.com/2025/10/10/spyware-maker-nso-group-confirms-acquisition-by-us-investors/",
    "summary": "NSO Group, the Israeli spyware maker, has confirmed its acquisition by a U.S. investment group led by Hollywood producer Robert Simonds in a deal valued in the tens of millions of dollars. While the exact amount and names of other investors remain undisclosed, NSO insists it will remain under Israeli regulatory and operational control.\n\nThe acquisition comes amid significant controversy surrounding NSO Group, which is known for its Pegasus spyware. This spyware has been used to target journalists, dissidents, and human rights defenders worldwide, leading to a U.S. ban on American companies trading with NSO.\n\nJohn Scott-Railton of Citizen Lab expressed concerns about the acquisition, citing NSO's history of acting against American interests and potential attempts to sell its spyware to U.S. law enforcement. He emphasized the dangers of such technology being used against American citizens and their constitutional rights.\n\nThis is not the first time NSO's ownership has changed hands, with previous ownership by U.S. private equity firm Francisco Partners, followed by control being retaken by co-founders and involvement from European firms. The new deal also marks the end of co-founder Omri Lavie's involvement with NSO.\n",
    "chinese_title": "间谍软件制造商NSO集团证实被美国投资者收购",
    "chinese_summary": "以色列间谍软件制造商NSO集团已确认被好莱坞制片人罗伯特·西蒙兹领导的美国投资集团收购，交易价值数千万美元。虽然确切金额和其他投资者的姓名尚未披露，但NSO坚称其将继续接受以色列的监管和运营控制。\n\n此次收购正值围绕NSO集团的重大争议之际，该集团以其“飞马”间谍软件而闻名。该间谍软件已被用于针对全球记者、异见人士和人权捍卫者，导致美国禁止美国公司与NSO进行贸易。\n\n公民实验室的约翰·斯科特-雷尔顿对此次收购表示担忧，理由是NSO过去曾采取过损害美国利益的行为，并可能试图向美国执法部门出售其间谍软件。他强调了这种技术被用于对抗美国公民及其宪法权利的危险性。\n\n这并非NSO首次易主，此前曾由美国私募股权公司Francisco Partners所有，随后由联合创始人重新控制并有欧洲公司的参与。这项新交易也标志着联合创始人奥姆里·拉维与NSO的合作结束。"
  },
  {
    "id": "45549848",
    "title": "Microsoft Amplifier",
    "url": "https://github.com/microsoft/amplifier",
    "summary": "Microsoft Amplifier is a research demonstrator providing a development environment designed to supercharge AI coding assistants, turning them into force multipliers. It offers pre-loaded context, specialized agents, and automation to deliver complex solutions efficiently.\n\nKey features include:\n\n*   **Specialized Agents:** Over 20 AI agents specialized in tasks like architecture, debugging, and security.\n*   **Pre-loaded Context:** Proven patterns and philosophies built-in.\n*   **Parallel Worktree System:** Enables building and testing multiple solutions simultaneously.\n*   **Knowledge Extraction System:** Transforms documentation into a queryable knowledge base.\n*   **Conversation Transcripts:** Automatically saves and restores conversation history.\n*   **Modular Builder (Lite):** Automates module creation from idea to code.\n\nTo use Amplifier, users need Python 3.11+, UV, Node.js, VS Code, and Git. The installation process involves cloning the repository and running `make install`. It also allows users to configure data directories for shared knowledge and backup. Amplifier can be used with existing projects by specifying the project directory.\n\nAmplifier's vision is to create a future where AI can handle tedious tasks, allowing developers to focus on creative decisions, explore multiple approaches in parallel, and leverage a compounding knowledge base. The project is experimental and not currently accepting external contributions, but aims to in the future.\n",
    "chinese_title": "微软放大器",
    "chinese_summary": "微软Amplifier：一款旨在增强AI编码助手能力的研发演示工具，将其转化为力量倍增器。它提供预加载的上下文、专业代理和自动化功能，从而高效地交付复杂解决方案。\n\n主要功能包括：\n\n*   **专业代理：** 超过20个AI代理，专门负责诸如架构、调试和安全等任务。\n*   **预加载上下文：** 内置经验证的模式和理念。\n*   **并行工作树系统：** 能够同时构建和测试多个解决方案。\n*   **知识提取系统：** 将文档转换为可查询的知识库。\n*   **对话记录：** 自动保存和恢复对话历史。\n*   **模块化构建器（精简版）：** 自动化模块创建，从构思到代码。\n\n要使用Amplifier，用户需要Python 3.11+、UV、Node.js、VS Code和Git。安装过程包括克隆存储库并运行`make install`。它还允许用户配置数据目录以用于共享知识和备份。通过指定项目目录，可以将Amplifier与现有项目一起使用。\n\nAmplifier的愿景是创造一个未来，AI可以处理繁琐的任务，使开发人员能够专注于创造性的决策，并行探索多种方法，并利用不断增长的知识库。该项目目前处于实验阶段，暂不接受外部贡献，但未来计划开放。"
  },
  {
    "id": "45489347",
    "title": "Django: One ORM to rule all databases",
    "url": "https://www.paulox.net/2025/10/06/django-orm-comparison/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "Django: 一个ORM，统御所有数据库",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "45547344",
    "title": "Superpowers: How I'm using coding agents in October 2025",
    "url": "https://blog.fsck.com/2025/10/09/superpowers/",
    "summary": "In October 2025, the author details their evolving use of coding agents, now enhanced with a system called \"Superpowers\" within Anthropic's Claude Code environment. Superpowers leverages a \"skills\" system, where Claude learns and applies reusable code patterns and processes from markdown files (SKILL.md). This allows Claude to self-improve and adapt to new information, such as coding best practices learned from books.\n\nThe system promotes a structured coding workflow: brainstorm -> plan -> implement, with automated Git worktree management for parallel tasks. It utilizes a subagent architecture, where Claude dispatches tasks to specialized subagents for implementation and code review. Claude also employs RED/GREEN TDD (Test-Driven Development) for robust code creation.\n\nThe core innovation lies in the \"skills,\" which empower agents with specific capabilities. The author highlights a \"How to create skills\" skill, enabling Claude to autonomously expand its knowledge base. They also emphasize the importance of \"pressure testing\" these skills on subagents using realistic scenarios to ensure reliability. Intriguingly, the author discovered that their existing skills inadvertently leverage persuasion principles, a finding supported by recent research.\n\nTwo key areas for future development include sharing skills with other users and integrating a robust memory system that allows Claude to access and utilize past conversation data. The author encourages readers to try Superpowers, report bugs, and contribute new skills.\n",
    "chinese_title": "超能力：我在2025年10月如何使用代码智能体",
    "chinese_summary": "2025年10月，作者详述了其对编码代理不断演进的使用，现在该代理通过Anthropic的Claude Code环境中的一个名为“超能力”的系统得到增强。“超能力”利用“技能”系统，Claude从中学习并应用来自markdown文件（SKILL.md）的可重用代码模式和流程。这使Claude能够自我改进并适应新信息，例如从书中学习到的编码最佳实践。\n\n该系统提倡结构化的编码工作流程：头脑风暴 -> 计划 -> 实现，并具有用于并行任务的自动化Git工作区管理。它采用子代理架构，Claude将任务分派给专门的子代理进行实施和代码审查。Claude还采用RED/GREEN TDD（测试驱动开发）来创建健壮的代码。\n\n核心创新在于“技能”，它赋予代理特定的能力。作者重点介绍了一个“如何创建技能”的技能，使Claude能够自主扩展其知识库。他们还强调了在现实场景中使用“压力测试”对子代理上的这些技能进行测试以确保可靠性的重要性。有趣的是，作者发现他们现有的技能无意中利用了说服原则，这一发现得到了最近研究的支持。\n\n未来发展的两个关键领域包括与其他用户共享技能以及集成一个强大的内存系统，使Claude能够访问和利用过去的对话数据。作者鼓励读者尝试“超能力”，报告错误并贡献新的技能。"
  },
  {
    "id": "45514060",
    "title": "Let's Take Esoteric Programming Languages Seriously",
    "url": "https://feelingof.com/episodes/078/",
    "summary": "This podcast episode, \"Let's Take Esoteric Programming Languages Seriously,\" explores the value and purpose of esolangs (esoteric programming languages). It challenges the common perception of esolangs as mere jokes or impractical tools, suggesting they offer a valuable opportunity for self-reflection on the nature of programming itself.\n\nThe discussion revolves around a preprint paper by Jeremy Singer and Steve Draper, also titled \"Let's Take Esoteric Programming Languages Seriously,\" grappling with the meaning of appreciating these languages. The hosts examine how esolangs can be used to explore unconventional computational models and unusual syntax designs.\n\nThe episode provides numerous links to esolangs and related projects, including Entropy, Unnecessary, Turing Paint, Brainfuck, Whitespace, Piet, Befunge, Malbolge, Fractran, MarkovJunior, Orca, ArnoldC, Evil.css, and others. It also touches upon code golfing, musical programming environments, natural programming languages for interactive storytelling, and personal expression in programming tools.\n\nThe podcast encourages listeners to view programming languages not just as tools for creating applications, but as reflections of human thought and expression. It promotes a broader understanding of computing and its potential beyond practical applications. The episode concludes with links to the hosts' online presence and musical projects.\n",
    "chinese_title": "认真对待深奥的编程语言",
    "chinese_summary": "让我们认真对待深奥编程语言\n\n这期播客节目“让我们认真对待深奥编程语言”探讨了深奥编程语言（esolangs）的价值和目的。它挑战了人们普遍认为深奥编程语言只是笑话或不实用工具的看法，并认为它们为自我反思编程本身的本质提供了一个宝贵的机会。\n\n讨论围绕着Jeremy Singer和Steve Draper的预印本论文展开，该论文也名为“让我们认真对待深奥编程语言”，探讨了欣赏这些语言的意义。主持人研究了如何使用深奥编程语言来探索非常规的计算模型和不寻常的语法设计。\n\n该节目提供了许多深奥编程语言和相关项目的链接，包括Entropy、Unnecessary、Turing Paint、Brainfuck、Whitespace、Piet、Befunge、Malbolge、Fractran、MarkovJunior、Orca、ArnoldC、Evil.css等等。它还涉及代码高尔夫、音乐编程环境、用于互动故事讲述的自然编程语言以及编程工具中的个人表达。\n\n该播客鼓励听众不仅将编程语言视为创建应用程序的工具，而且将其视为人类思想和表达的反映。它促进了对计算及其在实际应用之外的潜力的更广泛的理解。该节目最后提供了主持人在线状态和音乐项目的链接。"
  },
  {
    "id": "45547492",
    "title": "Daniel Kahneman opted for assisted suicide in Switzerland",
    "url": "https://www.bluewin.ch/en/entertainment/nobel-prize-winner-opts-for-suicide-in-switzerland-2619460.html",
    "summary": "This article from blue News reports that Nobel Prize winner Daniel Kahneman, a renowned Israeli-American psychologist, chose to end his life through assisted suicide in Switzerland on March 27, 2024, at the age of 90. He made this decision to avoid the mental and physical decline often associated with old age, which he had witnessed in his partner and loved ones.\n\nBefore his death, Kahneman spent time in Paris with family, enjoying life and sending farewell emails to close friends. He expressed his conviction that enduring the suffering of old age was unnecessary and wanted to retain his autonomy until the end. While acknowledging that some might view his decision as premature, he believed it was better to act before life became unbearable.\n\nKahneman emphasized that his choice was a personal one and expressed a desire for his death not to overshadow his life's work. He spent his last days reflecting, enjoying, and learning. He concluded his farewell email by expressing gratitude for the fulfilling life he had experienced. The article also provides resources for those struggling with suicidal thoughts and those who have lost loved ones to suicide.\n",
    "chinese_title": "丹尼尔·卡尼曼在瑞士选择协助自杀",
    "chinese_summary": "蓝色新闻报道：诺贝尔奖得主、著名以色列裔美国心理学家丹尼尔·卡尼曼于2024年3月27日在瑞士通过辅助自杀结束了自己的生命，享年90岁。他做出这一决定是为了避免老年时期常见的精神和身体衰退，他曾在伴侣和亲人身上目睹过这些衰退。\n\n卡尼曼在去世前与家人在巴黎度过了一段时光，享受生活并向亲密的朋友发送了告别电子邮件。他表达了自己坚信没有必要忍受老年痛苦，并希望保留自主权直到最后。虽然他承认有些人可能会认为他的决定为时过早，但他认为最好在生活变得难以忍受之前采取行动。\n\n卡尼曼强调，他的选择是个人选择，并希望他的死亡不会掩盖他一生的工作。他生命的最后几天都在反思、享受和学习。他在告别邮件的结尾表达了对所经历的充实生活的感激之情。该文章还为那些与自杀念头作斗争的人以及那些因自杀而失去亲人的人提供了资源。"
  },
  {
    "id": "45515842",
    "title": "Floating Electrons on a Sea of Helium",
    "url": "https://arstechnica.com/science/2025/10/new-qubit-tech-traps-single-electrons-on-liquid-helium/",
    "summary": "EeroQ, a quantum computing company, is pursuing a novel qubit technology based on individual electrons floating on the surface of liquid helium. Unlike existing qubit technologies, this approach leverages the unique properties of liquid helium and the relative isolation of electrons in this environment.\n\nThe technique involves trapping electrons on the surface of superfluid helium using electromagnetic traps on silicon chips. The chips are manufactured using standard CMOS technology, making them potentially scalable. The company has demonstrated the ability to isolate and control the number of electrons in a trap, down to a single electron.\n\nThe qubits are based on the electron's spin. The advantage lies in the potential for extremely long spin coherence, as the electrons are relatively isolated from environmental interactions. EeroQ plans to encode a qubit using a pair of electrons with opposing spins to improve coherence and cancel out decoherence caused by magnetic fields.\n\nA key element of EeroQ's approach is the ability to physically move the electrons around the chip to different locations for entanglement, operations, and measurements. The company envisions a scalable architecture with tens of thousands or even millions of qubits per chip, enabled by compact wiring and digital control.\n\nWhile it's too early to tell if this technology will be successful, the underlying physics is promising and could lead to a viable path for scalable quantum computing.\n",
    "chinese_title": "氦海上的漂浮电子",
    "chinese_summary": "EeroQ，一家量子计算公司，正在研发一种基于漂浮于液氦表面的单个电子的新型量子比特技术。与现有量子比特技术不同，该方法利用了液氦的独特属性以及电子在这种环境中相对隔离的特性。\n\n该技术包括使用硅芯片上的电磁阱将电子捕获在超流体氦的表面上。这些芯片采用标准CMOS技术制造，使其具有潜在的可扩展性。该公司已经展示了在阱中隔离和控制电子数量的能力，甚至可以达到单个电子。\n\n量子比特基于电子的自旋。其优势在于具有极长的自旋相干性的潜力，因为电子与环境相互作用相对隔离。EeroQ计划使用一对具有相反自旋的电子来编码量子比特，以提高相干性并消除由磁场引起的退相干。\n\nEeroQ方法的关键要素是能够将电子在芯片上物理移动到不同的位置，以进行纠缠、运算和测量。该公司设想了一种可扩展的架构，每个芯片包含数万甚至数百万个量子比特，这得益于紧凑的布线和数字控制。\n\n虽然现在判断这项技术是否会成功还为时过早，但其背后的物理学原理很有前景，并可能为可扩展的量子计算提供一条可行的途径。"
  },
  {
    "id": "45498055",
    "title": "The World Trade Center under construction through photos, 1966-1979",
    "url": "https://rarehistoricalphotos.com/twin-towers-construction-photographs/",
    "summary": "This article chronicles the construction of the World Trade Center (WTC) from 1966 to 1979, highlighting its inception, design, challenges, and impact. Driven by David Rockefeller's vision to revitalize Lower Manhattan, the project transformed a \"commercial slum\" into a business hub and created new land on the Hudson River.\n\nArchitect Minoru Yamasaki was chosen for the design, favoring a modern, yet somewhat softened aesthetic with materials like aluminum and concrete. His design featured narrow windows due to his fear of heights. Despite criticism of its aesthetics, the project moved forward, requiring the closure of streets and creative engineering solutions like slurry walls, a first for the US.\n\nThe construction was a massive undertaking involving vast quantities of materials and employing thousands of workers. Excavation created 23.5 acres of new land. The completed complex, including the towers, offered over 10 million square feet of office space, a retail center, and a transportation hub. The article also notes the tragedies associated with the WTC, including accidents during construction, the 1993 bombing, and the devastating attacks of September 11, 2001, that ultimately led to the collapse of both towers.\n",
    "chinese_title": "1966-1979年世贸中心建造照片",
    "chinese_summary": "本文记录了1966年至1979年世界贸易中心（WTC）的建设历程，重点介绍了其构想、设计、挑战和影响。在戴维·洛克菲勒振兴下曼哈顿愿景的推动下，该项目将一片“商业贫民窟”转变为商业中心，并在哈德逊河上创造了新的土地。\n\n建筑师山崎实被选中进行设计，他倾向于采用现代但略带柔和的美学，使用铝和混凝土等材料。由于他恐高，他的设计采用了狭窄的窗户。尽管对其美学存在批评，但该项目仍在推进，需要关闭街道并采用创新的工程解决方案，如泥浆墙，这在美国尚属首次。\n\n该建设是一项浩大的工程，涉及大量材料并雇用了数千名工人。挖掘工作创造了23.5英亩的新土地。包括双塔在内的竣工建筑群提供了超过1000万平方英尺的办公空间、一个零售中心和一个交通枢纽。本文还提到了与世贸中心相关的悲剧，包括建设过程中的事故、1993年的爆炸事件以及2001年9月11日的毁灭性袭击，最终导致两座塔楼的倒塌。"
  },
  {
    "id": "45547359",
    "title": "Windows Subsystem for FreeBSD",
    "url": "https://github.com/BalajeS/WSL-For-FreeBSD",
    "summary": "The Windows Subsystem for FreeBSD (WSFB) is an experimental project aiming to run FreeBSD within Windows Subsystem for Linux 2 (WSL2) with minimal modifications to the FreeBSD base system. It leverages WSL2's open-source components to enable FreeBSD to boot and run natively within Windows.\n\nThe project's primary goals are to achieve native FreeBSD execution on WSL2's architecture, minimize changes to the FreeBSD base, and contribute improvements back to relevant open-source projects. Currently, FreeBSD boots successfully within WSL2, and basic functionality is operational. Ongoing efforts are focused on enhancing networking, I/O, and process management.\n\nThe roadmap includes completing console support, establishing networking, integrating user-mode utilities, and providing documentation. Contributions are encouraged in the form of feedback, bug reports, and discussions. While the project is released under an open-source license (TBD), it is a personal and experimental endeavor, unaffiliated with Microsoft, the FreeBSD Foundation, or the FreeBSD Project, and users should proceed at their own risk.\n",
    "chinese_title": "适用于 FreeBSD 的 Windows 子系统",
    "chinese_summary": "FreeBSD Windows 子系统 (WSFB) 是一个实验性项目，旨在以最少的 FreeBSD 基础系统修改，在 Windows Subsystem for Linux 2 (WSL2) 中运行 FreeBSD。它利用 WSL2 的开源组件使 FreeBSD 能够在 Windows 中原生启动和运行。\n\n该项目的主要目标是在 WSL2 的架构上实现原生 FreeBSD 执行，尽量减少对 FreeBSD 基础系统的更改，并将改进贡献回相关的开源项目。目前，FreeBSD 已在 WSL2 中成功启动，并且基本功能已可运行。当前的工作重点是增强网络、I/O 和进程管理。\n\n路线图包括完成控制台支持、建立网络连接、集成用户模式实用程序以及提供文档。欢迎以反馈、错误报告和讨论的形式提供贡献。虽然该项目以开源许可证（待定）发布，但它是一项个人和实验性的工作，与 Microsoft、FreeBSD 基金会或 FreeBSD 项目无关，用户应自行承担风险。"
  },
  {
    "id": "45529587",
    "title": "A small number of samples can poison LLMs of any size",
    "url": "https://www.anthropic.com/research/small-samples-poison",
    "summary": "This article reports on a study demonstrating that large language models (LLMs), even those with billions of parameters and trained on vast amounts of data, are susceptible to data poisoning attacks with surprisingly few malicious examples. Researchers from Anthropic, the UK AI Security Institute, and the Alan Turing Institute found that injecting as few as 250 poisoned documents can introduce a \"backdoor\" vulnerability that triggers undesirable behaviors, specifically, the generation of gibberish text when a specific trigger phrase (\"<SUDO>\") is encountered.\n\nThe key finding is that the success of these attacks depends on the *absolute number* of poisoned documents, rather than the *percentage* of poisoned data relative to the overall training data. This challenges the prevailing assumption that attackers need to control a significant portion of the training data to poison an LLM.\n\nThe study tested models ranging from 600M to 13B parameters and varied the number of poisoned documents (100, 250, and 500). Results showed that 250+ poisoned documents reliably induced the backdoor across all model sizes.\n\nThe researchers chose a \"denial-of-service\" attack as their target, as it provided a clear and measurable objective. While acknowledging that this specific backdoor (gibberish output) poses limited immediate risks, they release their findings to highlight the practicality of data poisoning attacks and encourage further research into defenses. They emphasize the need for scalable defenses that can detect and mitigate the impact of even a small, fixed number of poisoned samples.\n",
    "chinese_title": "少量样本即可毒害任何规模的LLM",
    "chinese_summary": "本研究报告表明，即使是拥有数十亿参数并经过大量数据训练的大型语言模型 (LLM)，也容易受到数据投毒攻击的影响，且只需极少量恶意样本。来自 Anthropic、英国人工智能安全研究所和艾伦·图灵研究所的研究人员发现，注入少至 250 个被投毒文档即可引入一个“后门”漏洞，触发不良行为，具体表现为当遇到特定触发短语（“<SUDO>”）时，会生成无意义的乱码文本。\n\n关键发现是，这些攻击的成功与否取决于被投毒文档的*绝对数量*，而不是被投毒数据相对于整体训练数据的*百分比*。 这挑战了长期以来的假设，即攻击者需要控制很大一部分训练数据才能对 LLM 进行投毒。\n\n该研究测试了参数范围从 6 亿到 130 亿的模型，并改变了被投毒文档的数量（100、250 和 500）。结果表明，250 多个被投毒文档能够可靠地在所有模型尺寸中诱发后门。\n\n研究人员选择了一种“拒绝服务”攻击作为目标，因为它提供了一个清晰且可衡量的目标。虽然他们承认这种特定的后门（乱码输出）带来的直接风险有限，但他们发布这些研究结果是为了强调数据投毒攻击的实用性，并鼓励对防御措施进行进一步研究。 他们强调需要可扩展的防御措施，以检测和减轻即使是少量、固定数量的被投毒样本的影响。"
  },
  {
    "id": "45549017",
    "title": "Wilson's Algorithm",
    "url": "https://cruzgodar.com/applets/wilsons-algorithm/",
    "summary": "I am sorry, but I cannot provide a summary without access to the actual content of the article. I am unable to browse the internet or access local files on your computer, and therefore cannot read the content associated with the title you provided.\n",
    "chinese_title": "Wilson's Algorithm",
    "chinese_summary": "很抱歉，在没有访问文章实际内容的情况下，我无法提供摘要。我无法浏览互联网或访问您电脑上的本地文件，因此无法阅读与您提供的标题相关的内容。"
  },
  {
    "id": "45543475",
    "title": "I built physical album cards with NFC tags to teach my son music discovery",
    "url": "https://fulghum.io/album-cards",
    "summary": "Jordan Fulghum created physical \"album cards\" with NFC tags for his 10-year-old son to encourage active music discovery and recreate the joy of browsing albums like CDs. Frustrated with the passive, background music experience of streaming services, he wanted a tangible and collectible way for his son to develop his own musical tastes.\n\nHe designed trading cards with album art, using AI to extend the square album covers to fit the rectangular card format. He then embedded NFC tags into the cards, linking them to specific albums stored on his home Plex server. PlexAmp's built-in NFC tag support made the process simple: he could easily program the tags to autoplay albums upon tapping.\n\nAfter printing the cards, assembling them with the NFC tags, and displaying them in a 3D-printed holder, he presented the album cards to his son. His son's first pick was Daft Punk's \"Discovery,\" and the NFC tag instantly played the album on their home speaker. Fulghum observed that the cards encouraged active listening and ownership of music, rather than just passively consuming it. He believes the project successfully taught his children to discover music actively and appreciate albums as a whole.\n",
    "chinese_title": "我制作了带有NFC标签的实体专辑卡片，用来教我儿子发现音乐。",
    "chinese_summary": "Jordan Fulghum created physical \"album cards\" with NFC tags for his 10-year-old son to encourage active music discovery and recreate the joy of browsing albums like CDs. Frustrated with the passive, background music experience of streaming services, he wanted a tangible and collectible way for his son to develop his own musical tastes.\n\nHe designed trading cards with album art, using AI to extend the square album covers to fit the rectangular card format. He then embedded NFC tags into the cards, linking them to specific albums stored on his home Plex server. PlexAmp's built-in NFC tag support made the process simple: he could easily program the tags to autoplay albums upon tapping.\n\nAfter printing the cards, assembling them with the NFC tags, and displaying them in a 3D-printed holder, he presented the album cards to his son. His son's first pick was Daft Punk's \"Discovery,\" and the NFC tag instantly played the album on their home speaker. Fulghum observed that the cards encouraged active listening and ownership of music, rather than just passively consuming it. He believes the project successfully taught his children to discover music actively and appreciate albums as a whole.\n"
  },
  {
    "id": "45552578",
    "title": "Japan's summers have lengthened by 3 weeks over 42 years, say resaerchers",
    "url": "https://english.kyodonews.net/articles/-/62626",
    "summary": "生成摘要时出错",
    "chinese_title": "Japan's summers have lengthened by 3 weeks over 42 years, say resaerchers",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45502590",
    "title": "A Library for Fish Sounds",
    "url": "https://nautil.us/a-library-for-fish-sounds-1239697/",
    "summary": "生成摘要时出错",
    "chinese_title": "A Library for Fish Sounds",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45552199",
    "title": "Indonesia says 22 plants in industrial zone contaminated by caesium 137",
    "url": "https://www.reuters.com/sustainability/boards-policy-regulation/indonesia-says-22-plants-industrial-zone-near-jakarta-contaminated-by-caesium-2025-10-08/",
    "summary": "生成摘要时出错",
    "chinese_title": "Indonesia says 22 plants in industrial zone contaminated by caesium 137",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45552205",
    "title": "SMS Pools and What the US Secret Service Found Around New York",
    "url": "https://garwarner.blogspot.com/2025/09/sms-pools-and-what-us-secret-service.html",
    "summary": "生成摘要时出错",
    "chinese_title": "SMS Pools and What the US Secret Service Found Around New York",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45552573",
    "title": "Diane Keaton has died",
    "url": "https://www.nytimes.com/2025/10/11/movies/diane-keaton-dead.html",
    "summary": "生成摘要时出错",
    "chinese_title": "Diane Keaton has died",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45489757",
    "title": "Ohno Type School: A (2020)",
    "url": "https://ohnotype.co/blog/ohno-type-school-a",
    "summary": "生成摘要时出错",
    "chinese_title": "Ohno Type School: A (2020)",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45539943",
    "title": "Ryanair flight landed at Manchester airport with six minutes of fuel left",
    "url": "https://www.theguardian.com/business/2025/oct/10/ryanair-flight-landed-at-manchester-airport-with-six-minutes-of-fuel-left-flight-log-suggests",
    "summary": "生成摘要时出错",
    "chinese_title": "Ryanair flight landed at Manchester airport with six minutes of fuel left",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45535183",
    "title": "Love C, hate C: Web framework memory problems",
    "url": "https://alew.is/lava.html",
    "summary": "生成摘要时出错",
    "chinese_title": "Love C, hate C: Web framework memory problems",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45556032",
    "title": "The App Store was always authoritarian",
    "url": "https://infrequently.org/2025/10/the-app-store-was-always-authoritarian/",
    "summary": "生成摘要时出错",
    "chinese_title": "The App Store was always authoritarian",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45544228",
    "title": "(Re)Introducing the Pebble Appstore",
    "url": "https://ericmigi.com/blog/re-introducing-the-pebble-appstore/",
    "summary": "生成摘要时出错",
    "chinese_title": "(Re)Introducing the Pebble Appstore",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45557596",
    "title": "The working-class hero of Bletchley Park you didn't see in the movies",
    "url": "https://www.theguardian.com/world/2025/oct/12/move-over-alan-turing-meet-the-working-class-hero-of-bletchley-park-you-didnt-see-in-the-movies",
    "summary": "生成摘要时出错",
    "chinese_title": "The working-class hero of Bletchley Park you didn't see in the movies",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45535424",
    "title": "Show HN: Lights Out: my 2D Rubik's Cube-like Game",
    "url": "https://raymondtana.github.io/projects/pages/Lights_Out.html",
    "summary": "生成摘要时出错",
    "chinese_title": "Show HN: Lights Out: my 2D Rubik's Cube-like Game",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45559144",
    "title": "Why is Saudi Arabia buying up the video game industry?",
    "url": "https://www.youtube.com/watch?v=gAjWuuinXZ4",
    "summary": "生成摘要时出错",
    "chinese_title": "Why is Saudi Arabia buying up the video game industry?",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45536694",
    "title": "Show HN: I invented a new generative model and got accepted to ICLR",
    "url": "https://discrete-distribution-networks.github.io/",
    "summary": "生成摘要时出错",
    "chinese_title": "Show HN: I invented a new generative model and got accepted to ICLR",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45512373",
    "title": "NanoMi: Source-available transmission electron microscope",
    "url": "https://nanomi.org/",
    "summary": "生成摘要时出错",
    "chinese_title": "NanoMi: Source-available transmission electron microscope",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45551081",
    "title": "People regret buying Amazon smart displays after being bombarded with ads",
    "url": "https://arstechnica.com/gadgets/2025/10/people-regret-buying-amazon-smart-displays-after-being-bombarded-with-ads/",
    "summary": "生成摘要时出错",
    "chinese_title": "People regret buying Amazon smart displays after being bombarded with ads",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45513234",
    "title": "Every LLM Is Its Own Media Channel",
    "url": "https://www.aivojournal.org/every-llm-is-its-own-media-channel/",
    "summary": "生成摘要时出错",
    "chinese_title": "Every LLM Is Its Own Media Channel",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45543899",
    "title": "Tangled, a Git collaboration platform built on atproto",
    "url": "https://blog.tangled.org/intro",
    "summary": "生成摘要时出错",
    "chinese_title": "Tangled, a Git collaboration platform built on atproto",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45557382",
    "title": "Must you chew so loud? The trials of suffering from 'misophonia'",
    "url": "https://www.ft.com/content/ebaed0da-cefb-4e68-8890-65575fccc8df",
    "summary": "生成摘要时出错",
    "chinese_title": "Must you chew so loud? The trials of suffering from 'misophonia'",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45557376",
    "title": "Record-High 62% Say U.S. Government Has Too Much Power",
    "url": "https://news.gallup.com/poll/696191/record-high-say-government-power.aspx",
    "summary": "生成摘要时出错",
    "chinese_title": "Record-High 62% Say U.S. Government Has Too Much Power",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45559004",
    "title": "China 'not afraid' of trade war on US rare earths 'double standard' retaliation",
    "url": "https://www.cnbc.com/2025/10/12/china-defends-rare-earth-export-curbs-as-legitimate-hits-back-at-us-tariffs-ahead-of-possible-trump-xi-meeting.html",
    "summary": "生成摘要时出错",
    "chinese_title": "China 'not afraid' of trade war on US rare earths 'double standard' retaliation",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45507753",
    "title": "ThalamusDB: Query text, tables, images, and audio",
    "url": "https://github.com/itrummer/thalamusdb",
    "summary": "生成摘要时出错",
    "chinese_title": "ThalamusDB: Query text, tables, images, and audio",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45524702",
    "title": "Python 3.14 is here. How fast is it?",
    "url": "https://blog.miguelgrinberg.com/post/python-3-14-is-here-how-fast-is-it",
    "summary": "生成摘要时出错",
    "chinese_title": "Python 3.14 is here. How fast is it?",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45513355",
    "title": "Intelligent Search in Rails with Typesense",
    "url": "https://avohq.io/blog/intelligent-search-in-rails-with-typesense",
    "summary": "生成摘要时出错",
    "chinese_title": "Intelligent Search in Rails with Typesense",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45538137",
    "title": "Igalia, Servo, and the Sovereign Tech Fund",
    "url": "https://www.igalia.com/2025/10/09/Igalia,-Servo,-and-the-Sovereign-Tech-Fund.html",
    "summary": "生成摘要时出错",
    "chinese_title": "Igalia, Servo, and the Sovereign Tech Fund",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45549888",
    "title": "How to check for overlapping intervals",
    "url": "https://zayenz.se/blog/post/how-to-check-for-overlapping-intervals/",
    "summary": "生成摘要时出错",
    "chinese_title": "How to check for overlapping intervals",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45545965",
    "title": "How hard do you have to hit a chicken to cook it? (2020)",
    "url": "https://james-simon.github.io/blog/chicken-cooking/",
    "summary": "生成摘要时出错",
    "chinese_title": "How hard do you have to hit a chicken to cook it? (2020)",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45539609",
    "title": "Notes on switching to Helix from Vim",
    "url": "https://jvns.ca/blog/2025/10/10/notes-on-switching-to-helix-from-vim/",
    "summary": "This article details the author's experience switching from Vim/Neovim to the Helix text editor after 20 years of Vim usage. The primary motivation was Helix's built-in language server support, which eliminated the configuration complexities encountered with Vim.\n\nKey advantages of Helix highlighted are its superior search functionality, offering contextual file matching, and a helpful quick reference popup for commands. The author adapted to Helix's workflow, replacing Vim marks with `Ctrl+O/I` for cursor history and macros with multiple cursors. They also prefer Helix's buffer switcher over tabs.\n\nAnnoyances include suboptimal text reflowing, issues with Markdown list continuation, lack of persistent undo, manual file reloading, and occasional crashes (potentially related to Markdown editing). Despite these drawbacks, the author continues using Helix.\n\nThe transition was surprisingly smooth, especially after abandoning attempts to force Vim-like keybindings. The author reorganized their terminal workflow to accommodate the terminal-based editor. Their Helix configuration is minimal, primarily consisting of keybinding customizations and language-specific settings (like disabling auto-formatting for Python).\n\nThe author acknowledges the possibility of returning to Vim in the future, but for now, they appreciate Helix's streamlined configuration and built-in features.\n",
    "chinese_title": "Notes on switching to Helix from Vim",
    "chinese_summary": "This article details the author's experience switching from Vim/Neovim to the Helix text editor after 20 years of Vim usage. The primary motivation was Helix's built-in language server support, which eliminated the configuration complexities encountered with Vim.\n\nKey advantages of Helix highlighted are its superior search functionality, offering contextual file matching, and a helpful quick reference popup for commands. The author adapted to Helix's workflow, replacing Vim marks with `Ctrl+O/I` for cursor history and macros with multiple cursors. They also prefer Helix's buffer switcher over tabs.\n\nAnnoyances include suboptimal text reflowing, issues with Markdown list continuation, lack of persistent undo, manual file reloading, and occasional crashes (potentially related to Markdown editing). Despite these drawbacks, the author continues using Helix.\n\nThe transition was surprisingly smooth, especially after abandoning attempts to force Vim-like keybindings. The author reorganized their terminal workflow to accommodate the terminal-based editor. Their Helix configuration is minimal, primarily consisting of keybinding customizations and language-specific settings (like disabling auto-formatting for Python).\n\nThe author acknowledges the possibility of returning to Vim in the future, but for now, they appreciate Helix's streamlined configuration and built-in features.\n"
  },
  {
    "id": "45557688",
    "title": "Cisco, Fortinet, Palo Alto Networks Devices Targeted in Coordinated Campaign",
    "url": "https://www.securityweek.com/cisco-fortinet-palo-alto-networks-devices-targeted-in-coordinated-campaign/",
    "summary": "生成摘要时出错",
    "chinese_title": "Cisco, Fortinet, Palo Alto Networks Devices Targeted in Coordinated Campaign",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45515290",
    "title": "HATEOAS for Haunted Houses",
    "url": "https://www.sanfordtech.xyz/posts/hateoas-for-haunted-houses/",
    "summary": "生成摘要时出错",
    "chinese_title": "闹鬼房屋的HATEOAS",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45542444",
    "title": "Does our “need for speed” make our wi-fi suck?",
    "url": "https://orb.net/blog/does-speed-make-wifi-suck",
    "summary": "生成摘要时出错",
    "chinese_title": "Does our “need for speed” make our wi-fi suck?",
    "chinese_summary": "生成摘要时出错"
  },
  {
    "id": "45557648",
    "title": "Samsung's model TRM outperforms models 10,000X larger – on specific problems",
    "url": "https://venturebeat.com/ai/samsung-ai-researchers-new-open-reasoning-model-trm-outperforms-models-10",
    "summary": "生成摘要时出错",
    "chinese_title": "Samsung's model TRM outperforms models 10,000X larger – on specific problems",
    "chinese_summary": "生成摘要时出错"
  }
]