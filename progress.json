[
  {
    "id": "44031385",
    "title": "The Windows Subsystem for Linux is now open source",
    "url": "https://blogs.windows.com/windowsdeveloper/2025/05/19/the-windows-subsystem-for-linux-is-now-open-source/",
    "summary": "In a significant move, Microsoft has open-sourced the Windows Subsystem for Linux (WSL), making its code available on GitHub at Microsoft/WSL. Announced at Microsoft Build 2025, this decision marks the culmination of a multi-year effort to prepare for open-source development.\n\nWSL allows users to run Linux distributions directly on Windows, and its architecture is divided into components running within Windows and inside a WSL 2 virtual machine. Key areas of the WSL codebase now available include command-line executables (wsl.exe, wslconfig.exe, wslg.exe), the WSL service (wslservice.exe), Linux init and daemon processes, and the Plan9 server implementation for file sharing.\n\nThis builds upon previously open-sourced components like microsoft/wslg (GUI support) and microsoft/WSL2-Linux-Kernel. However, certain core components like Lxcore.sys and the \"\\\\wsl.localhost\" redirection remain proprietary.\n\nWSL evolved from its initial implementation as \"WSL 1\" in 2016, which used a pico process provider. Later, WSL 2 was introduced in 2019 utilizing the Linux kernel for improved compatibility.\n\nThe transition to open source was driven by the growing community and the need for faster development cycles. In 2021, WSL was separated from the Windows codebase and shipped independently via the Microsoft Store, culminating in the 1.0.0 stable release in November 2022 and the feature-rich 2.0.0 release.\n\nMicrosoft emphasizes the crucial role of the WSL community and hopes this open-source release will foster even greater collaboration and innovation. Developers interested in contributing can find more information at the Microsoft/WSL GitHub repository.\n",
    "chinese_title": "适用于 Linux 的 Windows 子系统现已开源",
    "chinese_summary": "微软开源Windows Linux子系统(WSL)，代码已在GitHub上的Microsoft/WSL发布。此举在2025年微软Build大会上宣布，标志着多年来为开源开发做准备工作的 culminations。\n\nWSL允许用户直接在Windows上运行Linux发行版，其架构分为在Windows内和WSL 2虚拟机内运行的组件。现在可用的WSL代码库的主要区域包括命令行可执行文件 (wsl.exe, wslconfig.exe, wslg.exe)、WSL服务 (wslservice.exe)、Linux init 和守护进程，以及用于文件共享的Plan9服务器实现。\n\n这建立在之前开源的组件之上，例如 microsoft/wslg (GUI支持) 和 microsoft/WSL2-Linux-Kernel。 但是，某些核心组件（如 Lxcore.sys 和“\\\\wsl.localhost”重定向）仍然是专有的。\n\nWSL 从 2016 年作为“WSL 1”的最初实现演变而来，该实现使用了一个 pico 进程提供程序。 后来，WSL 2 于 2019 年推出，利用 Linux 内核来提高兼容性。\n\n向开源的过渡是由不断增长的社区和对更快开发周期的需求所驱动的。 2021 年，WSL 从 Windows 代码库中分离出来，并通过 Microsoft Store 独立发布，最终于 2022 年 11 月发布了 1.0.0 稳定版本和功能丰富的 2.0.0 版本。\n\n微软强调了 WSL 社区的关键作用，并希望此次开源发布能够促进更大的协作和创新。 有兴趣参与贡献的开发人员可以在 Microsoft/WSL GitHub 存储库中找到更多信息。"
  },
  {
    "id": "44030850",
    "title": "Zod 4",
    "url": "https://zod.dev/v4",
    "summary": "Zod 4, a significant update to the Zod validation library, is now stable, offering improvements in speed, size, and TypeScript efficiency. This release was supported by Clerk. To upgrade, users should install `zod@^3.25.0` and import Zod 4 from the `/v4` subpath (`import { z } from \"zod/v4\";`). A migration guide details breaking changes.\n\nKey improvements include:\n\n*   **Performance Boost:** Zod 4 boasts significant speed improvements, including 14x faster string parsing, 3x faster array parsing, and 6.5x faster object parsing.\n*   **Reduced TSC Instantiations:** A redesign simplifies generics, drastically reducing TypeScript compiler instantiations (e.g., a 100x reduction in some cases).\n*   **Smaller Bundle Size:** The core bundle size is reduced by approximately 57% (2.3x smaller).\n*   **Zod Mini:** A new `zod/v4-mini` variant offers a functional, tree-shakable API for projects with strict bundle size constraints, achieving a 6.6x reduction in core bundle size compared to Zod 3.\n*   **Metadata System:** Introduction of a typed metadata system using `z.registry()` and `.meta()`, enhancing schema documentation and integration with JSON Schema.\n*   **JSON Schema Conversion:** First-party JSON Schema conversion via `z.toJSONSchema()`, automatically including metadata.\n*   **Recursive Objects:** Improved handling of recursive object types without type casting.\n*   **File Schemas:** Validation for `File` instances with size and MIME type checks.\n*   **Internationalization:** A locales API for translating error messages (English initially).\n*   **Error Pretty-Printing:** A `z.prettifyError` function for formatting `ZodError` instances.\n*   **Top-Level String Formats:** String formats (e.g., `z.email()`, `z.uuid()`) are now top-level functions. Custom email regex are now supported.\n",
    "chinese_title": "佐德 4",
    "chinese_summary": "Zod 4 现已稳定，是对 Zod 验证库的重大更新，在速度、大小和 TypeScript 效率方面均有所提升。此次发布由 Clerk 提供支持。要升级，用户应安装 `zod@^3.25.0` 并从 `/v4` 子路径导入 Zod 4（`import { z } from \"zod/v4\";`）。迁移指南详细说明了重大变更。\n\n主要改进包括：\n\n*   **性能提升：** Zod 4 拥有显著的速度提升，包括字符串解析速度提高 14 倍，数组解析速度提高 3 倍，以及对象解析速度提高 6.5 倍。\n*   **减少 TSC 实例化：** 重新设计简化了泛型，大幅减少了 TypeScript 编译器实例化（例如，在某些情况下减少了 100 倍）。\n*   **更小的包大小：** 核心包大小减少了约 57%（缩小 2.3 倍）。\n*   **Zod Mini：** 新的 `zod/v4-mini` 变体为具有严格包大小限制的项目提供了功能性、可摇树优化的 API，与 Zod 3 相比，核心包大小减少了 6.6 倍。\n*   **元数据系统：** 引入使用 `z.registry()` 和 `.meta()` 的类型化元数据系统，增强了模式文档和与 JSON Schema 的集成。\n*   **JSON Schema 转换：** 通过 `z.toJSONSchema()` 进行的第一方 JSON Schema 转换，自动包含元数据。\n*   **递归对象：** 改进了对递归对象类型的处理，无需类型转换。\n*   **文件模式：** 验证 `File` 实例的大小和 MIME 类型。\n*   **国际化：** 用于翻译错误消息的区域设置 API（最初为英语）。\n*   **错误美化打印：** 用于格式化 `ZodError` 实例的 `z.prettifyError` 函数。\n*   **顶层字符串格式：** 字符串格式（例如，`z.email()`，`z.uuid()`）现在是顶层函数。现在支持自定义电子邮件正则表达式。"
  },
  {
    "id": "44031297",
    "title": "European Investment Bank to inject €70B in European tech",
    "url": "https://ioplus.nl/en/posts/european-investment-bank-to-inject-70-billion-in-european-tech",
    "summary": "The European Investment Bank (EIB) plans to inject €70 billion into Europe's technology sector by 2027 to close the innovation gap with the United States. Dubbed TechEU, this initiative aims to bolster Europe's position in emerging technologies like AI and military drones while attracting private investment, potentially unlocking €250 billion for the sector.\n\nEIB President Nadia Calviño highlights the bank's increased willingness to take risks, aiming to drastically reduce venture capital financing processing times from 18 months to six. This accelerated timeline is crucial for startups navigating fast-moving markets. TechEU will function as a centralized hub for financing requests, streamlining EU funding processes.\n\nCalviño views the uncertainty surrounding US economic policies as an opportunity to attract international investors to the stability and potential of the European market. The EIB is prioritizing defense and security within its investment portfolio, recognizing the synergy between these sectors and technological advancements.\n\nBy co-investing with private investors, the EIB aims to inspire confidence and catalyze significant growth in the European tech ecosystem. The initiative, currently awaiting approval from EU finance ministers next month, underscores Europe's commitment to becoming a global tech leader. Experts believe Europe holds a competitive advantage in deeptech, positioning it as a key driver for the bloc's future competitiveness.\n",
    "chinese_title": "欧洲投资银行将向欧洲科技领域注资700亿欧元",
    "chinese_summary": "欧洲投资银行计划到2027年向欧洲科技领域注资700亿欧元，以缩小与美国的创新差距。这项名为TechEU的倡议旨在加强欧洲在新兴技术（如人工智能和军用无人机）领域的地位，同时吸引私人投资，有望为该行业释放2500亿欧元的资金。\n\n欧洲投资银行行长纳迪娅·卡尔维尼奥强调，该行更愿意承担风险，目标是将风险资本融资处理时间从18个月大幅缩短至6个月。这种加速的时间表对于在快速变化的市场中运营的初创企业至关重要。 TechEU将作为融资请求的中心枢纽，简化欧盟的融资流程。\n\n卡尔维尼奥认为，美国经济政策的不确定性是吸引国际投资者关注欧洲市场稳定性和潜力的机会。欧洲投资银行正在其投资组合中优先考虑国防和安全，认识到这些领域与技术进步之间的协同作用。\n\n通过与私人投资者共同投资，欧洲投资银行旨在激发信心，并促进欧洲科技生态系统的显著增长。该倡议目前正在等待欧盟财政部长下个月的批准，突显了欧洲致力于成为全球科技领导者的决心。专家认为，欧洲在深科技领域具有竞争优势，使其成为推动欧盟未来竞争力的关键驱动力。"
  },
  {
    "id": "44031009",
    "title": "Too Much Go Misdirection",
    "url": "https://flak.tedunangst.com/post/too-much-go-misdirection",
    "summary": "Tedu's article \"Too Much Go Misdirection\" explores the challenges of achieving zero-copy data handling in Go, specifically when decoding images. The author aims to avoid unnecessary memory copies when an image decoding function receives an `io.Reader` but internally requires a `[]byte`.\n\nThe core issue is that Go's standard library encourages interface-based programming for flexibility (e.g., using `io.Reader` for streaming), but this can lead to inefficiencies when you *already* have the data in memory as a byte slice. The author's function wants to identify if the `io.Reader` is actually a `bytes.Reader` (which wraps a byte slice) to avoid copying the data into a new buffer.\n\nHowever, the journey is complicated. The `image.Decode` function in the standard library checks for a `Peek` method on the reader, wrapping it in a `bufio.Reader` if not found. `bytes.Reader` doesn't implement `Peek`, so it gets wrapped, hiding the underlying byte slice.\n\nThe author then resorts to using `unsafe` to access the underlying `io.Reader` within the `bufio.Reader`, and finally, if it's a `bytes.Reader`, accessing its byte slice directly. This allows him to achieve zero-copy, but at the cost of code complexity and reliance on internal implementation details.\n\nThe article criticizes the inconsistencies in the standard library, noting that `bytes.Reader` should ideally implement `Peek`, and `bufio.Reader` should expose its underlying reader. He highlights Go's structural typing leading to \"shadow APIs\" where certain standard types are favored over others. He questions whether the prevalence of casting in the standard library is evidence of usefulness or poor design, particularly in the context of specialized handling for standard types, which doesn't scale to third-party types.\n",
    "chinese_title": "Go 误导过多",
    "chinese_summary": "Tedu的文章《过多的Go误导：零拷贝的困境》探讨了在Go中实现零拷贝数据处理的挑战，特别是在解码图像时。作者旨在避免图像解码函数接收 `io.Reader` 但内部需要 `[]byte` 时产生不必要的内存拷贝。\n\n核心问题是，Go的标准库鼓励基于接口的编程以实现灵活性（例如，使用 `io.Reader` 进行流式传输），但当您*已经*以字节切片的形式将数据存储在内存中时，这可能会导致效率低下。作者的函数想要识别 `io.Reader` 是否实际上是一个 `bytes.Reader`（它封装了一个字节切片），以避免将数据复制到新的缓冲区中。\n\n然而，这个过程很复杂。标准库中的 `image.Decode` 函数会检查 reader 是否具有 `Peek` 方法，如果未找到，则将其包装在 `bufio.Reader` 中。`bytes.Reader` 未实现 `Peek`，因此它被包装，从而隐藏了底层的字节切片。\n\n然后，作者求助于使用 `unsafe` 来访问 `bufio.Reader` 中的底层 `io.Reader`，最后，如果它是 `bytes.Reader`，则直接访问其字节切片。这使他能够实现零拷贝，但代价是代码复杂性和对内部实现细节的依赖。\n\n这篇文章批评了标准库中的不一致之处，指出 `bytes.Reader` 理想情况下应该实现 `Peek`，而 `bufio.Reader` 应该公开其底层 reader。 他强调了 Go 的结构化类型导致了 “影子 API”，在这种 API 中，某些标准类型比其他类型更受欢迎。 他质疑标准库中类型转换的普遍性是否证明了其有用性或糟糕的设计，尤其是在标准类型的专门处理方面，这种处理方式无法扩展到第三方类型。"
  },
  {
    "id": "44029142",
    "title": "ClawPDF – Open-Source Virtual/Network PDF Printer with OCR and Image Support",
    "url": "https://github.com/clawsoftware/clawPDF",
    "summary": "clawPDF is an open-source virtual printer for Windows offering enterprise-level features. It allows users to create documents in various formats including PDF, PDF/A (1b, 2b, 3b), PDF/X, Image formats (JPEG, PNG, TIFF), SVG, OCR, and TXT. It supports metadata management, password protection with up to 256-bit AES encryption, and can be integrated into applications through a scripting interface.\n\nKey features include network printing capabilities, command-line support for batch printing, silent printing, custom paper sizes, and the ability to merge files. It also supports Optical Character Recognition (OCR). The application offers multiple profiles and post-action configurations, as well as light and dark themes.\n\nClawPDF is compatible with major Windows client and server operating systems (x86/x64/ARM64) including Windows Server 2016-2022 and Windows 7-11. It's easy to deploy using an MSI installer and configuration options.\n\nThe latest version (0.9.3) includes bug fixes, particularly addressing issues with network printing and Windows 7 compatibility.\n\nClawPDF relies on several third-party libraries and tools, each licensed under their respective open-source licenses. It is licensed under the AGPL v3 license.\n",
    "chinese_title": "ClawPDF – 开源虚拟/网络 PDF 打印机，支持 OCR 和图像",
    "chinese_summary": "clawPDF是一款适用于Windows的开源虚拟打印机，提供企业级功能。它允许用户创建各种格式的文档，包括PDF、PDF/A（1b, 2b, 3b）、PDF/X、图像格式（JPEG、PNG、TIFF）、SVG、OCR和TXT。它支持元数据管理、高达256位AES加密的密码保护，并且可以通过脚本界面集成到应用程序中。\n\n主要功能包括网络打印功能、用于批量打印的命令行支持、静默打印、自定义纸张尺寸以及合并文件的能力。它还支持光学字符识别 (OCR)。该应用程序提供多种配置文件和后操作配置，以及浅色和深色主题。\n\nClawPDF与主要的Windows客户端和服务器操作系统（x86/x64/ARM64）兼容，包括Windows Server 2016-2022和Windows 7-11。它易于使用MSI安装程序和配置选项进行部署。\n\n最新版本 (0.9.3) 包含错误修复，特别是解决了网络打印和Windows 7兼容性问题。\n\nClawPDF依赖于多个第三方库和工具，每个库和工具均根据其各自的开源许可获得许可。它以AGPL v3许可证授权。"
  },
  {
    "id": "44031912",
    "title": "Glasskube (YC S24) is hiring in Vienna to build Open Source deployment tools",
    "url": "https://www.ycombinator.com/companies/glasskube/jobs/wjB77iZ-founding-engineer-go-typescript-kubernetes-docker",
    "summary": "Glasskube, a YC S24-funded startup based in Vienna, is seeking a Founding Engineer to join their team and build open-source deployment tools. They are focused on improving developer productivity in the evolving landscape of AI and software deployment.\n\nThe ideal candidate has at least one year of hands-on experience, is proficient in Go, TypeScript, Kubernetes, and Docker, and is passionate about open source. A strong interest in emerging technologies like LLMs and AI agents is a plus. Glasskube prioritizes curiosity, initiative, and intrinsic motivation over specific DevOps background or academic credentials. They encourage applicants to share personal projects and ideas instead of focusing on work experience.\n\nGlasskube offers a salary of €50K - €75K EUR for a full-time position in Vienna. The interview process involves an introductory call, a coding challenge, and meeting the team at their Vienna office. The team is small (5 people), experienced, and committed to open source development. This opportunity is ideal for someone who wants to work in a fast-paced startup environment with close ties to the San Francisco tech scene.\n",
    "chinese_title": "Glasskube (YC S24) 正在维也纳招聘，以构建开源部署工具。",
    "chinese_summary": "Glasskube，一家YC S24投资的维也纳初创公司，正在寻找一位创始工程师加入他们的团队，构建开源部署工具。他们专注于提高开发者在不断发展的人工智能和软件部署领域的生产力。\n\n理想的候选人至少拥有一年以上的实践经验，精通 Go、TypeScript、Kubernetes 和 Docker，并且对开源充满热情。对 LLM 和 AI 代理等新兴技术有浓厚的兴趣者优先。Glasskube 看重求知欲、主动性和内在动力，而非特定的 DevOps 背景或学历。他们鼓励申请者分享个人项目和想法，而不是专注于工作经验。\n\nGlasskube 为维也纳全职职位提供 5 万欧元至 7.5 万欧元的薪资。面试过程包括介绍性电话、编码挑战以及在维也纳办公室与团队会面。该团队规模较小（5 人），经验丰富，并且致力于开源开发。对于那些希望在快节奏的创业环境中工作，并与旧金山科技界保持密切联系的人来说，这是一个理想的机会。"
  },
  {
    "id": "44031144",
    "title": "Wikipedia's Most Translated Articles",
    "url": "https://sohom.dev/most-translated-articles-on-wikipedia/pretty.html",
    "summary": "This Wikipedia article presents a ranked list of articles based on the number of different language editions in which they appear. The list is automatically generated and updated using a Python script on Wikimedia's Toolforge. The data is also available in JSON format.\n\nThe ranking showcases the articles with the widest global reach and interest. The top articles are dominated by countries and geographical locations, followed by fundamental concepts like \"Wikipedia\" itself, languages, and celestial bodies. \"Turkey\" tops the list, followed by \"David Woodard,\" then \"Japan,\" \"Russia,\" and \"United States.\"\n\nThe list covers a diverse range of topics including continents, languages, scientific concepts, historical figures, and popular culture items. Articles like \"English Language,\" \"Earth,\" \"Africa,\" \"Germany,\" \"United Kingdom,\" and \"Europe\" appear high in the rankings. Further down the list are articles about months, elements, cities, animals, religions, and notable people. The long tail of the list includes specific years and dates, indicating the breadth of content that has been widely translated across Wikipedia's language editions.\n",
    "chinese_title": "维基百科翻译最多的文章",
    "chinese_summary": "本维基百科条目根据文章出现的语言版本数量，列出文章的排名列表。该列表由Wikimedia Toolforge上的Python脚本自动生成和更新。数据也以JSON格式提供。\n\n该排名展示了全球覆盖面和兴趣最广泛的文章。排名靠前的文章主要由国家和地理位置占据，其次是诸如“维基百科”本身、语言和天体等基本概念。“土耳其”位居榜首，其次是“大卫·伍达德”，然后是“日本”、“俄罗斯”和“美国”。\n\n该列表涵盖了广泛的主题，包括大陆、语言、科学概念、历史人物和流行文化项目。诸如“英语”、“地球”、“非洲”、“德国”、“英国”和“欧洲”等文章在排名中名列前茅。列表下方还有关于月份、元素、城市、动物、宗教和著名人物的文章。列表的尾部包含特定年份和日期，表明已被广泛翻译成维基百科各种语言版本的内容范围之广。"
  },
  {
    "id": "44030560",
    "title": "Kelp – simple replacement for homebrew on macOS",
    "url": "https://github.com/crhuber/kelp",
    "summary": "Kelp is a Go-based alternative to Homebrew for macOS, designed for easier binary package installation and management. It addresses the issue of waiting for Homebrew formulas and aims to simplify keeping multiple machines up-to-date with a single manifest.\n\n**Key Features & Usage:**\n\n*   **Installation:** Download the latest release from the releases page.\n*   **Initialization:** `kelp init` creates the necessary configuration files. Add `~/.kelp/bin/` to your `PATH`.\n*   **Adding Packages:** `kelp add ogham/exa` (installs the latest release). `kelp add -r 1.0.0 ogham/exa` (installs version 1.0.0). The `-i` flag installs right away (`kelp add -i ogham/exa`).\n*   **Installation:** `kelp install exa` installs a package already added.\n*   **Updating:** `kelp update exa` checks for newer versions. `kelp install exa` installs the update.\n*   **Specific Versions:** `kelp set -r 1.0.1 exa` sets a specific release version.\n*   **Non-Github Packages:** Add packages directly with the http(s) link to the binary using the `-r` flag.\n*   **Configuration:** Kelp stores its config in `~/.kelp/kelp.json`. You can use the `--config` flag or the `KELP_CONFIG` environment variable to change this.\n*   **Troubleshooting:** `kelp doctor` checks for issues and binary availability. `kelp inspect` opens the cache and bin directories. `kelp ls` lists config contents. `kelp set -b \"jira\" jira-cli` maps a GitHub project name to the actual binary name.\n*   **Github Rate Limiting:** Set a github token by doing `export GITHUB_TOKEN=\"XYZ\"`\n\nKelp focuses on macOS binaries and skips Linux/Windows binaries. It is primarily built for the author's workflow, so feature requests may not be honored.\n",
    "chinese_title": "海带 – macOS上homebrew的简单替代品",
    "chinese_summary": "Kelp：macOS 下基于 Go 的 Homebrew 替代方案，旨在简化二进制包的安装和管理。它解决了等待 Homebrew 公式的问题，并致力于通过单一清单简化多台机器的更新。\n\n**主要特性与用法：**\n\n*   **安装：** 从发布页面下载最新版本。\n*   **初始化：** `kelp init` 创建必要的配置文件。将 `~/.kelp/bin/` 添加到你的 `PATH`。\n*   **添加软件包：** `kelp add ogham/exa` (安装最新版本)。 `kelp add -r 1.0.0 ogham/exa` (安装 1.0.0 版本)。 `-i` 标志立即安装 (`kelp add -i ogham/exa`)。\n*   **安装：** `kelp install exa` 安装已添加的软件包。\n*   **更新：** `kelp update exa` 检查是否有更新版本。 `kelp install exa` 安装更新。\n*   **特定版本：** `kelp set -r 1.0.1 exa` 设置特定发布版本。\n*   **非 Github 软件包：** 使用 `-r` 标志，通过指向二进制文件的 http(s) 链接直接添加软件包。\n*   **配置：** Kelp 将其配置存储在 `~/.kelp/kelp.json` 中。你可以使用 `--config` 标志或 `KELP_CONFIG` 环境变量来更改此设置。\n*   **故障排除：** `kelp doctor` 检查问题和二进制文件可用性。 `kelp inspect` 打开缓存和 bin 目录。 `kelp ls` 列出配置内容。 `kelp set -b \"jira\" jira-cli` 将 GitHub 项目名称映射到实际的二进制文件名。\n*   **Github 速率限制：** 通过执行 `export GITHUB_TOKEN=\"XYZ\"` 设置 github token。\n\nKelp 专注于 macOS 二进制文件，并跳过 Linux/Windows 二进制文件。 它主要为作者的工作流程构建，因此功能请求可能不会被采纳。"
  },
  {
    "id": "44028250",
    "title": "Telum II at Hot Chips 2024: Mainframe with a Unique Caching Strategy",
    "url": "https://chipsandcheese.com/p/telum-ii-at-hot-chips-2024-mainframe-with-a-unique-caching-strategy",
    "summary": "This article discusses IBM's Telum II mainframe processor, presented at Hot Chips 2024, focusing on its unique caching strategy. Telum II features only eight cores running at 5.5 GHz, but boasts a massive 360 MB on-chip cache, a DPU for I/O acceleration, and an AI accelerator. It's built on Samsung's 5nm process.\n\nThe core innovation is a \"virtual L3\" cache implemented by cleverly managing its ten 36 MB L2 caches. Eight L2s are dedicated to cores, one to the DPU, and one floats. When an L2 evicts a cache line, it doesn't necessarily go to a traditional shared L3. Instead, it's sent to another L2 with a lower \"Saturation Metric\" (indicating less use), effectively repurposing L2 capacity as a shared L3. This reduces data duplication and maximizes cache utilization.  IBM further optimizes this by controlling where virtual L3 lines are inserted in the LRU (Least Recently Used) positions, limiting how much L2 capacity it uses.\n\nBeyond the chip, up to 32 Telum II processors can be linked in a shared memory system, creating a \"virtual L4\" cache of 2.8 GB by sending L3 victims to other chips with spare cache. This likely leverages IBM's CPC drawer architecture. The article speculates on the implementation of this virtual L4, drawing comparisons to prior IBM mainframe designs.\n\nThe article highlights IBM's focus on single-threaded performance in its mainframe chips despite server workloads, a contrast to typical server CPU design.  It concludes by pondering if similar caching strategies could benefit client CPUs, particularly with advanced packaging technologies to overcome bandwidth limitations.\n",
    "chinese_title": "Telum II 于 Hot Chips 2024 大会亮相：采用独特缓存策略的大型主机",
    "chinese_summary": "本文探讨了在Hot Chips 2024上展示的IBM Telum II大型机处理器，重点关注其独特的缓存策略。Telum II仅有八个运行在5.5 GHz的核心，但拥有高达360 MB的片上缓存、一个用于I/O加速的DPU和一个AI加速器，采用三星的5nm工艺制造。\n\n核心创新是利用巧妙管理其十个36 MB L2缓存来实现的“虚拟L3”缓存。八个L2专用于核心，一个用于DPU，一个浮动。当L2驱逐一个缓存行时，它不一定去传统的共享L3，而是发送到具有较低“饱和度指标”（表示使用较少）的另一个L2，从而有效地将L2容量重新用作共享L3。这减少了数据重复并最大化了缓存利用率。IBM通过控制虚拟L3行插入LRU（最近最少使用）位置的位置来进一步优化此过程，从而限制了其使用的L2容量。\n\n除了芯片之外，最多可以将32个Telum II处理器链接在共享内存系统中，通过将L3牺牲者发送到具有备用缓存的其他芯片，从而创建一个2.8 GB的“虚拟L4”缓存。这可能利用了IBM的CPC抽屉架构。本文推测了这种虚拟L4的实现方式，并与之前的IBM大型机设计进行了比较。\n\n本文强调了IBM在其大型机芯片中对单线程性能的关注，尽管服务器工作负载与典型的服务器CPU设计形成对比。文章最后思考了类似的缓存策略是否可以使客户端CPU受益，特别是借助先进的封装技术来克服带宽限制。"
  },
  {
    "id": "44020832",
    "title": "InventWood is about to mass-produce wood that's stronger than steel",
    "url": "https://techcrunch.com/2025/05/12/inventwood-is-about-to-mass-produce-wood-thats-stronger-than-steel/",
    "summary": "InventWood, a startup born from research at the University of Maryland, is poised to mass-produce \"Superwood,\" a wood-based material stronger than steel. Developed by materials scientist Liangbing Hu, the technology transforms ordinary timber using food-industry chemicals and compression techniques to strengthen the cellulose already present in the wood. This process results in a material with 50% greater tensile strength than steel and a significantly improved strength-to-weight ratio. Superwood is also Class A fire-rated, resistant to rot and pests, and can be stabilized for outdoor use.\n\nInventWood has secured $15 million in Series A funding to build its first commercial plant, with initial focus on facade materials for buildings. The company aims to eventually replace concrete and steel in building construction, significantly reducing the carbon footprint of the building industry. The compressed wood also boasts an attractive, natural color, resembling expensive tropical hardwoods. Future plans involve producing structural beams of various dimensions from wood chips, offering a sustainable and aesthetically pleasing alternative to traditional building materials.\n",
    "chinese_title": "InventWood即将大规模生产强度超过钢铁的木材",
    "chinese_summary": "马里兰大学研究衍生的初创公司InventWood，正准备大规模生产一种比钢铁更坚固的木质材料“超级木材”。这项技术由材料科学家胡良兵开发，利用食品工业化学品和压缩技术改造普通木材，以增强木材中原有的纤维素。由此产生的材料比钢铁的抗拉强度高50%，且强度重量比显著提高。“超级木材”还具有A级防火等级，防腐防虫，并可稳定用于户外。\n\nInventWood已获得1500万美元的A轮融资，用于建设其第一家商业工厂，初期重点是建筑物的立面材料。该公司旨在最终取代建筑施工中的混凝土和钢材，从而显著减少建筑行业的碳足迹。这种压缩木材还拥有迷人的天然颜色，类似于昂贵的热带硬木。未来的计划包括用木屑生产各种尺寸的结构梁，为传统建筑材料提供可持续且美观的替代方案。"
  },
  {
    "id": "44030873",
    "title": "23andMe Sells Gene-Testing Business to DNA Drug Maker Regeneron",
    "url": "https://www.bloomberg.com/news/articles/2025-05-19/23andme-sells-gene-testing-business-to-dna-drug-maker-regeneron",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "23andMe将基因检测业务出售给DNA药物制造商再生元",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44031432",
    "title": "GitHub Copilot Coding Agent",
    "url": "https://github.blog/changelog/2025-05-19-github-copilot-coding-agent-in-public-preview/",
    "summary": "The GitHub Copilot Coding Agent allows users to delegate coding tasks to Copilot, effectively assigning issues like another developer. Copilot operates in a secure, cloud-based environment utilizing GitHub Actions to explore repositories, implement changes, and validate work through tests and linters before creating a pull request for review.\n\nCopilot excels at tasks of low to medium complexity within well-tested codebases, including feature additions, bug fixes, test extensions, refactoring, and documentation improvements. Multiple issues can be assigned to Copilot simultaneously.\n\nCurrently available for Copilot Pro+ and Copilot Enterprise subscribers (with Enterprise requiring administrator enablement), using the agent consumes GitHub Actions minutes and Copilot premium requests.\n\nGitHub emphasizes the feature is in public preview and the UI is subject to change. Starting June 4th, each model request the agent makes will consume one premium request. Users are encouraged to consult the provided documentation and provide feedback on their experience.\n",
    "chinese_title": "GitHub Copilot 编码助手",
    "chinese_summary": "GitHub Copilot 编码代理允许用户将编码任务委派给 Copilot，有效地像分配给其他开发者一样分配问题。Copilot 在安全的云环境中运行，利用 GitHub Actions 探索代码仓库、实施更改，并通过测试和代码检查器验证工作，然后在创建拉取请求以供审查。\n\nCopilot 擅长在经过充分测试的代码库中处理中低复杂度的任务，包括添加功能、修复错误、扩展测试、重构和改进文档。可以同时将多个问题分配给 Copilot。\n\n目前，Copilot Pro+ 和 Copilot Enterprise 订阅者可以使用此功能（Enterprise 需要管理员启用），使用该代理会消耗 GitHub Actions 分钟数和 Copilot 高级请求数。\n\nGitHub 强调该功能目前处于公开预览阶段，UI 可能会发生变化。从 6 月 4 日起，代理发出的每个模型请求将消耗一个高级请求。鼓励用户查阅提供的文档并提供有关其体验的反馈。"
  },
  {
    "id": "44030696",
    "title": "SDB Scans the Ruby Stack Without the GVL",
    "url": "https://github.com/yfractal/blog/blob/master/blog/2025-01-15-non-blocking-stack-profiler.md",
    "summary": "The article \"SDB Scans the Ruby Stack Without the GVL\" likely discusses an implementation or technique where the Simple Debugger (SDB) for Ruby can analyze or scan the Ruby stack without requiring the Global Interpreter Lock (GVL) to be released or acquired. This is significant because the GVL limits Ruby's concurrency by allowing only one thread to execute Ruby code at a time.\n\nBy bypassing the GVL during stack scanning, SDB can potentially offer several advantages:\n\n*   **Improved Performance:** Debugging operations become faster since they don't contend for the GVL.\n*   **Reduced Interference:** Debugging activities have less impact on the application's overall performance, particularly in multi-threaded scenarios.\n*   **Non-Blocking Debugging:** Debugging operations are less likely to cause deadlocks or unexpected behavior due to GVL contention.\n\nThe title suggests the article focuses on the technical details of how SDB accomplishes this GVL-free stack scanning, possibly by using alternative methods to access stack data or employing mechanisms that avoid requiring the GVL. The \"yfractal/blog\" at the top suggests this is a blog post detailing this technique. The metrics \"Fork 0\" and \"Star 46\" indicate this technique might be interesting to other Ruby developers.\n",
    "chinese_title": "SDB 扫描不含 GVL 的 Ruby 堆栈",
    "chinese_summary": "文章《SDB扫描 Ruby 堆栈，无需 GVL》可能探讨了一种实现或技术，Ruby 的简单调试器 (SDB) 可以在不释放或获取全局解释器锁 (GVL) 的情况下分析或扫描 Ruby 堆栈。这具有重要意义，因为 GVL 通过一次只允许一个线程执行 Ruby 代码来限制 Ruby 的并发性。\n\n通过在堆栈扫描期间绕过 GVL，SDB 可能会提供以下几个优点：\n\n*   **性能提升：** 调试操作变得更快，因为它们不会争用 GVL。\n*   **减少干扰：** 调试活动对应用程序整体性能的影响较小，尤其是在多线程场景中。\n*   **非阻塞调试：** 调试操作不太可能因 GVL 争用而导致死锁或意外行为。\n\n标题表明该文章侧重于 SDB 如何完成这种无 GVL 堆栈扫描的技术细节，可能通过使用替代方法访问堆栈数据或采用避免需要 GVL 的机制。\"yfractal/blog\" 表明这是一篇详细介绍此技术的博客文章。\"Fork 0\" 和 \"Star 46\" 指标表明此技术可能对其他 Ruby 开发人员感兴趣。"
  },
  {
    "id": "44027867",
    "title": "Side projects I've built since 2009",
    "url": "https://naeemnur.com/side-projects/",
    "summary": "This page showcases a list of side projects built since 2009. The author emphasizes a straightforward approach: build what you like, using familiar technology (primarily WordPress, with some Laravel and React). They advise against getting bogged down in framework choices, prioritizing building over technical perfection.\n\nThe projects are categorized into three sections: Active, Sold, and Dead.\n\n*   **Active Projects:** These are currently online and maintained. Examples include \"Handheld Hunt,\" \"Mild Themes,\" \"Stack Your Project,\" \"Cats of the Web,\" \"RCFlex,\" and \"mildspring.\"\n*   **Sold Projects:** These projects were successfully sold to other owners. Examples include \"Flag Palette,\" \"ZeroAcquire,\" \"Tiny Resume,\" \"PolicyTrail,\" \"InventedBy,\" \"Symbol Hunt,\" and several others focusing on finance, tech, and development resources.\n*   **Dead Projects:** These projects are no longer active. They cover a range of topics including writing systems, random haiku generation, GitHub repository tracking, stock prices, working hours, and cryptocurrency analysis. Several dead projects from 2017 and earlier focused on WordPress and football.\n\nThe overall impression is one of prolific creation and iterative learning, with a willingness to experiment and move on from projects that no longer serve a purpose. Each project listed includes a brief description and a link to \"More Info.\"\n",
    "chinese_title": "我自2009年以来构建的副业项目",
    "chinese_summary": "此页面展示了自2009年以来构建的一系列副业项目。作者强调了一种简单直接的方法：用熟悉的技术（主要使用WordPress，以及一些Laravel和React）构建你喜欢的东西。他们建议不要陷入框架选择的泥潭，优先考虑构建，而不是追求技术上的完美。\n\n这些项目分为三个部分：活跃项目、已售项目和已停止项目。\n\n*   **活跃项目：** 目前在线并维护的项目。例如“Handheld Hunt”、“Mild Themes”、“Stack Your Project”、“Cats of the Web”、“RCFlex”和“mildspring”。\n*   **已售项目：** 成功出售给其他所有者的项目。例如“Flag Palette”、“ZeroAcquire”、“Tiny Resume”、“PolicyTrail”、“InventedBy”、“Symbol Hunt”，以及其他几个专注于金融、科技和开发资源的项目。\n*   **已停止项目：** 不再活跃的项目。涵盖了包括书写系统、随机俳句生成、GitHub仓库跟踪、股票价格、工作时间和加密货币分析等各种主题。2017年及更早的一些已停止项目专注于WordPress和足球。\n\n总体印象是高产的创造和迭代学习，以及愿意尝试和放弃不再有用的项目的意愿。列出的每个项目都包含简短的描述和“更多信息”的链接。"
  },
  {
    "id": "44001696",
    "title": "Remarks on AI from NZ",
    "url": "https://nealstephenson.substack.com/p/remarks-on-ai-from-nz",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "来自新西兰的人工智能见解",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44031000",
    "title": "Discover is now part of Capital One",
    "url": "https://www.discover.com/faqs/merger/",
    "summary": "On May 18, 2025, Discover Bank merged into Capital One, N.A. This announcement informs customers that Discover is now part of Capital One. The notice directs customers with questions about credit cards, online banking accounts, or loans to available resources.\n\nThe page provides navigation to information on credit cards, online banking, personal loans, student loans, and home loans, all under the umbrella of Capital One. It also indicates that a list of frequently asked questions is available. The notice assures customers that updates will continue to be provided on the page and that familiar U.S.-based customer service is available via phone or online chat. In essence, the page serves as a central hub for information and support related to the Discover/Capital One merger.\n",
    "chinese_title": "Discover 現已成為 Capital One 的一部分。",
    "chinese_summary": "2025年5月18日，Discover银行并入Capital One, N.A.。本公告告知客户Discover现已成为Capital One的一部分。通知引导对信用卡、网上银行账户或贷款有疑问的客户查阅可用资源。\n\n本页面提供信用卡、网上银行、个人贷款、学生贷款和房屋贷款的信息导航，所有这些都在Capital One旗下。页面还表明提供常见问题解答列表。通知向客户保证，页面将持续提供更新，并且可以通过电话或在线聊天获得熟悉的美国境内客户服务。总而言之，该页面是与Discover/Capital One合并相关的信息和支持中心。"
  },
  {
    "id": "44029435",
    "title": "Diffusion Models Explained Simply",
    "url": "https://www.seangoedecke.com/diffusion-models-explained/",
    "summary": "This article provides a simplified explanation of diffusion models, a key technology behind high-quality image generation AI. Unlike transformer-based language models that predict the next token in a sequence, diffusion models learn to reverse the process of adding noise to an image.\n\nThe core idea is to train a model to understand the \"gradient\" between any image and pure noise. During training, the model is fed noisy images (with captions) and tasked with predicting the added noise. It learns to identify the noise from slightly noisy to completely noisy images.\n\nAt inference, the model starts with pure noise and a caption, then iteratively removes predicted noise layers, revealing the \"original\" generated image. This \"denoising\" process is enhanced by techniques like Variational Autoencoders (VAEs) for compressing images before adding noise and Classifier-Free Guidance to ensure the model adheres to the provided caption.\n\nKey differences from transformers include: diffusion models operate on entire images at each step, requiring a \"blank canvas\" of noise to start from, and they can edit previous outputs. A unique feature is the ability to adjust the quality/speed trade-off by running the model for more or less time. The article also explores how the same principles are applied to video and audio generation, albeit with larger tensors. Text diffusion, however, is more complex, as adding noise to text requires working with embeddings and is difficult to reverse.\n",
    "chinese_title": "扩散模型简述",
    "chinese_summary": "本文简要介绍了扩散模型，它是高质量图像生成AI背后的关键技术。与预测序列中下一个token的基于Transformer的语言模型不同，扩散模型学习逆转向图像添加噪声的过程。\n\n其核心思想是训练一个模型来理解任何图像和纯噪声之间的“梯度”。在训练过程中，该模型接收带有噪点的图像（附带说明），并被要求预测添加的噪声。它学习识别从轻微噪点到完全噪点的图像中的噪声。\n\n在推理时，该模型从纯噪声和说明开始，然后迭代地删除预测的噪声层，从而显示“原始”生成的图像。这种“去噪”过程通过变分自编码器 (VAE) 等技术得到增强，这些技术用于在添加噪声之前压缩图像，以及无分类器引导，以确保模型遵守提供的说明。\n\n与 Transformer 的主要区别包括：扩散模型在每个步骤都对整个图像进行操作，需要从“空白画布”噪声开始，并且可以编辑之前的输出。一个独特的特点是可以通过运行模型或长或短的时间来调整质量/速度的权衡。本文还探讨了如何将相同的原理应用于视频和音频生成，尽管具有更大的张量。然而，文本扩散更加复杂，因为向文本添加噪声需要使用嵌入，并且难以逆转。"
  },
  {
    "id": "44029619",
    "title": "Visualizing 100k Years of Earth in WebGL",
    "url": "https://technistuff.com/posts/visualizing-100000-years-of-earth-in-webgl/",
    "summary": "This article details the creation of an interactive WebGL model visualizing Earth's geography over the past 100,000 years, focusing on its impact on human history and migration. The author combines multiple scientific datasets, including elevation, sea level, climate, and ice sheet data, to achieve this.\n\nThe process involves:\n\n*   **Elevation Mapping:** Using NOAA's ETOPO data, downsampling it, compressing it for efficient rendering, and displaying it with a custom shader in THREE.js that differentiates land and water based on height.\n*   **Historic Sea Levels:** Utilizing NOAA's Global Sea Level Reconstruction to allow users to adjust the sea level and visualize geographical changes like the connection between Great Britain and Europe (Doggerland) and the Bering Strait land bridge.\n*   **Climate Data:** Integrating simulated rainfall and temperature data, compressed into a sampler2DArray for the GPU, to color the globe based on climate conditions (e.g., desert, forest).\n*   **Ice Sheets:** Rendering ice sheets using the Global ice sheet reconstruction, parsing NetCDF data, and employing a triangulation method (flood fill, edge finding, smoothing, Delaunay triangulation) to create efficient GPU-rendered triangles.\n*   **Borders:** Adding modern country borders using World Administrative Boundaries data, smoothed and rendered as lines in THREE.js.\n\nThe author provides code snippets of shaders used. The result is an interactive globe allowing users to explore how Earth's geography has changed over time. The project aims to visualize the influence of geography on human history, with potential future additions including historical events. A live demo and source code are available for exploration.\n",
    "chinese_title": "用WebGL可视化地球10万年变迁",
    "chinese_summary": "本文详细介绍了如何创建一个交互式WebGL模型，以可视化地球过去10万年的地理变化，重点关注其对人类历史和迁徙的影响。作者结合了多种科学数据集，包括海拔、海平面、气候和冰盖数据，来实现这一目标。\n\n该过程包括：\n\n*   **海拔Mapping:** 使用NOAA的ETOPO数据，对其进行降采样、压缩以实现高效渲染，并使用THREE.js中的自定义着色器显示，该着色器基于高度区分陆地和水域。\n*   **历史海平面:** 利用NOAA的全球海平面重建数据，允许用户调整海平面，并可视化地理变化，如英国和欧洲之间的连接（多格兰）和白令海峡陆桥。\n*   **气候数据:** 集成模拟的降雨和温度数据，压缩成用于GPU的sampler2DArray，以根据气候条件（例如，沙漠、森林）对地球进行着色。\n*   **冰盖:** 使用全球冰盖重建数据渲染冰盖，解析NetCDF数据，并采用三角测量方法（洪水填充、边缘查找、平滑、Delaunay三角剖分）来创建高效的GPU渲染三角形。\n*   **边界:** 添加现代国家边界，使用世界行政边界数据，平滑处理并在THREE.js中渲染为线条。\n\n作者提供了所用着色器的代码片段。最终成果是一个交互式地球，允许用户探索地球的地理如何在过去的时间里发生变化。该项目旨在可视化地理对人类历史的影响，未来可能添加历史事件。提供了一个在线演示和源代码供探索。"
  },
  {
    "id": "44031387",
    "title": "xAI's Grok 3 comes to Microsoft Azure",
    "url": "https://techcrunch.com/2025/05/19/xais-grok-3-comes-to-microsoft-azure/",
    "summary": "Microsoft is now offering managed access to xAI's Grok 3 and Grok 3 mini AI models through its Azure AI Foundry platform, becoming one of the first major cloud providers to do so. This means Azure customers can directly access and be billed for the Grok models with the service-level agreements they expect from Microsoft products.\n\nThe article highlights Grok's history as a more unfiltered and \"edgy\" AI, willing to tackle controversial topics, but also notes the controversies it has faced, including generating inappropriate content and censoring information. Specifically, incidents involving the model's response to photos of women, censorship of Donald Trump and Elon Musk, and problematic references to white genocide in South Africa are mentioned.\n\nThe Grok models available on Azure AI Foundry are more controlled than those accessible through xAI's API and on X. They also come with extra data integration, customization, and governance capabilities. This offering aims to provide enterprise customers with a safer and more manageable experience while using Grok's capabilities.\n",
    "chinese_title": "xAI 的 Grok 3 登陆微软 Azure",
    "chinese_summary": "微软现通过其 Azure AI Foundry 平台提供对 xAI 的 Grok 3 和 Grok 3 mini AI 模型的托管访问，成为首批提供此服务的主要云提供商之一。这意味着 Azure 客户可以直接访问 Grok 模型并根据微软产品的服务级别协议付费。\n\n文章强调了 Grok 作为一种更未经审查和“前卫”的 AI 的历史，它愿意处理有争议的话题，但也指出了它所面临的争议，包括生成不当内容和审查信息。 具体而言，提到了涉及模型对女性照片的反应、对唐纳德·特朗普和埃隆·马斯克的审查，以及在南非对“白人种族灭绝”问题的敏感提及等事件。\n\n在 Azure AI Foundry 上提供的 Grok 模型比通过 xAI 的 API 和 X 访问的模型更受控制。 它们还具有额外的数据集成、定制和治理功能。 此产品旨在为企业客户提供更安全、更易于管理的 Grok 功能使用体验。"
  },
  {
    "id": "43998075",
    "title": "About Asteroids, Atari's biggest arcade hit",
    "url": "https://www.goto10retro.com/p/about-asteroids-ataris-biggest-arcade",
    "summary": "This article discusses Atari's arcade hit, Asteroids, its impact, and various versions across different platforms. Conceived in 1979 by Lyle Rains and Ed Logg, Asteroids distinguished itself from Space Invaders with its complex gameplay involving thrust, rotation, and ricocheting asteroids that broke into smaller, faster pieces. The game employed vector graphics, providing high resolution and a distinctive glowing effect, a choice later used in other popular Atari games.\n\nThe author reflects on their personal experiences with the game, finding the arcade's button controls challenging compared to the joystick adaptations in home versions. They particularly enjoyed the cocktail table version found at a local store.\n\nThe article explores Asteroids' success, selling over 70,000 units. It then delves into the Atari 2600 version, noting its visual differences but praising its engaging gameplay. Mentions are made of Asteroids versions for the Atari 7800, including a more recent \"Deluxe\" edition aiming to emulate vector graphics.\n\nFinally, the author touches on versions for Atari 8-bit computers and the Atari ST, mentioning the clone \"Megaroids.\" As a personal homage, the author created their own version, \"Space Rocks,\" using Xojo, a basic but challenging take on the classic game. The author ends by inviting readers to share their favorite version of the game in the comments.\n",
    "chinese_title": "关于雅达利最畅销的街机游戏《小行星》",
    "chinese_summary": "本文探讨了雅达利街机游戏巨作《小行星》的影响，以及其在不同平台上的各种版本。这款游戏由莱尔·雷恩斯和埃德·洛格于1979年构思，以其复杂的游戏玩法（包括推力、旋转和反弹的小行星会分裂成更小、更快的碎片）而区别于《太空侵略者》。该游戏采用了矢量图形，提供了高分辨率和独特的发光效果，这一选择后来也被用于其他流行的雅达利游戏中。\n\n作者回顾了自己玩这款游戏的个人经历，觉得街机的按钮控制比家用版本中的操纵杆改装更具挑战性。 他特别喜欢在当地商店找到的鸡尾酒桌版本。\n\n本文探讨了《小行星》的成功，销量超过7万台。 然后深入研究了雅达利2600版本，注意到其视觉差异，但赞扬了其引人入胜的游戏玩法。文中提到了雅达利7800的《小行星》版本，包括一个更新的“豪华”版，旨在模拟矢量图形。\n\n最后，作者提到了雅达利8位电脑和雅达利ST的版本，并提到了克隆游戏“巨型陨石”。 作为个人的致敬，作者使用Xojo创建了自己的版本“太空岩石”，这是对经典游戏的简单但具有挑战性的尝试。 作者最后邀请读者在评论中分享他们最喜欢的游戏版本。"
  },
  {
    "id": "43996515",
    "title": "Show HN: Cogitator – A Python Toolkit for Chain-of-Thought Prompting",
    "url": "https://github.com/habedi/cogitator",
    "summary": "Cogitator is a Python toolkit designed to simplify experimentation with and implementation of Chain-of-Thought (CoT) prompting techniques for Large Language Models (LLMs). CoT prompting enhances LLM performance on complex tasks by guiding models to generate intermediate reasoning steps. Cogitator offers a unified API for various CoT strategies and frameworks, supporting OpenAI and Ollama LLM providers, structured output validation with Pydantic, and a customizable benchmarking framework.\n\nKey features include implementations of popular CoT strategies like Self-Consistency CoT, Automatic CoT, Least-to-Most Prompting, Tree of Thoughts, Graph of Thoughts, and Clustered Distance-Weighted CoT. The toolkit can be installed via `pip install cogitator`.\n\nThe provided example demonstrates using Self-Consistency CoT with Ollama to solve a simple problem, showcasing the ease of use. The toolkit provides documentation and a benchmarking framework to evaluate different CoT strategies on datasets like GSM8K and StrategyQA. Contribution guidelines and citation information are also included, encouraging users to contribute and properly credit the project in their research. The project is open-source, licensed under the MIT License, and available on GitHub.\n",
    "chinese_title": "显示 HN：Cogitator – 用于链式思考提示的 Python 工具包",
    "chinese_summary": "Cogitator是一个Python工具包，旨在简化大型语言模型(LLM)的思维链(CoT)提示技术的实验和实现。CoT提示通过引导模型生成中间推理步骤来增强LLM在复杂任务上的性能。Cogitator为各种CoT策略和框架提供统一的API，支持OpenAI和Ollama LLM提供商，使用Pydantic进行结构化输出验证，以及一个可定制的基准测试框架。\n\n主要功能包括流行CoT策略的实现，如自洽性CoT、自动CoT、由简入繁提示、思维树、思维图和聚类距离加权CoT。该工具包可以通过`pip install cogitator`安装。\n\n提供的示例演示了如何使用Ollama的自洽性CoT来解决一个简单的问题，展示了其易用性。该工具包提供文档和一个基准测试框架，用于评估GSM8K和StrategyQA等数据集上不同的CoT策略。还包括贡献指南和引用信息，鼓励用户贡献并在他们的研究中正确地引用该项目。该项目是开源的，采用MIT许可证，并且可以在GitHub上找到。"
  },
  {
    "id": "44026799",
    "title": "Show HN: Goboscript, text-based programming language, compiles to Scratch",
    "url": "https://github.com/aspizu/goboscript",
    "summary": "Goboscript is a text-based programming language that compiles into Scratch projects (.sb3 files), enabling users to write Scratch code in text format using any text editor and leverage version control systems like Git. It offers benefits like easier code refactoring, reusability, and integration with external tools for tasks such as costume generation or image loading.\n\nKey features of goboscript include: a powerful macro system (similar to Rust), support for local variables within custom blocks, and built-in optimizations alongside problem detection and unused code removal.\n\nThe project draws inspiration from similar initiatives like \"tosh\" and \"boiga,\" with goboscript initially developed as a Python re-implementation called \"gobomatic\" before being ported to Rust for improved performance and features.\n\nThe document outlines how to contribute to the project via pull requests, emphasizing the need for the Rust toolchain for development. It also details the development workflow, including compiling projects, validating them against Scratch schemas, extracting project.json for debugging, patching .sb3 files with modified JSON data, and validating existing .sb3 files.\n\nGoboscript was a first-place winner at FOSS HACK 25, receiving a 50,000 Rs. prize. The author acknowledges FOSS United Foundation for providing the platform.\n",
    "chinese_title": "Show HN: Goboscript，基于文本的编程语言，编译成 Scratch",
    "chinese_summary": "Goboscript 是一种基于文本的编程语言，可编译成 Scratch 项目（.sb3 文件），使用户能够使用任何文本编辑器以文本格式编写 Scratch 代码，并利用 Git 等版本控制系统。它提供了诸如更容易的代码重构、可重用性以及与外部工具集成的优点，可用于服装生成或图像加载等任务。\n\nGoboscript 的主要功能包括：强大的宏系统（类似于 Rust）、对自定义块内局部变量的支持，以及内置的优化功能，同时具备问题检测和未使用代码移除功能。\n\n该项目的设计灵感来源于类似项目，如“tosh”和“boiga”。Goboscript 最初是作为名为“gobomatic”的 Python 重新实现而开发的，之后被移植到 Rust 以提高性能和功能。\n\n本文档概述了如何通过 pull request 为项目做出贡献，并强调了开发需要 Rust 工具链。它还详细介绍了开发工作流程，包括编译项目、根据 Scratch 模式验证项目、提取 project.json 进行调试、使用修改后的 JSON 数据修补 .sb3 文件以及验证现有的 .sb3 文件。\n\nGoboscript 在 FOSS HACK 25 中获得了一等奖，并获得了 50,000 卢比的奖金。作者感谢 FOSS United Foundation 提供平台。"
  },
  {
    "id": "44025439",
    "title": "“There are people who can see and others who cannot even look”",
    "url": "https://worldhistory.substack.com/p/there-are-people-who-can-see-and",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "有的人能看见，有的人连看都看不见。",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "43999897",
    "title": "In Memoriam: John L. Young, Cryptome Co-Founder",
    "url": "https://www.eff.org/deeplinks/2025/05/memoriam-john-l-young-cryptome-co-founder",
    "summary": "John L. Young, co-founder of Cryptome, died on March 28th at the age of 89. With his wife Deborah Natsios, he founded Cryptome in 1996 as an online library dedicated to publishing data on freedom of expression, privacy, cryptography, national security, and government secrecy. Young believed in the internet's power to democratize information and saw official secrecy as a threat to democracy.\n\nCryptome became a crucial resource during the \"crypto wars\" of the 1990s, archiving documents related to the fight for encryption freedom. Young was also an early supporter of WikiLeaks, but later distanced himself due to disagreements over its monetization. Notably, Cryptome later published WikiLeaks' internal emails, reflecting Young's commitment to transparency.\n\nYoung's pursuit of public good predated Cryptome, as he sought access to documents about public development entities that disregarded public safety. His passion for exposing secrets led him to create Cryptome.\n\nDespite facing opposition from the FBI, Secret Service, and Big Tech companies, Young remained steadfast in his mission. He served in the United States Army Corps of Engineers and held degrees from Rice and Columbia Universities. He was also an activist who helped create Urban Deadline, a community service group. John L. Young is remembered as an under-recognized hero of the digital age for his unwavering commitment to the public's right to know.\n",
    "chinese_title": "纪念：Cryptome联合创始人约翰·L·扬",
    "chinese_summary": "密码网站Cryptome联合创始人约翰·L·杨于3月28日去世，享年89岁。他与妻子黛博拉·纳西奥斯于1996年共同创立了Cryptome，这是一个致力于发布有关言论自由、隐私、密码学、国家安全和政府保密数据的在线图书馆。杨坚信互联网具有信息民主化的力量，并将官方保密视为对民主的威胁。\n\nCryptome在20世纪90年代的“密码战争”期间成为一项关键资源，存档了与加密自由斗争相关的文件。杨也是维基解密的早期支持者，但后来因对其货币化的分歧而疏远。值得注意的是，Cryptome后来发布了维基解密的内部电子邮件，反映了杨对透明度的承诺。\n\n早在Cryptome之前，杨就致力于公共利益，他曾寻求获取关于无视公共安全的公共开发实体的文件。他对揭露秘密的热情促使他创建了Cryptome。\n\n尽管面临来自联邦调查局、特勤局和大型科技公司的反对，杨仍然坚定不移地执行其使命。他曾在美国陆军工程兵团服役，并拥有莱斯大学和哥伦比亚大学的学位。他也是一位积极分子，帮助创建了社区服务团体Urban Deadline。约翰·L·杨被人们铭记为数字时代一位未被充分认可的英雄，因为他坚定不移地致力于公众的知情权。"
  },
  {
    "id": "44031742",
    "title": "Why are (male) surgeons still addressed as Mr? (2000)",
    "url": "https://pmc.ncbi.nlm.nih.gov/articles/PMC1119265/",
    "summary": "Irvine Loudon's BMJ article explores the historical reasons behind the British tradition of addressing surgeons as \"Mr\" (or Miss/Mrs/Ms), a practice uncommon in other countries. Before 1800, physicians held university MD degrees, granting them the title \"Dr,\" while surgeons lacked formal qualifications and were addressed as \"Mr.\"\n\nThe growth of voluntary hospitals elevated the status of surgeons, and the establishment of the Royal College of Surgeons of London in 1800 provided a formal qualification (MRCS). Surgeons became proud to be distinguished from physicians, viewing the title \"Mr\" as a badge of honor signifying surgical skill and hospital appointments.\n\nHowever, the rise of the general practitioner (GP) with both MRCS and LSA qualifications complicated the matter. Elite hospital surgeons sought to differentiate themselves from GPs by creating a category of \"pure surgeons,\" marked by superior skill, hospital appointments, and an avoidance of dispensing drugs or practicing midwifery. The FRCS (Fellow of the Royal College of Surgeons) became the hallmark of the pure surgeon, further solidifying the \"Mr\" convention.\n\nThe author argues that the original reasons for the \"Mr\" tradition are no longer relevant in modern medicine. He suggests that the increasing teamwork and blurring of lines between medical specialties make the distinction between \"Dr\" and \"Mr\" seem anachronistic and potentially confusing for patients. Loudon proposes that all GMC-registered doctors, regardless of specialty, should be addressed as \"Dr,\" questioning whether surgeons are willing to relinquish this \"pretentious anachronism.\"\n",
    "chinese_title": "为何（男性）外科医生仍被称为“Mr.”？(2000)",
    "chinese_summary": "艾尔文·劳登的BMJ文章探讨了英国称呼外科医生为“Mr”（或Miss/Mrs/Ms）这一传统的历史原因，这种做法在其他国家并不常见。1800年之前，内科医生拥有大学医学博士学位，因而被授予“Dr”头衔，而外科医生缺乏正式资格，被称为“Mr”。\n\n志愿医院的发展提升了外科医生的地位，1800年伦敦皇家外科医学院的成立提供了正式的资格认证（MRCS）。外科医生开始以区别于内科医生为荣，将“Mr”头衔视为外科技术和医院任命的荣誉象征。\n\n然而，同时拥有MRCS和LSA资格的全科医生（GP）的兴起使问题变得复杂。精英医院的外科医生试图通过创建一个“纯外科医生”类别来将自己与全科医生区分开来，这些“纯外科医生”拥有卓越的技能、医院任命，并且避免配药或从事助产工作。英国皇家外科医学院院士（FRCS）成为了纯外科医生的标志，进一步巩固了“Mr”的惯例。\n\n作者认为，现代医学中“Mr”传统的最初原因已经不再具有现实意义。他认为，医疗专业之间日益增长的团队合作和界限模糊使得“Dr”和“Mr”之间的区别显得不合时宜，并且可能让患者感到困惑。劳登建议，所有在GMC注册的医生，无论其专业如何，都应被称为“Dr”，并质疑外科医生是否愿意放弃这种“自命不凡的过时事物”。"
  },
  {
    "id": "44027768",
    "title": "Emulator Debugging: Area 5150's Lake Effect",
    "url": "https://martypc.blogspot.com/2025/05/emulator-debugging-area-5150s-lake.html",
    "summary": "This article details the debugging process of the \"Lake\" effect in the Area 5150 demo, running on the MartyPC IBM 5150 emulator. The author confesses to using a title-specific hack to get the \"Lake\" and \"Wibble\" effects running due to emulation inaccuracies. The core issue stems from the IBM CGA's lack of a vsync interrupt, which the demo overcomes through cycle-counting and clever manipulation of the CGA's status register via polling.\n\nThe article explains how Area 5150 utilizes the CGA's status register to avoid \"snow\" (visual artifacts) and how the \"Lake\" effect pushes the limits by reprogramming the CRTC mid-scanline to achieve a unique start address for almost every scanline. Due to the need for audio processing, which is not cycle-counted, the demo implements a custom VSYNC interrupt using the Intel 8253 Programmable Interval Timer.\n\nThe author describes the intricate setup of multiple chained interrupt service routines (ISRs) to precisely trigger the main effect ISR at a specific pixel location, compensating for delays inherent in interrupt handling. To analyze the timing, the author develops a visualization tool that renders sniffer traces as points on a virtual screen, correlating events with CPU cycles and screen position. Finally, the author discusses plans to enhance the emulator's cycle logging to directly output signals usable by a logic analyzer, bridging the gap between emulator behavior and real hardware analysis.\n",
    "chinese_title": "模拟器调试：5150区湖区效应",
    "chinese_summary": "本文详细介绍了在MartyPC IBM 5150模拟器上运行的Area 5150演示程序中“湖面”特效的调试过程。作者承认由于模拟不精确，使用了针对标题的特殊技巧来使“湖面”和“颤动”效果运行起来。核心问题源于IBM CGA缺少垂直同步中断，演示程序通过周期计数和巧妙地轮询CGA的状态寄存器来克服这个问题。\n\n文章解释了Area 5150如何利用CGA的状态寄存器来避免“雪花”（视觉伪影），以及“湖面”特效如何通过在扫描线中间重新编程CRTC来实现几乎每条扫描线都具有唯一的起始地址，从而突破了极限。由于需要音频处理，而音频处理不进行周期计数，因此演示程序使用Intel 8253可编程间隔定时器来实现自定义的垂直同步中断。\n\n作者描述了多个链接的中断服务例程（ISR）的复杂设置，以便在特定的像素位置精确触发主特效ISR，从而补偿中断处理中固有的延迟。为了分析时序，作者开发了一种可视化工具，该工具将嗅探器跟踪呈现为虚拟屏幕上的点，将事件与CPU周期和屏幕位置相关联。最后，作者讨论了增强模拟器的周期日志记录的计划，以便直接输出可供逻辑分析仪使用的信号，从而弥合模拟器行为和真实硬件分析之间的差距。"
  },
  {
    "id": "44028153",
    "title": "Don't guess my language",
    "url": "https://vitonsky.net/blog/2025/05/17/language-detection/",
    "summary": "This article argues against using IP geolocation to determine the language displayed to users on websites. The author contends that IP addresses are unreliable indicators of a user's preferred language, citing examples like VPNs, travel, and multilingual countries. Relying on IP-based language selection leads to frustration when users are presented with content they can't understand.\n\nThe article advocates for using the \"Accept-Language\" HTTP header, which browsers automatically send and reflects the user's preferred language settings from their operating system or browser configuration. This method is presented as accurate, free, readily available, and requiring no maintenance.\n\nThe author urges developers to prioritize the Accept-Language header and provide users with the option to manually change their language preference and save that selection for future visits. While GeoIP can be useful for things like currency or shipping information, it should never be used to determine the user's language. Ultimately, the article emphasizes respecting user preferences and avoiding assumptions based on inaccurate data.\n",
    "chinese_title": "不要猜我的语言",
    "chinese_summary": "本文反对使用IP地理定位来决定网站上向用户显示的语言。作者认为IP地址是用户首选语言的不可靠指标，并列举了 VPN、旅行和多语种国家等例子。依赖于基于IP的语言选择会导致用户看到他们无法理解的内容而感到沮丧。\n\n本文提倡使用“Accept-Language”HTTP标头，浏览器会自动发送该标头，并反映用户操作系统或浏览器配置中的首选语言设置。这种方法被认为准确、免费、易于获取且无需维护。\n\n作者敦促开发者优先考虑 Accept-Language 标头，并为用户提供手动更改语言偏好并保存该选择以供将来访问的选项。虽然 GeoIP 对于货币或运输信息等事物可能有用，但不应将其用于确定用户的语言。最终，本文强调尊重用户偏好并避免基于不准确数据的假设。"
  },
  {
    "id": "43993311",
    "title": "Llama from scratch (2023)",
    "url": "https://blog.briankitano.com/llama-from-scratch/",
    "summary": "This article documents a developer's journey implementing a dramatically scaled-down version of Meta AI's Llama language model for training on the TinyShakespeare dataset. The author emphasizes an iterative approach, starting with a simple, familiar model and gradually incorporating Llama's specific architectural modifications.\n\nKey takeaways include: working iteratively, creating helper functions for quantitative and qualitative evaluation, implementing paper components one-by-one with constant testing, verifying layer functionality using shapes, assertions, and visualizations, and deriving solutions mathematically before optimizing with Torch functions.\n\nThe article details the process of setting up the dataset using a character-level tokenizer, creating data batches, and establishing an evaluation method before model definition. The author begins with a \"SimpleBrokenModel,\" a basic feed-forward neural network, and addresses the importance of matching tensor shapes and indices for successful compilation and training.\n\nThe article then identifies and addresses an error in the initial model related to softmax application, leading to a significant improvement in loss. The author subsequently introduces Llama-specific components like RMSNorm, Rotary Embeddings, and SwiGLU activation one at a time, beginning with RMSNorm. The article details testing the RMSNorm implementation to ensure correctness before integration. The importance of validating each component independently to ensure proper functionality is stressed throughout.\n",
    "chinese_title": "从零开始的Llama (2023)",
    "chinese_summary": "本文记录了一位开发者在TinyShakespeare数据集上训练Meta AI Llama语言模型大幅缩减版本的旅程。作者强调迭代式方法，从一个简单、熟悉的模型开始，逐步整合Llama的特定架构修改。\n\n主要收获包括：迭代工作，创建辅助函数进行定量和定性评估，逐一实现论文组件并持续测试，使用形状、断言和可视化验证层功能，以及在用Torch函数优化之前从数学上推导解决方案。\n\n本文详细介绍了使用字符级分词器设置数据集、创建数据批次以及在模型定义之前建立评估方法的过程。作者从一个“SimpleBrokenModel”，即一个基本的feed-forward神经网络开始，并强调了匹配张量形状和索引对于成功编译和训练的重要性。\n\n本文随后识别并解决了初始模型中与softmax应用相关的错误，从而导致损失的显着改善。作者随后逐一引入Llama特有的组件，如RMSNorm、旋转嵌入和SwiGLU激活，首先从RMSNorm开始。本文详细介绍了RMSNorm实现的测试，以确保在集成之前其正确性。文章通篇强调了独立验证每个组件以确保其正常运行的重要性。"
  },
  {
    "id": "43995067",
    "title": "New research reveals the strongest solar event ever detected, in 12350 BC",
    "url": "https://phys.org/news/2025-05-reveals-strongest-solar-event-bc.html",
    "summary": "A new study reveals the strongest solar particle storm ever detected, occurring in 12350 BC, significantly exceeding the intensity of previously known events. Researchers at the University of Oulu, Finland, developed a novel chemistry-climate model, SOCOL:14C-Ex, to analyze radiocarbon data from the last Ice Age and determine the event's strength.\n\nThe model showed that the 12350 BC storm was approximately 18% stronger than the AD 775 event, the previous record holder, and over 500 times more intense than the largest modern-era particle storm in 2005. This discovery expands the timeline of known solar activity beyond the Holocene epoch (the past 12,000 years) and establishes a new upper boundary for solar phenomena.\n\nThe study, published in Earth and Planetary Science Letters, involved an international team that validated the SOCOL:14C-Ex model using wood samples from the French Alps. The model's ability to analyze radiocarbon variations in different climates represents a major advancement.\n\nThese extreme solar events, or Miyake events, are marked by dramatic spikes in radiocarbon production in the atmosphere. They serve as cosmic timestamps, enabling precise dating of archaeological finds and providing insights into past solar activity and space climate. This discovery establishes a new worst-case scenario for solar storm intensity, crucial for assessing the risks posed by future solar events to modern infrastructure.\n",
    "chinese_title": "最新研究揭示公元前12350年探测到的最强太阳事件",
    "chinese_summary": "一项新研究揭示了有史以来探测到的最强太阳粒子风暴，发生在公元前12350年，显著超过了先前已知事件的强度。芬兰奥卢大学的研究人员开发了一种新型化学-气候模型SOCOL:14C-Ex，分析了末次冰期的放射性碳数据，并确定了该事件的强度。\n\n该模型显示，公元前12350年的风暴比之前的记录保持者公元775年事件强约18%，比2005年现代最大规模的粒子风暴强500多倍。这一发现将已知太阳活动的时间线扩展到全新世（过去12000年）之外，并为太阳现象建立了新的上限。\n\n这项发表在《地球与行星科学快报》上的研究涉及一个国际团队，他们使用来自法国阿尔卑斯山的木材样本验证了SOCOL:14C-Ex模型。该模型分析不同气候下放射性碳变化的能力代表着一项重大进展。\n\n这些极端太阳事件，或称宫宅事件，以大气中放射性碳产量急剧增加为标志。它们充当宇宙时间戳，能够精确地确定考古发现的年代，并提供对过去太阳活动和空间气候的洞察。这项发现为太阳风暴强度建立了新的最坏情况，对于评估未来太阳事件对现代基础设施构成的风险至关重要。"
  },
  {
    "id": "44029566",
    "title": "Fabric Is Just Plain Unreliable, and Microsoft's Hiding It",
    "url": "https://www.brentozar.com/archive/2025/05/fabric-is-just-plain-unreliable-and-microsofts-hiding-it/",
    "summary": "Brent Ozar's blog post criticizes Microsoft Fabric's reliability and transparency, alleging that Microsoft is hiding outages and misleading users. He claims Fabric's status page is inaccurate, showing green checkmarks even during major outages, and points to Redditors relying on Statusgator to track discrepancies between user reports and official updates. Ozar also criticizes the Fabric team's post-mortem reports, accusing them of downplaying the impact and duration of outages by using misleading statistics. He finds fault with the lack of a publicly available outage history for Fabric, contrasting it with Azure's more transparent status reporting. The author believes the lack of transparency leaves Fabric administrators unaware of overnight outages, leading them to wrongly troubleshoot internal issues. Finally, Ozar suggests that the lack of a service level agreement (SLA) and refunds for data loss makes Fabric unsuitable for critical infrastructure, concluding that recommending it is a sign of ignorance. He argues that users should be aware of these issues before relying on the service.\n",
    "chinese_title": "Fabric 就是不可靠，微软还在隐瞒",
    "chinese_summary": "Brent Ozar的博文批评了Microsoft Fabric的可靠性和透明度，声称微软隐瞒宕机事件并误导用户。他指出Fabric的状态页面不准确，即使在重大宕机期间也显示绿色勾号，并提到Reddit用户依赖Statusgator来追踪用户报告和官方更新之间的差异。Ozar还批评了Fabric团队的事件回顾报告，指责他们使用误导性统计数据淡化宕机的影响和持续时间。他对Fabric缺乏公开的宕机历史记录提出质疑，并将其与Azure更透明的状态报告形成对比。作者认为，缺乏透明度导致Fabric管理员无法了解夜间发生的宕机事件，从而错误地对内部问题进行故障排除。最后，Ozar认为，缺乏服务级别协议(SLA)和数据丢失赔偿使得Fabric不适合关键基础设施，并得出结论，推荐它是一种无知的表现。他认为用户应该在依赖该服务之前了解这些问题。"
  },
  {
    "id": "44031917",
    "title": "Dilbert Creator Scott Adams Says He Will Die Soon from Same Cancer as Joe Biden",
    "url": "https://www.thewrap.com/dilbert-scott-adams-prostate-cancer-biden/",
    "summary": "This article reports that Scott Adams, the creator of the \"Dilbert\" comic strip, announced on his Rumble show, \"Coffee With Scott Adams,\" that he is battling prostate cancer that has spread to his bones and expects to die this summer. He revealed this information the same morning it was announced that former President Joe Biden is also battling prostate cancer. Adams noted that he has had the disease longer than Biden has publicly admitted to having it. He explained that while prostate cancer is curable if localized, it is not curable once it spreads to other parts of the body, as is the case with both himself and Biden. Adams expressed sympathy for Biden and his family, acknowledging the difficult time they will face. The article mentions Adams's success with \"Dilbert,\" his authorship of numerous books, and his more recent outspoken political views, particularly his support for Donald Trump and criticism of Democrats, shared on social media and his Rumble show.\n",
    "chinese_title": "呆伯特作者斯科特·亚当斯称他将死于与乔·拜登相同的癌症",
    "chinese_summary": "本文报道了“呆伯特”漫画的作者斯科特·亚当斯在他的Rumble节目“与斯科特·亚当斯喝咖啡”中宣布，他正在与扩散到骨骼的前列腺癌作斗争，预计今年夏天去世。他在宣布前总统乔·拜登也在与前列腺癌作斗争的同一天上午透露了这一信息。亚当斯指出，他患这种疾病的时间比拜登公开承认的时间更长。他解释说，虽然前列腺癌如果局限在局部是可以治愈的，但一旦扩散到身体的其他部位就无法治愈，他和拜登的情况都是如此。亚当斯对拜登和他的家人表示同情，承认他们将面临困难时期。文章提到亚当斯凭借“呆伯特”获得的成功，他撰写的众多书籍，以及他最近更加直言不讳的政治观点，特别是他在社交媒体和Rumble节目上分享的对唐纳德·特朗普的支持和对民主党的批评。"
  },
  {
    "id": "44026201",
    "title": "The principles of database design, or, the Truth is out there",
    "url": "https://ebellani.github.io/blog/2025/the-principles-of-database-design-or-the-truth-is-out-there/",
    "summary": "Eduardo Bellani's article, \"The principles of database design, or, the Truth is out there,\" argues that proper database design is crucial for accurately representing real-world business scenarios within software projects. The author criticizes the tendency of software developers to rely on ad-hoc methods due to a lack of formal database design training, leading to data inconsistencies and update anomalies.\n\nBellani emphasizes that database design is not automatable and requires encoding semantics to be processed by a DBMS. He advocates for adherence to several design principles, including the Principle of Orthogonal Design, Representational Parsimony, Expressive Completeness, Full Normalization, The Information Principle, and Logical Independence.\n\nThe author introduces a new principle, the Principle of Essential Denotation (PED), which suggests identifying relations using natural keys that reflect the entity's inherent, domain-defined identity instead of arbitrary surrogate keys. The article provides SQL code snippets illustrating the contrast between using surrogate keys and adhering to the PED by using a `national_id` domain as a primary key for the `citizen` table.\n\nIn conclusion, the article stresses that databases are fundamental representations of reality and that poor design can lead to semantic confusion and technical instability. Good design, on the other hand, demands rigor and a strong understanding of foundational principles, enabling the construction of systems that accurately reflect the truth.\n",
    "chinese_title": "数据库设计原则，真相就在那里",
    "chinese_summary": "Eduardo Bellani 的文章《数据库设计原则，或真相就在那里》指出，正确的数据库设计对于在软件项目中准确地表示现实世界的业务场景至关重要。作者批评了软件开发人员由于缺乏正规的数据库设计培训，而依赖于临时方法的趋势，这导致了数据不一致和更新异常。\n\nBellani 强调，数据库设计是无法自动化的，需要编码语义以供 DBMS 处理。他提倡遵守多项设计原则，包括正交设计原则、表示简约原则、表达完整性原则、完全规范化、信息原则和逻辑独立性。\n\n作者介绍了一项新的原则，即基本指称原则 (PED)，该原则建议使用反映实体固有的、领域定义的身份的自然键来识别关系，而不是使用任意代理键。文章提供了 SQL 代码片段，说明了使用代理键与遵守 PED 的对比，例如使用 `national_id` 域作为 `citizen` 表的主键。\n\n总而言之，文章强调数据库是对现实的基本表示，糟糕的设计会导致语义混乱和技术不稳定。另一方面，好的设计需要严谨和对基本原则的深刻理解，从而能够构建准确反映真相的系统。"
  },
  {
    "id": "44031232",
    "title": "Berlin, Paris overcome rift over nuclear energy, French official says",
    "url": "https://www.reuters.com/business/energy/berlin-paris-overcome-rift-over-nuclear-energy-french-official-says-2025-05-19/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "柏林和巴黎克服了在核能问题上的分歧，法方官员表示",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44030443",
    "title": "Show HN: Mirror World, create an AI clone of anyone",
    "url": "https://mirr.world/",
    "summary": "The \"Show HN: Mirror World, create an AI clone of anyone\" post introduces Mirror World, a product that allows users to create AI clones of individuals. The core concept revolves around leveraging AI to simulate a person's personality, communication style, and knowledge, presumably by training the AI on publicly available or user-provided data (though the specifics are not detailed in the title and limited content provided). The \"anyone\" claim is a bold statement implying broad applicability, although ethical and legal considerations around consent and data privacy are not explicitly addressed. In essence, the offering seems to be a digital simulacrum powered by AI, potentially usable for entertainment, communication, or knowledge preservation, aiming to create a realistic AI representation of a specific person.\n",
    "chinese_title": "Show HN: 镜像世界，创建任何人的 AI 克隆体",
    "chinese_summary": "展示HN：镜像世界，创建任何人的AI克隆"
  },
  {
    "id": "44009125",
    "title": "Spider Eye Development Editing and Silk Fiber Engineering Using CRISPR-Cas",
    "url": "https://onlinelibrary.wiley.com/doi/10.1002/anie.202502068",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "CRISPR-Cas介导的蜘蛛眼发育编辑和丝纤维工程",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44024784",
    "title": "KDE is finally getting a native virtual machine manager called “Karton”",
    "url": "https://www.neowin.net/news/kde-is-finally-getting-a-native-virtual-machine-manager-called-karton/",
    "summary": "KDE Plasma is getting a native virtual machine manager called Karton, aiming to provide a seamless experience for KDE users who previously relied on tools like virt-manager or GNOME Boxes. The project, rooted in earlier QEMU frontend development, is now being actively developed by Derek Lin as part of Google Summer of Code 2025.\n\nKarton is built with Qt Quick and Kirigami, leveraging the libvirt API for virtual machine management. Development focuses on core functionality, including a new domain installer using libosinfo to improve OS image detection and libvirt XML generation. A custom SPICE viewer is being built from scratch using Qt Quick.\n\nLin's GSoC goals include implementing virtual machine configuration via libvirt's XML format, offering fine-tuned UI controls, creating virtual machine snapshots, designing an intuitive and convergent UI, improving virtual machine status updates, adding a browse tool for common operating systems, and implementing GPU/memory usage graphs. He also plans to support switching between QEMU hypervisor connections (session/system), potentially enabling support for non-KVM backends like bhyve or Hyper-V. The project aims to have a working app by the midterm evaluation around July 14, 2025, and final submission by September 1, 2025.\n",
    "chinese_title": "KDE 终于有了一个名为“Karton”的原生虚拟机管理器",
    "chinese_summary": "KDE Plasma将推出名为Karton的原生虚拟机管理器，旨在为之前依赖virt-manager或GNOME Boxes等工具的KDE用户提供无缝体验。该项目源于早期的QEMU前端开发，目前正由Derek Lin作为Google Summer of Code 2025的一部分积极开发。\n\nKarton使用Qt Quick和Kirigami构建，利用libvirt API进行虚拟机管理。开发重点是核心功能，包括使用libosinfo的新域安装程序，以改进操作系统镜像检测和libvirt XML生成。一个定制的SPICE查看器正在使用Qt Quick从头开始构建。\n\nLin的GSoC目标包括通过libvirt的XML格式实现虚拟机配置，提供精细的UI控件，创建虚拟机快照，设计直观且融合的UI，改进虚拟机状态更新，添加常用操作系统的浏览工具，以及实现GPU/内存使用情况图表。他还计划支持在QEMU虚拟机监控程序连接（会话/系统）之间切换，从而可能支持非KVM后端，如bhyve或Hyper-V。该项目目标是在2025年7月14日左右的中期评估之前拥有一个可用的应用程序，并在2025年9月1日之前提交最终版本。"
  },
  {
    "id": "44012418",
    "title": "Programming in Martin-Lof's Type Theory: An Introduction (1990)",
    "url": "https://www.cse.chalmers.se/research/group/logic/book/",
    "summary": "\"Programming in Martin-Lof's Type Theory: An Introduction\" by Bengt Nordström, Kent Petersson, and Jan M. Smith, published by Oxford University Press in 1990, is a textbook introducing the principles of programming using Martin-Löf's Type Theory. The book, originally published in print but now out of print, is available in digital formats (Postscript and PDF) from the Department of Computing Sciences at the University of Göteborg / Chalmers.\n\nThe text serves as an introduction to the subject, likely covering the fundamental concepts of Martin-Löf's Type Theory and its application to programming. Given it's a textbook, it probably includes explanations, examples, and possibly exercises to help readers grasp the theoretical and practical aspects of programming within this specific type-theoretic framework. Its availability as a downloadable resource suggests it continues to be relevant for those studying or researching type theory and functional programming paradigms.\n",
    "chinese_title": "Martin-Löf类型论编程：入门 (1990)",
    "chinese_summary": "由Bengt Nordström、Kent Petersson和Jan M. Smith合著，牛津大学出版社于1990年出版的《Martin-Löf类型理论编程入门》是一本介绍使用Martin-Löf类型理论进行编程原则的教科书。该书最初以印刷版出版，现已绝版，但可从哥德堡大学/查尔姆斯理工大学计算科学系下载数字格式（Postscript和PDF）版本。\n\n该文本是对该主题的介绍，可能涵盖了Martin-Löf类型理论的基本概念及其在编程中的应用。鉴于它是一本教科书，它可能包含解释、示例，甚至可能包含练习，以帮助读者掌握在这种特定类型理论框架内进行编程的理论和实践方面。其作为可下载资源的可用性表明，它对于那些学习或研究类型理论和函数式编程范式的人来说仍然具有相关性。"
  },
  {
    "id": "44030469",
    "title": "Ukraine can move beyond its Soviet architectural legacy",
    "url": "https://www.counteroffensive.news/p/how-ukraine-can-move-beyond-its-soviet",
    "summary": "This article discusses how Ukraine can leverage post-war reconstruction to move beyond its Soviet architectural legacy and create safer, more livable cities. Focusing on the experiences of Yurii Semenenko, whose apartment in Kharkiv was repeatedly destroyed by Russian attacks, the article highlights the inadequacies of Soviet-era panel buildings, which are cheap, low-durability, and unsafe in wartime.\n\nThe article explains the history of these buildings, emphasizing their construction during a period of rapid urbanization in the Soviet Union and their prioritization of cost over comfort. While affordable, they lack proper insulation, soundproofing, and shelters, making them vulnerable to modern warfare.\n\nPost-war reconstruction offers a chance to break free from this legacy and adopt new standards. The article suggests focusing on low-rise housing, cohesive neighborhoods, alternative energy sources, and readily deployable modular and 3D-printed homes. It also emphasizes the importance of accessible shelters in every building and the need for inclusive infrastructure, including rehabilitation centers. The article highlights the importance of community involvement in urban planning decisions, empowering residents to shape their cities. It concludes by noting the tragic loss of a mine awareness trainer who worked with The Counteroffensive, underscoring the ongoing dangers and the need for continued support.\n",
    "chinese_title": "乌克兰可以摆脱其苏联时期的建筑遗产。",
    "chinese_summary": "本文探讨了乌克兰如何利用战后重建摆脱苏联建筑遗产，创建更安全、更宜居的城市。文章以尤里·谢梅年科的经历为例，他在哈尔科夫的公寓多次被俄军袭击摧毁，强调了苏联时期板楼的不足之处，这些建筑成本低廉、耐久性差，战时安全性低。\n\n文章解释了这些建筑的历史，强调它们是在苏联快速城市化时期建造的，并优先考虑成本而非舒适度。虽然价格实惠，但它们缺乏适当的隔热、隔音和避难所，使其容易受到现代战争的破坏。\n\n战后重建提供了一个摆脱这一遗产并采用新标准的机会。文章建议关注低层住宅、凝聚力强的社区、替代能源以及易于部署的模块化和 3D 打印房屋。它还强调了每个建筑物中无障碍避难所的重要性，以及对包括康复中心在内的包容性基础设施的需求。文章强调了社区参与城市规划决策的重要性，使居民能够塑造他们的城市。文章最后指出，一位曾与“反攻”组织合作的地雷意识培训员不幸丧生，突显了持续存在的危险以及持续支持的必要性。"
  },
  {
    "id": "44030105",
    "title": "Show HN: A highly extensible framework for building OCR systems",
    "url": "https://github.com/robbyzhaox/myocr",
    "summary": "MyOCR is presented as a highly extensible Python framework designed to simplify the creation of custom OCR systems. It allows developers to build and integrate deep learning models into pipelines for detection, recognition, and custom OCR tasks. Key features include modularity, allowing easy swapping of components, developer-friendly Python APIs, and production-ready performance with ONNX runtime support and various deployment options.\n\nThe framework supports end-to-end OCR development, offering prebuilt pipelines and processors alongside customization options. It provides both basic OCR recognition and structured OCR output capabilities, exemplified by invoice information extraction using a chatbot integration (supporting Ollama and OpenAI APIs).\n\nInstallation requires Python 3.11+, recommended CUDA 12.6+ for GPU acceleration, and is compatible with Linux, macOS, and Windows. Installation instructions are provided, including cloning from GitHub, installing dependencies using pip, and downloading pre-trained model weights.\n\nDeployment options include local inference (CPU/GPU) and Docker deployment. Instructions are provided for running the Docker container with environment variables for the chatbot configuration. The framework also provides a Flask API service accessible via HTTP, with endpoints for basic OCR, structured OCR, and a ping endpoint. A UI component (doc-insight-ui) is also mentioned.\n\nThe project encourages contributions and is licensed under Apache 2.0.\n",
    "chinese_title": "Show HN: 用于构建OCR系统的高度可扩展框架",
    "chinese_summary": "MyOCR 是一个高度可扩展的 Python 框架，旨在简化自定义 OCR 系统的创建。它允许开发者构建深度学习模型并将其集成到检测、识别和自定义 OCR 任务的流水线中。其主要特点包括模块化（易于更换组件）、开发者友好的 Python API 以及具有 ONNX 运行时支持和各种部署选项的生产级性能。\n\n该框架支持端到端的 OCR 开发，提供预构建的流水线和处理器以及自定义选项。它提供基本的 OCR 识别和结构化 OCR 输出能力，例如使用聊天机器人集成（支持 Ollama 和 OpenAI API）的发票信息提取。\n\n安装需要 Python 3.11+，推荐 CUDA 12.6+ 用于 GPU 加速，并且兼容 Linux、macOS 和 Windows。 提供了安装说明，包括从 GitHub 克隆、使用 pip 安装依赖项以及下载预训练的模型权重。\n\n部署选项包括本地推理（CPU/GPU）和 Docker 部署。 提供了运行 Docker 容器的说明，其中包含用于聊天机器人配置的环境变量。 该框架还提供可通过 HTTP 访问的 Flask API 服务，其中包含基本 OCR、结构化 OCR 和 ping 端点的接口。 还提到了一个 UI 组件 (doc-insight-ui)。\n\n该项目鼓励贡献，并采用 Apache 2.0 许可。"
  },
  {
    "id": "44031529",
    "title": "Edit is now open source",
    "url": "https://devblogs.microsoft.com/commandline/edit-is-now-open-source/",
    "summary": "Microsoft has released \"Edit,\" a new open-source, command-line text editor for Windows. Designed to be lightweight (less than 250kB) and easy to use, Edit will be included in Windows 11 and previewed in the Windows Insider Program soon.\n\nEdit aims to provide a default CLI editor for 64-bit Windows, which previously lacked one. The team chose a modeless editor to avoid the learning curve associated with modal editors like Vim.\n\nKey features include:\n\n*   **Lightweight:** Small footprint for inclusion in Windows.\n*   **Mouse Mode Support:** TUI with keybindings for all menu options.\n*   **Multiple File Editing:** Open and switch between files with Ctrl+P.\n*   **Find & Replace:** Includes Match Case and Regular Expression support (Ctrl+R).\n*   **Word Wrap:** Toggle with Alt+Z or via the TUI menu.\n\nThe editor is available on GitHub, allowing users to build the code or install the latest version. Microsoft encourages feedback and questions via the official Edit repository.\n",
    "chinese_title": "编辑现已开源",
    "chinese_summary": "微软发布了新的Windows开源命令行文本编辑器“Edit”。Edit设计轻量易用（小于250kB），将包含在Windows 11中，并很快在Windows Insider Program中预览。\n\nEdit旨在为64位Windows提供一个默认的CLI编辑器，此前该系统缺少此类编辑器。团队选择了一种非模式编辑器，以避免像Vim这样的模式编辑器带来的学习曲线。\n\n主要功能包括：\n\n*   **轻量级：** 体积小巧，便于包含在Windows中。\n*   **鼠标模式支持：** 具有所有菜单选项的键位绑定的TUI。\n*   **多文件编辑：** 使用Ctrl+P打开和切换文件。\n*   **查找和替换：** 包括区分大小写和正则表达式支持 (Ctrl+R)。\n*   **自动换行：** 使用Alt+Z或通过TUI菜单切换。\n\n该编辑器已在GitHub上提供，用户可以构建代码或安装最新版本。微软鼓励通过官方Edit存储库提供反馈和问题。"
  },
  {
    "id": "44024759",
    "title": "France Endorses UN Open Source Principles",
    "url": "https://social.numerique.gouv.fr/@codegouvfr/114529954373492878",
    "summary": "This short excerpt indicates that France has become the first government to endorse the UN Open Source Principles. The source of this information is code.gouv.fr, as reported by social.numerique.gouv.fr, likely a French government platform. The Mastodon call to action suggests that the full announcement or discussion might be available on that platform, but requires JavaScript to be enabled. Alternatively, native Mastodon applications are suggested. Essentially, the excerpt announces a significant step towards open source adoption at the governmental level, highlighting France's pioneering role in endorsing UN guidelines related to open source software.\n",
    "chinese_title": "法国认可联合国开源原则",
    "chinese_summary": "此简短节选表明，法国已成为首个认可联合国开源原则的政府。该信息来源于code.gouv.fr，由social.numerique.gouv.fr报告，后者可能是一个法国政府平台。Mastodon的行动号召表明，完整的公告或讨论可能在该平台上提供，但需要启用JavaScript。或者，建议使用原生Mastodon应用程序。本质上，该节选宣布了在政府层面采用开源的重要一步，突显了法国在认可联合国关于开源软件的指导方针方面的先锋作用。"
  },
  {
    "id": "44025484",
    "title": "Show HN: Job board aggregator for best paying remote SWE jobs in the U.S.",
    "url": "https://www.remoteswe.fyi",
    "summary": "This is a \"Show HN\" post presenting a job board aggregator for remote Software Engineering (SWE) jobs in the U.S. focused on highlighting the highest paying positions. The aggregator aims to save users time by compiling daily job updates in one place. As of May 18, 2025, it listed 409 jobs with filters for years of experience and companies.\n\nKey companies featured with the most job postings include Coinbase, Airbnb, Microsoft, and Reddit. The job listings detail the company, position, years of experience required (or inferred), total compensation, base salary, and posting date. The list features a variety of roles from entry-level to principal and staff engineer levels, with compensation ranging from $163,000 to $887,000.\n\nThe range of companies and compensation indicate a focus on established tech companies offering competitive salaries for remote SWE roles. The aggregator provides a valuable service for SWEs seeking high-paying remote opportunities in the U.S. by curating and presenting jobs in a consolidated and easily searchable format.\n",
    "chinese_title": "展示HN：美国高薪远程软件工程师职位聚合器",
    "chinese_summary": "这是一个“Show HN”帖子，介绍一个美国远程软件工程（SWE）职位聚合器，专注于突出最高薪职位。该聚合器旨在通过在一个地方汇编每日职位更新来节省用户的时间。截至2025年5月18日，它列出了409个职位，并提供经验年限和公司筛选。\n\n主要公司中，职位发布最多的包括Coinbase、Airbnb、Microsoft和Reddit。职位列表详细说明了公司、职位、要求的（或推断的）经验年限、总薪酬、基本工资和发布日期。该列表包含从入门级到首席和资深工程师级别的各种职位，薪酬范围从16.3万美元到88.7万美元不等。\n\n公司和薪酬范围表明该聚合器专注于成熟的科技公司，这些公司为远程SWE职位提供具有竞争力的薪酬。该聚合器通过以整合且易于搜索的格式整理和展示职位，为在美国寻求高薪远程机会的SWE提供了一项有价值的服务。"
  },
  {
    "id": "44030412",
    "title": "Taiwan to ramp up gas imports after shuttering last nuclear plant",
    "url": "https://e360.yale.edu/digest/taiwan-nuclear-power-gas-imports",
    "summary": "Taiwan has shut down its last nuclear power plant, the Maanshan plant, adhering to the Democratic Progressive Party's \"nuclear-free\" policy. This move is projected to significantly increase Taiwan's reliance on imported natural gas to meet its energy needs, especially for its booming semiconductor industry.\n\nTo compensate for the lost nuclear power, Taiwan plans to add 5 gigawatts of gas power this year, equivalent to five nuclear reactors. This is driving liquefied natural gas imports to record highs, with the state-owned energy firm CPC actively seeking additional deliveries. Experts estimate that Taiwan may need to spend an extra $2 billion annually on gas imports by the end of the decade.\n\nConcerns are rising that this shift will negatively impact Taiwan's climate goals and increase its vulnerability to potential blockades by China, given its limited gas storage capacity (only 11 days' worth). China has already simulated attacks on Taiwanese gas import terminals during military exercises. Critics say Taiwan's shift away from nuclear and toward natural gas will not only undermine Taiwan’s climate goals but also leave the island more vulnerable to a blockade by China.\n",
    "chinese_title": "台湾关闭最后一座核电厂后将增加天然气进口",
    "chinese_summary": "台灣已關閉其最後一座核電廠——馬鞍山核電廠，堅持民進黨的“非核家園”政策。預計此舉將大幅增加台灣對進口天然氣的依賴，以滿足其能源需求，尤其是蓬勃發展的半導體產業。\n\n為了彌補失去的核電，台灣計劃今年新增5吉瓦的燃氣發電量，相當於五座核反應爐。這正在推動液化天然氣進口量達到歷史新高，國營能源公司中油正積極尋求額外的供應。專家估計，到本十年末，台灣每年可能需要在天然氣進口上額外花費20億美元。\n\n人們越來越擔心，這種轉變將對台灣的氣候目標產生負面影響，並增加其受到中國潛在封鎖的脆弱性，因為台灣的天然氣儲存能力有限（僅夠11天）。中國已在軍事演習中模擬了對台灣天然氣進口碼頭的攻擊。批評人士表示，台灣放棄核能轉向天然氣不僅會破壞台灣的氣候目標，還會使該島更容易受到中國的封鎖。"
  },
  {
    "id": "44023680",
    "title": "K-Scale Labs: Open-source humanoid robots, built for developers",
    "url": "https://www.kscale.dev/",
    "summary": "K-Scale Labs is offering an open-source, general-purpose humanoid robot called K-Bot, designed specifically for developers. The robot stands 4 feet tall and is available for pre-order. The initial price is $8,999 USD, discounted from its intended price of $15,999 USD. The open-source nature of the robot suggests that it is intended to be highly customizable and adaptable by developers for a variety of applications. The low entry cost (relative to other humanoid robots) coupled with the open-source nature points towards making robotics development more accessible.\n",
    "chinese_title": "K-Scale Labs：为开发者打造的开源人形机器人",
    "chinese_summary": "K-Scale Labs推出一款名为K-Bot的开源通用人形机器人，专为开发者设计。该机器人高4英尺，现已开放预订。初始价格为8,999美元，低于其原价15,999美元。该机器人的开源特性表明开发者可以对其进行高度定制和调整，以适应各种应用。相对于其他人形机器人而言较低的入门成本，加上开源特性，意味着机器人开发将变得更容易。"
  },
  {
    "id": "44020591",
    "title": "Spaced repetition systems have gotten better",
    "url": "https://domenic.me/fsrs/",
    "summary": "This article discusses the evolution of spaced repetition systems (SRS), particularly highlighting the advancements made by the FSRS (Fuzzy Spaced Repetition System) algorithm. SRS programs, like Anki, help users memorize information by showing flashcards at increasing intervals based on recall success. The author emphasizes the importance of SRS for part-time learning and retaining knowledge from various sources.\n\nThe key improvement brought by FSRS is its use of machine learning to optimize scheduling. Unlike older algorithms like SuperMemo-2, which relied on arbitrary rules, FSRS predicts when a user is likely to forget information and schedules reviews accordingly. It uses three main components: Difficulty, Stability, and Retrievability, modeling these with curves fitted using 21 parameters that are adjusted to the individual's learning patterns.\n\nFSRS allows users to choose a desired retention rate and simulates workload, allowing for optimization of the workload-to-knowledge ratio. The author praises FSRS for its lighter review load and reduced frustration compared to previous algorithms. It is included in Anki, but needs to be manually enabled. The article contrasts Anki, with FSRS, to sites like WaniKani and Bunpro, whose algorithms lack personalization and are less effective. The author concludes that Anki, despite its UI flaws, is a powerful and flexible tool for efficient learning, especially with FSRS. The article also provides a comprehensive list of resources for further learning about SRS and FSRS.\n",
    "chinese_title": "间隔重复系统变得更好了。",
    "chinese_summary": "本文探讨了间隔重复系统（SRS）的演变，特别强调了FSRS（模糊间隔重复系统）算法所取得的进展。像Anki这样的SRS程序，通过根据回忆成功率以越来越长的间隔显示记忆卡，帮助用户记忆信息。作者强调了SRS对于兼职学习和保留来自各种来源的知识的重要性。\n\nFSRS带来的主要改进是其使用机器学习来优化调度。与依赖于任意规则的旧算法（如SuperMemo-2）不同，FSRS预测用户可能忘记信息的时间，并据此安排复习。它使用三个主要组成部分：难度、稳定性和可检索性，并使用21个参数拟合的曲线对这些组成部分进行建模，这些参数会根据个人的学习模式进行调整。\n\nFSRS允许用户选择所需的保留率并模拟工作量，从而可以优化工作量与知识的比率。作者赞扬FSRS相比之前的算法，复习负担更轻，挫败感更少。它包含在Anki中，但需要手动启用。文章将包含FSRS的Anki与WaniKani和Bunpro等网站进行了对比，后者的算法缺乏个性化，效果较差。作者总结说，Anki尽管存在UI缺陷，但它是一种强大而灵活的工具，可以实现高效学习，尤其是在使用FSRS的情况下。本文还提供了有关SRS和FSRS的全面资源列表，以供进一步学习。"
  },
  {
    "id": "44031656",
    "title": "Google Launches NotebookLM for Android",
    "url": "https://9to5google.com/2025/05/19/notebooklm-app-launch/",
    "summary": "Google has launched the NotebookLM app for Android ahead of I/O 2025, fulfilling a top user request. The app provides a native experience for managing and interacting with NotebookLM notebooks.\n\nKey features include:\n\n*   **Homepage:** Displays notebooks with filters for organization.\n*   **Design:** Light and dark mode based on system theme.\n*   **Notebook Cards:** Display notebook name, emoji, source count, date, and Audio Overview play button.\n*   **Audio Overviews:** Podcast-style experience with background playback, offline support, and AI host interaction (beta).\n*   **Source Addition:** Supports PDFs, websites, YouTube videos, and text. Integrates with Android share sheet.\n*   **Interface:** Features a bottom bar for Sources, Chat Q&A, and Studio. Similar to the mobile website but native.\n*   **Platform Support:** Optimized for both phones and tablets but doesn't fully utilize Material 3.\n*   **Availability:** Available for download on the Google Play Store; the iOS version is not yet available.\n",
    "chinese_title": "Google推出Android版NotebookLM",
    "chinese_summary": "谷歌在I/O 2025 大会前夕推出了 Android 版 NotebookLM 应用，满足了用户的首要需求。该应用提供了一种原生的 NotebookLM 笔记本管理和交互体验。\n\n主要功能包括：\n\n*   **主页：** 显示笔记本，并提供筛选器进行整理。\n*   **设计：** 基于系统主题的浅色和深色模式。\n*   **笔记本卡片：** 显示笔记本名称、表情符号、来源数量、日期和“音频概述”播放按钮。\n*   **音频概述：** 提供播客式体验，支持后台播放、离线支持和 AI 主持人互动（测试版）。\n*   **来源添加：** 支持 PDF、网站、YouTube 视频和文本。与 Android 分享表集成。\n*   **界面：** 具有底部栏，用于访问“来源”、“聊天问答”和“工作室”。与移动网站相似，但为原生应用。\n*   **平台支持：** 针对手机和平板电脑进行了优化，但未完全利用 Material 3。\n*   **可用性：** 可在 Google Play 商店下载；iOS 版本暂不可用。"
  },
  {
    "id": "44012283",
    "title": "Procolored printer drivers contained malware",
    "url": "https://www.neowin.net/news/this-printer-company-served-you-malware-for-months-and-dismissed-it-as-false-positives/",
    "summary": "Procolored inkjet printer users are urged to check their systems for malware due to the company distributing infected companion software, particularly if downloaded within the last six months. YouTuber Cameron Coward discovered malware on a Procolored USB drive and reported it. Initially dismissed by Procolored, the issue was investigated by cybersecurity firm G Data after Coward sought expert help on Reddit. G Data confirmed the presence of Win32.Backdoor.XRedRAT.A (an inactive backdoor) and MSIL.Trojan-Stealer.CoinStealer.H (SnipVex, a cryptocurrency stealer and file infector) within Procolored's official software downloads. SnipVex previously stole roughly $100,000 in Bitcoin before ceasing activity.\n\nProcolored suggested a virus introduction during USB transfer and potential misinterpretation of Chinese software by international operating systems. The company temporarily removed software from its website for scanning and replaced it with clean versions.\n\nG Data recommends that potentially affected users check for antivirus exclusions made for printer software and consider a complete system reformat and OS reinstallation due to file infectors like Floxif and SnipVex. While XRedRAT was likely inactive, SnipVex remained a threat. G Data found no evidence of intentional malware distribution and Procolored has committed to improving internal processes.\n",
    "chinese_title": "Procolored打印机驱动程序包含恶意软件",
    "chinese_summary": "Procolored喷墨打印机用户请检查系统是否存在恶意软件，因该公司分发的配套软件被感染，尤其是过去六个月内下载的用户。YouTuber Cameron Coward在一个Procolored USB驱动器上发现了恶意软件并进行了报告。Procolored最初对此不以为然，但在Coward在Reddit上寻求专家帮助后，网络安全公司G Data对此事进行了调查。G Data确认Procolored官方软件下载中存在Win32.Backdoor.XRedRAT.A（一种不活跃的后门）和MSIL.Trojan-Stealer.CoinStealer.H（SnipVex，一种加密货币窃取器和文件感染器）。SnipVex之前窃取了大约10万美元的比特币后停止了活动。\n\nProcolored认为可能是USB传输过程中引入了病毒，并且国际操作系统可能对中国软件存在误解。该公司已暂时从其网站上删除了软件进行扫描，并替换为干净的版本。\n\nG Data建议可能受影响的用户检查是否为打印机软件设置了杀毒软件排除项，并考虑完全重新格式化系统并重新安装操作系统，因为存在像Floxif和SnipVex这样的文件感染器。虽然XRedRAT可能处于非活动状态，但SnipVex仍然是一个威胁。G Data没有发现故意传播恶意软件的证据，Procolored已承诺改进内部流程。"
  },
  {
    "id": "44010096",
    "title": "Font Activations: A Note on the Type",
    "url": "https://robhorning.substack.com/p/font-activations",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "字体激活：关于字体的说明",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44016037",
    "title": "Mystical",
    "url": "https://suberic.net/~dmm/projects/mystical/README.html",
    "summary": "\"Mystical\" is a visual programming language concept designed as a graphical representation of PostScript code, resembling magical circles. It utilizes concentric rings to represent different data structures: executable arrays (like `{}`), non-executable arrays (like `[]`), and dictionaries (like `<< >>`). The code within these structures flows counter-clockwise, starting at the 3:00 position.\n\nThe rings contain text and sigils. Text strings are enclosed in cartouche-like shapes, while operators, variables, and keywords are represented by unique sigils - graphical symbols designed to intuitively convey the meaning of the command. The article showcases numerous example sigils for common PostScript operators like `dup`, `copy`, `add`, and control flow structures like `for`, `if`, and `def`. User-defined variables can also have custom sigils.\n\nA special ligature exists for defining functions (`/name { ring } def`) inside executable arrays, simplifying the visual representation of this common operation.\n\nThe article provides functions (\"mystical.ps\") to automatically generate Mystical images from PostScript code, scaling the result to fit within a unit circle. However, it acknowledges current layout limitations, with subcircles being overly spaced out.\n\nWhile Mystical isn't a functional programming language with an interpreter, it serves as a visual way to represent PostScript code, theoretically readable by humans. The article proposes its potential applicability to other stack-based languages like Forth.\n",
    "chinese_title": "神秘的",
    "chinese_summary": "Mystical：一种PostScript代码的可视化编程语言概念，形似魔法圆环。它使用同心圆环表示不同的数据结构：可执行数组（如`{}`）、不可执行数组（如`[]`）和字典（如`<< >>`）。这些结构中的代码以逆时针方向流动，从3点钟位置开始。\n\n圆环包含文本和符印。文本字符串包含在类似椭圆形的形状中，而运算符、变量和关键字则由独特的符印表示——这些图形符号旨在直观地传达命令的含义。本文展示了许多常见PostScript运算符（如`dup`、`copy`、`add`）和控制流结构（如`for`、`if`和`def`）的示例符印。用户定义的变量也可以拥有自定义符印。\n\n存在一种特殊的连字形式，用于在可执行数组中定义函数（`/name { ring } def`），从而简化此常见操作的可视化表示。\n\n本文提供了从PostScript代码自动生成Mystical图像的函数（“mystical.ps”），并将结果缩放到单位圆内。然而，它承认当前布局的局限性，即子圆之间的间距过大。\n\n虽然Mystical不是一种带有解释器的函数式编程语言，但它提供了一种可视化表示PostScript代码的方式，理论上可供人类阅读。本文提出了其在其他基于堆栈的语言（如Forth）中的潜在应用。"
  },
  {
    "id": "44028587",
    "title": "'Significant amount' of private data stolen in UK Legal Aid hack",
    "url": "https://www.bbc.co.uk/news/articles/cgr5g4pv2l0o",
    "summary": "A \"significant amount\" of private data, including details of domestic abuse victims, has been stolen from the UK Legal Aid Agency's online system after a hack in April 2025. The breach, dating back to 2010, encompasses over two million pieces of information across all areas of the aid system, potentially exposing addresses, dates of birth, national ID numbers, criminal history, employment, and financial data.\n\nThe Ministry of Justice (MoJ) has apologized, with agency chief Jane Harbottle expressing concern for those affected. Justice Minister Sarah Sackman stated that other government systems appear unaffected. The public is urged to be vigilant for suspicious activity and update potentially compromised passwords.\n\nThe Legal Aid Agency's online digital services are currently offline. The Law Society has called for immediate action and individual notification of those affected. The incident is being investigated by the National Crime Agency and the National Cyber Security Centre, and the Information Commissioner has been informed.\n\nThis attack is the latest in a series of recent cyber-attacks impacting major UK organizations, including Harrods, Marks & Spencer, and the Co-op.\n",
    "chinese_title": "英国法律援助系统遭黑客攻击，大量私人数据被盗",
    "chinese_summary": "2025年4月，英国法律援助署在线系统遭黑客攻击，大量私人数据被盗，其中包括家庭虐待受害者的详细信息。此次泄露可追溯至2010年，涵盖援助系统所有领域的两百多万条信息，可能暴露地址、出生日期、国民身份证号码、犯罪记录、就业和财务数据。\n\n司法部已道歉，署长简·哈博特尔对受影响者表示关切。司法部长莎拉·萨克曼表示，其他政府系统似乎未受影响。公众被敦促警惕可疑活动并更新可能已泄露的密码。\n\n法律援助署的在线数字服务目前已下线。律师协会呼吁立即采取行动并单独通知受影响者。国家犯罪局和国家网络安全中心正在调查此事，信息专员已获悉。\n\n此次攻击是近期一系列影响英国主要组织的网络攻击中的最新一起，受影响的组织包括哈罗德百货、玛莎百货和合作社。"
  },
  {
    "id": "44022448",
    "title": "Ditching Obsidian and building my own",
    "url": "https://amberwilliams.io/blogs/building-my-own-pkms",
    "summary": "Amber Williams details her journey of ditching Obsidian and building her own Personal Knowledge Management System (PKMS), driven by concerns about privacy, cost, longevity, and excessive customization. She outlines the benefits of a PKMS for capturing and connecting ideas, improving memory, and tracking personal growth.\n\nFrustrated with Obsidian's paid cross-device access and the potential for future limitations akin to Evernote's past restrictions, Amber sought a more secure and lasting solution. Her key requirements were ease of use, plugin-like functionality, and strong security to control her data and prevent potential misuse by for-profit companies.\n\nBeing a software engineer, Amber built her own PKMS using an open-source platform called Directus as a wrapper around a database. Directus handles authentication and security layers, making the process surprisingly straightforward. She can now create, update, and preview markdown notes across devices without monthly fees.\n\nAmber highlights the benefits of her custom PKMS: improved data control, elimination of cyclical migrations between apps, reduced costs, and the ability to create personalized \"plugins\" using AI code generation. She emphasizes that a knowledge garden requires continuous cultivation and that a simple, secure system is crucial for long-term adoption. While acknowledging the convenience of commercial apps, she advocates for exploring unconventional solutions tailored to individual needs.  She's dogfooding her custom PKMS for over a year now.\n",
    "chinese_title": "放弃 Obsidian，自己动手构建",
    "chinese_summary": "安珀·威廉姆斯详述了她放弃Obsidian并构建自己的个人知识管理系统 (PKMS) 的历程，其动力源于对隐私、成本、寿命和过度定制的担忧。她概述了PKMS在捕捉和连接想法、提高记忆力以及追踪个人成长方面的益处。\n\n由于对Obsidian的跨设备付费访问以及未来可能出现类似Evernote过去限制的担忧，安珀寻求一种更安全和持久的解决方案。她的主要需求是易用性、类似插件的功能以及强大的安全性，以便控制她的数据并防止营利性公司的潜在滥用。\n\n作为一名软件工程师，安珀使用名为Directus的开源平台作为数据库的包装，构建了自己的PKMS。Directus处理身份验证和安全层，使这个过程出乎意料地简单。现在，她可以在不同设备上创建、更新和预览markdown笔记，而无需支付月费。\n\n安珀强调了她的定制PKMS的优势：改进的数据控制、消除应用程序之间的周期性迁移、降低成本以及使用AI代码生成创建个性化“插件”的能力。她强调，知识花园需要持续耕耘，而一个简单、安全的系统对于长期采用至关重要。虽然她承认商业应用程序的便利性，但她倡导探索为个人需求量身定制的非常规解决方案。她已经试用她的定制PKMS一年多了。"
  },
  {
    "id": "43996422",
    "title": "Show HN: I reinvented PHP in TypeScript (demo)",
    "url": "https://github.com/vseplet/morph",
    "summary": "\"Morph\" is a TypeScript library aiming to simplify full-stack web development by offering a \"PHP-like\" experience within Deno, Bun, or Node. It's designed for building Hypermedia-Driven Applications (HDAs) without a complex build process, leveraging HTMX principles and server-side rendering (SSR). It blends elements of SSR, SPA, and islands architecture while adhering to standard HTML, CSS, and JavaScript.\n\nThe library emphasizes that components are rendered server-side, can access server-side context, and can be re-rendered independently. Components can be nested, and minimal client-side JavaScript is needed, eliminating the need for build steps and upfront API data structure design.\n\nMorph is particularly suited for smaller projects like Telegram bots, desktop apps, or internal tools where a full-fledged frontend stack is overkill. It's currently built on Hono, with potential support for other backends in the future. The provided code demonstrates how to set up a basic \"Hello, World!\" page that fetches a dad joke from an external API. The author encourages contributions and pull requests as the project is under active development.\n",
    "chinese_title": "Show HN：我用 TypeScript 重写了 PHP (演示)",
    "chinese_summary": "Morph：一个旨在简化全栈 Web 开发的 TypeScript 库，通过在 Deno、Bun 或 Node 中提供类似 PHP 的体验，构建无需复杂构建流程、基于 HTMX 原则和服务器端渲染 (SSR) 的超媒体驱动应用程序 (HDA)。它融合了 SSR、SPA 和 Islands 架构的元素，同时遵循标准的 HTML、CSS 和 JavaScript。\n\n该库强调组件在服务器端渲染，可以访问服务器端上下文，并且可以独立地重新渲染。组件可以嵌套，并且只需要最少的客户端 JavaScript，从而消除了构建步骤和预先设计 API 数据结构的需求。\n\nMorph 特别适合 Telegram 机器人、桌面应用程序或内部工具等较小项目，在这些项目中，成熟的前端堆栈显得过于复杂。目前它构建于 Hono 之上，未来可能会支持其他后端。提供的代码演示了如何设置一个基本的“Hello, World!”页面，该页面从外部 API 获取一个老爸笑话。作者鼓励贡献和提交 pull requests，因为该项目正在积极开发中。"
  },
  {
    "id": "44030786",
    "title": "We 3D-Printed Luigi Mangione's Ghost Gun. It Was Legal",
    "url": "https://www.wired.com/story/luigi-mangione-ghost-gun-built-tested/",
    "summary": "In the article, the author, Andy Greenberg, recreates Luigi Mangione's alleged 3D-printed ghost gun to investigate how far the technology has come and whether gun laws have caught up. He successfully 3D-printed a Glock-style handgun frame and silencer (with necessary licensing for the silencer) in Louisiana, assembled it with commercially available parts purchased online, and test-fired it at a gun range.\n\nGreenberg highlights the ease and legality (in most US states) of creating ghost guns through 3D printing, exploiting a loophole in federal law that only regulates the gun frame. He contrasts this with stricter state laws and the now-upheld federal ban on ghost gun \"kits,\" arguing that the ban may inadvertently increase the appeal of 3D-printed guns.\n\nThe author points out that 3D-printed guns are now easier and cheaper to make than they were a decade ago. He collaborated with \"Print Shoot Repeat\" (PSR), a 3D-printed gun enthusiast, who provided expertise in printing and assembly. Despite the author's initial apprehension, the gun functioned as expected. The article raises concerns about the accessibility of untraceable firearms to individuals who might misuse them while acknowledging the complexities surrounding gun control and individual freedoms. Ultimately, Greenberg's experiment underscores the persistent challenges in regulating 3D-printed ghost guns.\n",
    "chinese_title": "我们3D打印了路易吉·曼吉奥尼的幽灵枪，它是合法的。",
    "chinese_summary": "在文章中，作者安迪·格林伯格重现了路易吉·曼吉奥内声称的3D打印幽灵枪，以调查该技术的发展程度以及枪支法律是否跟上。他在路易斯安那州成功地3D打印了一个格洛克式手枪框架和消音器（消音器已获得必要许可），用网上购买的市售零件组装起来，并在靶场进行了试射。\n\n格林伯格强调了通过3D打印制造幽灵枪的简易性和合法性（在美国大多数州），利用了联邦法律中只监管枪支框架的漏洞。他将此与更严格的州法律以及现已获得支持的联邦幽灵枪“套件”禁令进行了对比，认为该禁令可能反而会增加3D打印枪支的吸引力。\n\n作者指出，现在制造3D打印枪支比十年前更容易也更便宜。他与3D打印枪支爱好者“Print Shoot Repeat”（PSR）合作，后者提供了打印和组装方面的专业知识。尽管作者最初有些担心，但枪支的运行符合预期。文章提出了对无法追踪的枪支易被滥用者获取的担忧，同时也承认了围绕枪支管制和个人自由的复杂性。最终，格林伯格的实验突显了监管3D打印幽灵枪所面临的持续挑战。"
  },
  {
    "id": "44031474",
    "title": "Microsoft's Windows Subsystem for Linux is now open-source",
    "url": "https://www.theverge.com/news/669286/microsoft-windows-subsystem-for-linux-open-source",
    "summary": "Microsoft has open-sourced its Windows Subsystem for Linux (WSL), allowing developers to access, download, and build the WSL code from source. This move, a long-standing request from the developer community, enables community members to contribute fixes, features, and improvements to WSL.\n\nWSL initially launched in 2016 as part of the Windows 10 Anniversary update, evolving over time from a system based on pico process provider to one relying on the Linux kernel itself for better compatibility. In 2021, Microsoft separated the WSL codebase from Windows, enabling faster updates and feature additions. With the latest 24H2 update for Windows 11, WSL is now a fully separate package.\n\nThis open-sourcing initiative aims to enhance WSL performance, improve integration with Linux services, and ultimately make Windows a better development environment.  Microsoft hopes developers will utilize the project to improve WSL and contribute to the Windows ecosystem. This announcement has effectively closed the original issue raised on GitHub, asking whether WSL would become open-source.\n",
    "chinese_title": "微软的Linux Windows子系统现已开源",
    "chinese_summary": "微软已开源其Windows Linux子系统 (WSL)，允许开发者从源代码访问、下载和构建WSL代码。这一举措是开发者社区长期以来的要求，使社区成员能够为WSL贡献修复、功能和改进。\n\nWSL最初于2016年作为Windows 10周年更新的一部分发布，随着时间的推移，从基于pico进程提供程序的系统演变为依赖Linux内核本身的系统，以获得更好的兼容性。2021年，微软将WSL代码库从Windows中分离出来，从而能够更快地进行更新和添加功能。随着Windows 11的最新24H2更新，WSL现在是一个完全独立的软件包。\n\n这一开源计划旨在提高WSL的性能，改善与Linux服务的集成，并最终使Windows成为更好的开发环境。微软希望开发者能够利用该项目改进WSL并为Windows生态系统做出贡献。该公告实际上关闭了GitHub上提出的关于WSL是否会开源的原始问题。"
  },
  {
    "id": "44029343",
    "title": "How to Compare Streamable HTTP and SSE HTTP",
    "url": "https://ziyou.framer.website/en/blog/mcp-protocol-why-is-streamable-http-the-best-choice",
    "summary": "This article compares Streamable HTTP with HTTP+SSE for AI model communication using the Model Context Protocol (MCP). It highlights Streamable HTTP as a significant upgrade, addressing the limitations of HTTP+SSE.\n\n**Key Advantages of Streamable HTTP:**\n\n*   **Improved Stability:** Streamable HTTP handles high concurrency better than HTTP+SSE due to efficient TCP connection reuse, leading to lower resource consumption and higher request success rates.\n*   **Enhanced Performance:** Streamable HTTP demonstrates shorter and more stable response times, making it faster than HTTP+SSE, especially under heavy load. Higress' implementation leverages production-grade performance over the community Python implementation.\n*   **Simplified Client Implementation:** The client-side code for Streamable HTTP is significantly less complex than HTTP+SSE, reducing maintenance costs and improving readability.\n\n**Technical Improvements:**\n\n*   **Unified Endpoint:** Streamable HTTP utilizes a single endpoint for requests and responses, simplifying architecture and improving compatibility with network infrastructure.\n*   **Flexible Transmission:** The server can dynamically switch between standard HTTP responses and SSE streaming based on request requirements, optimizing resource allocation.\n*   **Robust Session Management:** Streamable HTTP incorporates a session mechanism with features like session consistency, reconnection support, and state recovery, enhancing reliability.\n\nThe article showcases performance tests using a Python program simulating concurrent users, demonstrating the superior performance and stability of Higress's Streamable HTTP implementation compared to a standard HTTP+SSE server. It also mentions mcp.higress.ai as a platform offering high-performance Streamable HTTP-based MCP services, emphasizing its ease of API transformation, dual protocol support, and focus on providing practical application value.\n",
    "chinese_title": "如何比较流式HTTP和SSE HTTP",
    "chinese_summary": "本文比较了流式HTTP与HTTP+SSE在人工智能模型通信中使用模型上下文协议（MCP）的性能。文章强调流式HTTP是一项重大升级，解决了HTTP+SSE的局限性。\n\n**流式HTTP的主要优势：**\n\n*   **更高的稳定性：** 流式HTTP比HTTP+SSE更好地处理高并发，因为它能够有效地重用TCP连接，从而降低资源消耗并提高请求成功率。\n*   **更强的性能：** 流式HTTP表现出更短、更稳定的响应时间，使其比HTTP+SSE更快，尤其是在重负载下。Higress的实现利用了生产级别的性能，优于社区Python实现。\n*   **简化的客户端实现：** 流式HTTP的客户端代码比HTTP+SSE简单得多，降低了维护成本并提高了可读性。\n\n**技术改进：**\n\n*   **统一端点：** 流式HTTP使用单一端点进行请求和响应，简化了架构并提高了与网络基础设施的兼容性。\n*   **灵活传输：** 服务器可以根据请求需求在标准HTTP响应和SSE流之间动态切换，优化资源分配。\n*   **强大的会话管理：** 流式HTTP包含会话机制，具有会话一致性、重新连接支持和状态恢复等功能，从而提高可靠性。\n\n本文通过一个模拟并发用户的Python程序展示了性能测试，证明了Higress的流式HTTP实现相比标准HTTP+SSE服务器具有卓越的性能和稳定性。文章还提到了mcp.higress.ai平台，该平台提供基于高性能流式HTTP的MCP服务，强调其易于API转换、双协议支持以及专注于提供实际应用价值。"
  },
  {
    "id": "44028384",
    "title": "Is Winter Coming? (2024)",
    "url": "https://www.datagubbe.se/winter/",
    "summary": "In \"Is Winter Coming? (2024)\", the author reflects on the current state of artificial intelligence, drawing parallels to the \"AI winter\" of the 1960s. The piece argues that current AI hype, driven by big tech companies and \"tech bros,\" is leading to unrealistic expectations. The author uses examples like image recognition failures and the need for \"prompt engineering\" to highlight the limitations of AI. They point out that while AI has made progress in areas like machine translation and medical diagnosis, these are often narrow use cases, unlike the general-purpose \"thinking machines\" that are being promised.\n\nA major concern is the phenomenon of \"hallucinations\" in Large Language Models (LLMs) like ChatGPT, where the AI confidently presents falsehoods as facts. The author argues that this stems from the fundamental nature of LLMs, which string together words based on statistical probability without true understanding. Examples include lawyers using ChatGPT and facing consequences for erroneous citations.\n\nWhile acknowledging potential benefits in areas like programming, the author stresses that LLMs are far from being able to replace human expertise and must be thoroughly checked. The piece also criticizes the overhyped promises of self-driving cars.\n\nThe author concludes by questioning whether current AI, despite its potential improvements, can ever reach the level of reliability and consistency needed to truly replace human professionals or gain public trust. They suggest that the hype surrounding AI may be fading as reality catches up with inflated expectations.\n",
    "chinese_title": "凛冬将至？ (2024)",
    "chinese_summary": "寒冬将至？（2024）一文中，作者反思了当前人工智能的现状，并将其与20世纪60年代的“人工智能寒冬”相提并论。文章认为，目前由大型科技公司和“科技人士”推动的人工智能炒作，正导致不切实际的期望。作者使用图像识别失败和需要“提示工程”等例子来强调人工智能的局限性。他们指出，虽然人工智能在机器翻译和医疗诊断等领域取得了进展，但这些通常是狭隘的用例，与所承诺的通用“思考机器”不同。\n\n一个主要担忧是像ChatGPT这样的大型语言模型（LLM）中出现的“幻觉”现象，即人工智能自信地将虚假信息作为事实呈现。作者认为，这源于LLM的根本性质，即它们基于统计概率将单词串联在一起，而没有真正的理解。例如，律师使用ChatGPT并因错误的引用而面临后果。\n\n虽然承认人工智能在编程等领域具有潜在的好处，但作者强调，LLM远不能取代人类的专业知识，必须经过彻底的检查。文章还批评了自动驾驶汽车被过度炒作的承诺。\n\n作者最后质疑，尽管当前的人工智能可能有所改进，但它是否能够达到真正取代人类专业人士或赢得公众信任所需的可靠性和一致性水平。他们认为，随着现实赶上膨胀的期望，围绕人工智能的炒作可能会逐渐消退。"
  },
  {
    "id": "44024173",
    "title": "Hyper Typing",
    "url": "https://pscanf.com/s/341/",
    "summary": "This article discusses the trade-off between type safety and complexity in TypeScript libraries, introducing the concept of \"hyper-typing.\" The author defines hyper-typing as the practice of creating excessively complex type definitions in pursuit of perfect type safety, often making libraries difficult to use.\n\nThe author illustrates this with the example of TanStack Form, a library known for its strict type safety, but whose complex type definitions (like the `FieldMeta` type with 17 generic parameters) can be overwhelming and hard to understand.\n\nThe article outlines the cons of hyper-typing: poorly formatted type definition files, difficult-to-understand types, reliance on unsafe workarounds like casting to `any`, and incomprehensible error messages.\n\nThe author argues that simpler, less precise types can lead to a more enjoyable developer experience, even if it means sacrificing some type safety. They also highlight type generation (e.g., from a schema) as a favorable alternative, citing Astro's content collection type generation as a positive example, despite it being sometimes viewed unfavorably.\n\nUltimately, the author advocates for a balance between type safety and usability, suggesting that overly complex types can be counterproductive, leading to more problems than they solve. The core message emphasizes prioritizing developer experience and maintainability over the pursuit of absolute type perfection.\n",
    "chinese_title": "高速打字",
    "chinese_summary": "本文探讨了TypeScript库中类型安全性和复杂性之间的权衡，并介绍了“过度类型化”的概念。作者将过度类型化定义为一种为了追求完美的类型安全性而创建过于复杂的类型定义的实践，这种做法通常会使库难以使用。\n\n作者以TanStack Form为例，该库以其严格的类型安全性而闻名，但其复杂的类型定义（例如具有17个泛型参数的`FieldMeta`类型）可能会让人感到不知所措且难以理解。\n\n本文概述了过度类型化的缺点：格式不佳的类型定义文件、难以理解的类型、依赖于不安全的解决方法（如强制转换为`any`）以及难以理解的错误消息。\n\n作者认为，即使这意味着牺牲一些类型安全性，更简单、不太精确的类型也可能带来更愉快的开发者体验。他们还强调了类型生成（例如，从模式生成）是一种有利的替代方案，并以Astro的内容集合类型生成为例，尽管有时对其评价不高，但仍然是一个积极的例子。\n\n最终，作者提倡在类型安全性和可用性之间取得平衡，并指出过于复杂的类型可能会适得其反，导致更多问题。核心信息强调优先考虑开发者体验和可维护性，而不是追求绝对的类型完美。"
  },
  {
    "id": "44027379",
    "title": "What does the end of mathematics look like?",
    "url": "https://www.awanderingmind.blog/posts/2025-05-18-what-does-the-end-of-mathematics-look-like.html",
    "summary": "In a thought-provoking essay, the author explores the potential future of mathematics in a world increasingly dominated by artificial intelligence and machine learning. He questions what it would mean if the human drive to understand, which he considers intrinsic to mathematics, were completely subsumed by a capitalist machinery of AI-driven proof generation.\n\nWhile acknowledging that such a future is not imminent, he argues that the possibility is no longer far-fetched and warrants introspection. He contrasts the excitement some might feel about AI proving important theorems with the potential loss of human-scale understanding and intellectual growth.\n\nThe author envisions a dystopian scenario where inscrutable AI models, owned by private entities, surpass human comprehension and dictate research programs. He paints a picture of a new \"priest class\" maintaining this computational wonderland for shareholder value, at the expense of the common inheritance of humanity.\n\nThe author emphasizes that mathematics holds a special place in our cultural reality, informing our intellectual norms. As AI takes over creative mathematical tasks, we must rethink its role in our world, confront the expendability of human minds to capital, and re-evaluate the goals of education.\n\nThe author hopes that this shift will lead to a renewed appreciation for the relationship between mathematics and art, their roles in our mental and emotional lives, and the purpose of human societies. He envisions a future where humanity throws off the chains that bind us, but recognizes that the current trajectory is heading in the opposite direction.\n",
    "chinese_title": "数学的终结是什么样的？",
    "chinese_summary": "在一篇引人深思的文章中，作者探讨了在人工智能和机器学习日益主导的世界中，数学的潜在未来。他质疑，如果人类的理解驱动力——他认为这是数学固有的——完全被人工智能驱动的证明生成的资本主义机器所吞噬，那将意味着什么。\n\n虽然承认这样的未来并非迫在眉睫，但他认为这种可能性不再牵强，值得反思。他将某些人可能对人工智能证明重要定理的兴奋与人类尺度理解和智力增长的潜在丧失进行了对比。\n\n作者设想了一个反乌托邦式的场景：由私人实体拥有的、难以理解的人工智能模型超越了人类的理解，并主导了研究项目。他描绘了一个新的“祭司阶层”，为了股东价值而维护这个计算仙境，却牺牲了人类共同的遗产。\n\n作者强调，数学在我们的文化现实中占据着特殊的地位，影响着我们的智力规范。随着人工智能接管创造性的数学任务，我们必须重新思考它在世界中的作用，直面人类思想对资本的可消耗性，并重新评估教育的目标。\n\n作者希望这种转变将导致人们重新认识数学与艺术之间的关系，它们在我们精神和情感生活中的作用，以及人类社会的目的。他设想了一个人类挣脱束缚的未来，但也认识到目前的轨迹正朝着相反的方向发展。"
  },
  {
    "id": "44005692",
    "title": "Show HN: A platform to find tech conferences, discounts, and ticket giveaways",
    "url": "https://www.tech.tickets/",
    "summary": "This \"Show HN\" submission presents a platform designed to help users discover tech conferences. The platform likely focuses on aggregating information about various tech events, making it easier for individuals to find conferences relevant to their interests and professional development. A key selling point appears to be the inclusion of discounts and ticket giveaways. This suggests the platform actively works to secure deals and opportunities for users to attend conferences at a reduced cost or even for free.\n\nSince the content is \"Loading...\", further details about the platform's functionality, features, specific tech areas covered, geographical focus, and the mechanisms for securing discounts/giveaways are unavailable. However, the core value proposition is clear: simplifying the process of finding relevant tech conferences while also providing avenues for cost savings and free attendance. This addresses a common pain point for tech professionals and enthusiasts who often struggle to stay informed about upcoming events and manage the high cost of attendance.\n",
    "chinese_title": "Show HN: 寻找技术会议、折扣和赠票的平台",
    "chinese_summary": "此“Show HN”提交介绍了一个旨在帮助用户发现科技会议的平台。该平台可能专注于聚合各类科技活动的信息，以便个人更容易找到与其兴趣和职业发展相关的会议。一个关键的卖点似乎是包含折扣和赠票。这表明该平台积极努力为用户争取以降低的成本甚至免费参加会议的机会。\n\n由于内容正在“加载中...”，关于平台的功能、特性、涵盖的具体技术领域、地理重点以及获取折扣/赠票的机制的更多细节尚不可用。然而，核心价值主张是明确的：简化寻找相关科技会议的流程，同时提供节省成本和免费参加的途径。这解决了科技专业人士和爱好者们普遍存在的痛点，他们经常难以了解即将到来的活动并应对高昂的参会费用。"
  },
  {
    "id": "44031364",
    "title": "Why Arabs Lose Wars (1999)",
    "url": "https://www.meforum.org/middle-east-quarterly/why-arabs-lose-wars",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "阿拉伯人为何输掉战争 (1999)",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44023423",
    "title": "The Fall of Roam (2022)",
    "url": "https://every.to/superorganizers/the-fall-of-roam",
    "summary": "This is a comment, not an article. Therefore, summarizing the \"article\" would be inappropriate. Instead, here's a summary of the comment itself:\n\nBryan read and enjoyed Dan's article, titled \"The Fall of Roam (2022)\". While not explicitly stated, the title suggests the article discusses the decline or shortcomings of the Roam Research note-taking application. Bryan then recommends Obsidian as a superior alternative, implicitly suggesting it addresses the issues raised about Roam. He emphasizes the importance of using Obsidian in conjunction with Nick Milo's \"Linking Your Thinking\" note-making strategy, claiming this combination has significantly improved his note-taking workflow. The comment suggests that Bryan has found a new and currently satisfying system for managing his notes, implying that he previously used Roam or was dissatisfied with its performance.\n",
    "chinese_title": "Roam陨落 (2022)",
    "chinese_summary": "这是一条评论，并非文章。因此，总结“文章”是不恰当的。以下是对评论本身的总结：\n\n布莱恩阅读并喜欢丹的文章，题为“Roam的衰落（2022）”。虽然没有明确说明，但标题暗示该文章讨论了Roam Research笔记应用程序的衰落或不足。布莱恩随后推荐Obsidian作为更优的替代方案，暗示它解决了关于Roam提出的问题。他强调将Obsidian与Nick Milo的“连接你的思考”笔记策略结合使用的重要性，声称这种组合极大地改善了他的笔记工作流程。这条评论表明，布莱恩已经找到了一种新的且目前令人满意的笔记管理系统，暗示他以前使用过Roam或对其性能不满意。"
  },
  {
    "id": "44009185",
    "title": "Comparing Parallel Functional Array Languages: Programming and Performance",
    "url": "https://arxiv.org/abs/2505.08906",
    "summary": "This article, \"Comparing Parallel Functional Array Languages: Programming and Performance,\" presents a systematic comparison of five parallel functional array languages: Accelerate, APL, DaCe, Futhark, and SaC. The authors, led by David van Balen, investigate their expressiveness and performance by implementing four challenging benchmarks: N-body simulation, MultiGrid, Quickhull, and Flash Attention. These benchmarks cover various application domains and parallel computational models.\n\nThe paper argues that functional array code is more concise and understandable than hand-optimized implementations, as it abstracts away architecture-specific details. This allows the language implementations to generate both multicore and GPU executables from a single source code base. The authors propose that functional array code is more easily ported to and optimized for new parallel architectures compared to conventional implementations.\n\nThe performance of the five languages is evaluated on a 32-core AMD EPYC 7313 multicore system and an NVIDIA A30 GPU across 39 benchmark instances. The paper delves into the reasons behind each language's performance, highlighting both successes and shortcomings. The overall conclusion is that mature functional array languages have the potential to achieve performance levels competitive with the best conventional techniques for numerical computation.\n",
    "chinese_title": "并行函数式数组语言比较：编程与性能",
    "chinese_summary": "并行函数式数组语言比较：编程与性能\n\n本文《并行函数式数组语言比较：编程与性能》系统地比较了五种并行函数式数组语言：Accelerate、APL、DaCe、Futhark 和 SaC。由 David van Balen 领导的作者们通过实现四个具有挑战性的基准测试：N体模拟、多重网格、Quickhull 和 Flash Attention，来研究它们的表达能力和性能。这些基准测试涵盖了各种应用领域和并行计算模型。\n\n该论文认为，函数式数组代码比手工优化的实现更简洁易懂，因为它抽象掉了特定于架构的细节。这使得语言实现能够从单个源代码库生成多核和 GPU 可执行文件。作者们认为，与传统的实现相比，函数式数组代码更容易移植到新的并行架构并为其优化。\n\n这五种语言的性能在一个 32 核 AMD EPYC 7313 多核系统和一个 NVIDIA A30 GPU 上，对 39 个基准测试实例进行了评估。该论文深入研究了每种语言性能背后的原因，突出了成功之处和不足之处。总体结论是，成熟的函数式数组语言有潜力达到与数值计算领域最佳传统技术相媲美的性能水平。"
  },
  {
    "id": "44010684",
    "title": "The Connoisseur of Desire",
    "url": "https://www.nybooks.com/articles/2025/05/29/the-connoisseur-of-desire-the-annotated-great-gatsby/",
    "summary": "This article, \"The Connoisseur of Desire,\" explores F. Scott Fitzgerald's fascination with the complexities of desire and its unfulfillment, particularly in the context of early 20th-century America's restrictive social norms surrounding sexuality. It argues that Fitzgerald's genius lies in his ability to capture the \"sweet torment of 'nothing further,'\" the delicious anticipation and subsequent disappointment that permeates human relationships and aspirations.\n\nThe article traces this theme through Fitzgerald's early works, highlighting his depictions of tentative kisses and mismatched desires among young, often wealthy, characters. It then focuses on *The Great Gatsby*, analyzing it as an \"intensely erotic book\" that transcends mere romantic longing to encompass a universal yearning for something perpetually out of reach. Gatsby's idealized vision of Daisy and his pursuit of a past that can never be perfectly recreated exemplify this theme.\n\nThe author emphasizes the role of anticipation in Fitzgerald's writing, arguing that the \"electric shock of desire is always strongest just before the circuit is closed.\" This is evident in Gatsby's reverence for the moment before his first kiss with Daisy and in Fitzgerald's overall focus on the \"becoming\" rather than the \"being.\" Ultimately, the article suggests that Fitzgerald's work reflects a deep-seated dread of endings and a longing to recapture the iridescence of beginnings, a sentiment he often attempted to achieve through alcohol.\n",
    "chinese_title": "欲望鉴赏家",
    "chinese_summary": "欲望鉴赏家：菲茨杰拉德对欲望复杂性及未满足感的探索，尤其是在20世纪初美国对性压抑的社会规范背景下。文章认为，菲茨杰拉德的天才之处在于他捕捉到了“甜蜜的折磨，再无他求”，即那种令人陶醉的期待以及随之而来的失望，这种感觉渗透在人际关系和渴望之中。\n\n文章追溯了菲茨杰拉德早期作品中的这一主题，突出了他对年轻（通常是富有的）人物之间试探性的亲吻和不匹配的欲望的描写。然后，文章重点分析了《了不起的盖茨比》，认为它是一本“极具情色意味的书”，超越了单纯的浪漫渴望，涵盖了对永远无法企及之物的普遍渴望。盖茨比对黛西的理想化愿景以及他对永远无法完美重现的过去的追求，都体现了这一主题。\n\n作者强调了期待在菲茨杰拉德写作中的作用，认为“欲望的电击在电路闭合之前总是最强烈的。”这在盖茨比对与黛西初吻前那一刻的敬畏，以及菲茨杰拉德对“变成”而非“存在”的总体关注中显而易见。最终，文章表明，菲茨杰拉德的作品反映了一种对结局的根深蒂固的恐惧以及对重拾开端光彩的渴望，他经常试图通过酒精来实现这种情感。"
  },
  {
    "id": "44029631",
    "title": "Police monitored New Orleans with facial recognition cameras",
    "url": "https://www.washingtonpost.com/business/2025/05/19/live-facial-recognition-police-new-orleans/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "警察使用面部识别摄像头监控新奥尔良。",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44030923",
    "title": "A Story About Jessica (2014)",
    "url": "https://harihareswara.net/posts/2024/a-story-about-jessica-by-swiftonsecurity/",
    "summary": "Sumana Harihareswara re-posts \"A Story About Jessica\" by cybersecurity expert SwiftOnSecurity to make it more accessible. The story, originally published in 2014, portrays a 17-year-old girl, Jessica, who struggles with technology and security due to lack of knowledge, resources, and support. Despite her efforts, she becomes a victim of a webcam hack, highlighting the vulnerabilities inherent in general-purpose computing for average users.\n\nSwiftOnSecurity's intent was to highlight that victim-blaming is unhelpful and the issue lies with the design of the digital world itself. Harihareswara emphasizes that tech experts often shame victims of cybercrime instead of addressing the systemic failures that make them vulnerable. She argues that a more compassionate approach is needed, especially as scammers often exploit this dynamic by offering user-friendly but ineffective solutions.\n\nHarihareswara connects \"A Story About Jessica\" to the idea of \"freedom\" in free software, referencing Luis Villa's call to focus on liberating people, not just code. She draws parallels to other empathy-evoking fictional characters, like Mark Pilgrim's accessibility composites, highlighting the need for technologists to consider the needs and limitations of diverse users. The overall message advocates for technologists to take responsibility for creating a more secure and accessible digital world for everyone.\n",
    "chinese_title": "杰西卡的故事 (2014)",
    "chinese_summary": "Sumana Harihareswara 转发网络安全专家 SwiftOnSecurity 的文章《关于杰西卡的故事》，以使其更容易被访问。这个故事最初发表于 2014 年，讲述了一个 17 岁的女孩杰西卡，由于缺乏知识、资源和支持，在技术和安全方面遇到的困难。尽管她努力尝试，她还是成为了网络摄像头黑客的受害者，突显了通用计算对普通用户而言固有的脆弱性。\n\nSwiftOnSecurity 的意图是强调指责受害者毫无帮助，问题在于数字世界本身的设计。Harihareswara 强调，技术专家经常羞辱网络犯罪的受害者，而不是解决导致他们变得脆弱的系统性失败。她认为，需要一种更富有同情心的方法，尤其是在诈骗者经常利用这种动态，提供用户友好但无效的解决方案时。\n\nHarihareswara 将《关于杰西卡的故事》与自由软件中的“自由”概念联系起来，引用了 Luis Villa 呼吁关注解放人，而不仅仅是代码。她将此与其它能引发同情心的虚构人物进行对比，例如 Mark Pilgrim 的无障碍设计综合体，强调技术人员需要考虑不同用户的需求和局限性。总的来说，信息倡导技术人员有责任为每个人创造一个更安全和更容易访问的数字世界。"
  },
  {
    "id": "44023144",
    "title": "Show HN: Vaev – A browser engine built from scratch (It renders google.com)",
    "url": "https://github.com/skift-org/vaev",
    "summary": "Vaev is a new, experimental web browser engine built from scratch that renders Google.com. It supports a subset of web standards, including most display types (excluding grid), standard CSS cascade behavior, pagination, print-to-PDF, all CSS units, HTML/XHTML loading, and basic HTTP/file networking. The project provides a compatibility/feature tracking page.\n\nTo try Vaev, the project requires specific dependencies including LLVM 20, which may necessitate using a package manager like `yay`. The setup involves cloning the GitHub repository, installing `cutekit`, and running the browser on a local file (e.g., `file.html`). The architecture of the engine is visualized in a `tldraw` diagram. The project is being developed by Lou, LuneMercier, Paulo Medeiros, and Sleepy Monax.\n",
    "chinese_title": "Show HN: Vaev – 从零开始构建的浏览器引擎 (它可以渲染 google.com)",
    "chinese_summary": "Vaev 是一款全新的、实验性的 web 浏览器引擎，从零开始构建，可以渲染 Google.com。它支持部分 web 标准，包括大多数显示类型（不包括 grid）、标准 CSS 层叠行为、分页、打印到 PDF、所有 CSS 单位、HTML/XHTML 加载以及基本的 HTTP/文件网络。该项目提供一个兼容性/功能跟踪页面。\n\n要尝试 Vaev，该项目需要特定的依赖项，包括 LLVM 20，这可能需要使用诸如 `yay` 之类的包管理器。安装过程包括克隆 GitHub 仓库，安装 `cutekit`，然后在本地文件上运行浏览器（例如，`file.html`）。引擎的架构在一个 `tldraw` 图表中可视化。该项目由 Lou, LuneMercier, Paulo Medeiros, 和 Sleepy Monax 开发。"
  },
  {
    "id": "44024055",
    "title": "Show HN: Python Simulator of David Deutsch’s “Constructor Theory of Time”",
    "url": "https://github.com/gvelesandro/constructor-theory-simulator",
    "summary": "This \"Show HN\" post introduces `constructor-theory-simulator`, a Python implementation of David Deutsch's Constructor Theory framework. The simulator allows users to explore core concepts like Tasks, Constructors, Substrates, and Attributes in code. It features irreversible and quantum tasks with branching, timers, and continuous dynamics including gravity and electromagnetism. A key highlight is the \"Universal Constructor,\" capable of self-replication by bootstrapping itself from a list of Tasks.\n\nThe simulator includes modules for gravitational two-body interaction, Coulomb coupling, Lorentz force, and models photon and graviton emission/absorption. Pre-built constructors for the hydrogen atom are also provided.\n\nThe project encourages contributions in the form of new constructors (chemical reactions, friction), improved documentation, and new demos. It's designed as an educational resource and proof-of-concept, inspired by Deutsch and Marletto's work, specifically their (fictional) 2025 paper \"Constructor Theory of Time\". The code is available on GitHub under the MIT license. Users can install the simulator, run unit tests and demos, and even visualize branching with an ASCII visualizer. A usage example demonstrating photon emission and absorption is included.\n",
    "chinese_title": "Show HN: 大卫·多伊奇“时间构造论”的Python模拟器",
    "chinese_summary": "这个“Show HN”帖子介绍了`constructor-theory-simulator`，一个 David Deutsch 构造论框架的 Python 实现。该模拟器允许用户在代码中探索核心概念，如任务、构造器、基质和属性。它具有不可逆和量子任务，包括分支、计时器以及包含引力和电磁学的连续动力学。一个关键亮点是“通用构造器”，它能够通过从任务列表中引导自身来实现自我复制。\n\n该模拟器包括引力二体相互作用、库仑耦合、洛伦兹力以及光子和引力子发射/吸收的模型模块。还提供了氢原子的预构建构造器。\n\n该项目鼓励以新构造器（化学反应、摩擦）、改进的文档和新的演示的形式进行贡献。它被设计为一种教育资源和概念验证，灵感来自 Deutsch 和 Marletto 的工作，特别是他们（虚构的）2025 年论文《时间构造论》。代码在 GitHub 上以 MIT 许可证提供。用户可以安装模拟器、运行单元测试和演示，甚至可以使用 ASCII 可视化工具来可视化分支。包含了一个演示光子发射和吸收的用法示例。"
  },
  {
    "id": "44020734",
    "title": "Show HN: Hardtime.nvim – break bad habits and master Vim motions",
    "url": "https://github.com/m4xshen/hardtime.nvim",
    "summary": "Hardtime.nvim is a Neovim plugin designed to help users break bad Vim habits and master efficient Vim motions. It achieves this by:\n\n*   **Restricting repeated keys:** Blocking or providing hints when certain keys (like arrow keys) are pressed repeatedly within a short time.\n*   **Providing hints:** Suggesting more efficient Vim motions for common actions.\n*   **Generating reports:** Tracking and displaying the user's most common inefficient key presses.\n\nThe plugin encourages users to adopt more advanced Vim motions like relative jumps, word motions (w, b, e), find motions (f, t), operator + motion combinations, bracket jumping (%), and CTRL-U/D/B/F for navigation.\n\nInstallation is straightforward using a package manager like lazy.nvim. The plugin is enabled by default and can be toggled via commands. Users can configure the plugin with options like:\n\n*   `max_time` and `max_count`: for key repetition blocking.\n*   `disable_mouse`, `hint`, and `notification`: controlling features.\n*   `disabled_keys` and `disabled_filetypes`: specifying keys/filetypes to ignore.\n*   `hints`: Customizing the motion hints displayed.\n\nThe `Hardtime report` command shows frequently triggered hints, and a log file stores detailed information. The plugin supports customizing the notification system and even forcing exit from Insert mode after a period of inactivity.\n",
    "chinese_title": "展示HN：Hardtime.nvim – 戒除坏习惯，精通Vim移动",
    "chinese_summary": "Hardtime.nvim 是一个 Neovim 插件，旨在帮助用户改掉不良 Vim 习惯并掌握高效的 Vim 移动技巧。它通过以下方式实现：\n\n*   **限制重复按键：** 在短时间内重复按下某些键（如方向键）时，进行阻止或提供提示。\n*   **提供提示：** 为常见操作建议更高效的 Vim 移动方式。\n*   **生成报告：** 追踪并显示用户最常使用的低效按键操作。\n\n该插件鼓励用户采用更高级的 Vim 移动方式，如相对跳转、单词移动（w, b, e）、查找移动（f, t）、操作符 + 移动组合、括号跳转（%）以及 CTRL-U/D/B/F 用于导航。\n\n使用 lazy.nvim 等包管理器可以轻松安装。该插件默认启用，可以通过命令切换。用户可以使用以下选项配置插件：\n\n*   `max_time` 和 `max_count`: 用于按键重复阻止。\n*   `disable_mouse`, `hint`, 和 `notification`: 控制各项功能。\n*   `disabled_keys` 和 `disabled_filetypes`: 指定要忽略的键/文件类型。\n*   `hints`: 自定义显示的移动提示。\n\n`Hardtime report` 命令会显示频繁触发的提示，并且日志文件会存储详细信息。该插件支持自定义通知系统，甚至可以在一段时间不活动后强制退出插入模式。"
  },
  {
    "id": "44022353",
    "title": "Show HN: I modeled the Voynich Manuscript with SBERT to test for structure",
    "url": "https://github.com/brianmg/voynich-nlp-analysis",
    "summary": "This project explores the Voynich Manuscript's structure using NLP techniques, specifically multilingual SBERT embeddings, without attempting translation. The author aims to determine if the manuscript exhibits language-like behavior through clustering, POS inference, Markov transitions, and section-specific pattern analysis.\n\nA crucial preprocessing step involves stripping recurring suffix-like endings from Voynich words to isolate root forms, which improved clustering. This decision, however, may have introduced bias.\n\nKey findings include the identification of function-word-like and content-word-like clusters, a structured transition matrix indicating non-random organization, and variations in cluster usage across different manuscript sections (Botanical, Biological, etc.). Based on these findings, the author hypothesizes that the manuscript encodes a structured language (possibly constructed or mnemonic) using syllabic padding and positional repetition, showing syntax, function/content separation, and section-aware linguistic shifts.\n\nThe project provides a reproducible pipeline using Python scripts for clustering, mapping lines to clusters, POS modeling, transition matrix generation, and lexicon building. Limitations include indirect cluster-to-word mappings, the heuristic nature of suffix stripping, and the absence of semantic translation. The author emphasizes this work as a structured analysis and welcomes contributions, especially from experts in linguistics, cryptography, and computational language.\n",
    "chinese_title": "展示HN：我用SBERT建模伏尼契手稿，以测试其结构",
    "chinese_summary": "本项目运用自然语言处理技术，特别是多语言SBERT嵌入，探索伏尼契手稿的结构，但不尝试翻译。作者旨在通过聚类、词性推断、马尔可夫转移以及特定章节的模式分析，来确定该手稿是否表现出类似语言的行为。\n\n一个关键的预处理步骤是从伏尼契词汇中去除重复出现的类似后缀的结尾，以分离词根，这改善了聚类效果。然而，这一决定可能引入了偏差。\n\n主要发现包括识别出类似功能词和类似内容词的聚类，表明非随机组织的结构化转移矩阵，以及不同手稿章节（植物学、生物学等）中聚类使用的变化。基于这些发现，作者推测该手稿使用音节填充和位置重复编码了一种结构化的语言（可能是构建的或助记的），显示出语法、功能/内容分离以及章节感知的语言变化。\n\n该项目提供了一个可重现的流程，使用Python脚本进行聚类、将行映射到聚类、词性建模、转移矩阵生成和词典构建。局限性包括间接的聚类到词汇的映射、后缀剥离的启发式性质以及缺乏语义翻译。作者强调这项工作是一种结构化分析，并欢迎贡献，特别是来自语言学、密码学和计算语言学领域的专家。"
  },
  {
    "id": "44028767",
    "title": "Understanding D-Bus (2016) [pdf]",
    "url": "https://bootlin.com/pub/conferences/2016/meetup/dbus/josserand-dbus-meetup.pdf",
    "summary": "This document, titled \"Understanding D-Bus (2016)\", is a PDF file. Unfortunately, the PDF content is encoded and not easily readable directly as text. Examining the available data, we can identify it as a PDF 1.5 document containing compressed data (FlateDecode and DCTDecode filters used). The document contains a logo (referencing a file named \"logo-square.pdf\") as an XObject, indicating some graphical element. The file also contains a large embedded image (3946x2960 pixels), likely a core visual element of the document. Due to the encoding of the PDF content itself, determining the specific concepts and details related to D-Bus described in the article is impossible without further tools for extracting and decoding text and graphics from the PDF file. However, based on the file metadata, it is related to the D-Bus interprocess communication system.\n",
    "chinese_title": "理解 D-Bus (2016) [pdf]",
    "chinese_summary": "这份题为“理解D-Bus (2016)”的文档是一个PDF文件。遗憾的是，该PDF内容经过编码，无法直接作为文本轻松阅读。通过检查现有数据，我们可以确定它是一个包含压缩数据（使用了FlateDecode和DCTDecode过滤器）的PDF 1.5文档。文档包含一个作为XObject的logo（引用名为“logo-square.pdf”的文件），表明存在一些图形元素。该文件还包含一个大型嵌入图像（3946x2960像素），很可能是文档的核心视觉元素。由于PDF内容本身的编码问题，如果没有其他工具来提取和解码PDF文件中的文本和图形，就无法确定文章中描述的与D-Bus相关的具体概念和细节。但是，根据文件元数据，它与D-Bus进程间通信系统有关。"
  },
  {
    "id": "44022484",
    "title": "Emergent social conventions and collective bias in LLM populations",
    "url": "https://www.science.org/doi/10.1126/sciadv.adu9368",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "LLM群体中涌现的社会习俗和集体偏见",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44022265",
    "title": "Show HN: Buckaroo – Data table UI for Notebooks",
    "url": "https://github.com/paddymul/buckaroo",
    "summary": "Buckaroo is presented as a modern, performant data table UI for Jupyter notebooks designed to expedite exploratory data analysis. It addresses the limitations of standard Pandas tooling for visualizing raw data. Key features include a sortable, infinitely scrolling table with value formatting, summary statistics, histograms, smart sampling, and autocleaning capabilities accessible through a low-code UI.\n\nBuckaroo integrates directly into Jupyter environments, becoming the default display for Pandas and Polars DataFrames after a simple `pip install` and import. It's compatible with various Jupyter environments (Lab, Notebook, Marimo, VS Code, Colab, Lite) and DataFrame libraries (Pandas, Polars, Geopandas - deprecated).\n\nThe tool boasts high performance through AG-Grid integration, fixed-width formatting for numeric columns, and offers column-specific histograms and extensible summary statistics. Buckaroo emphasizes extensibility, allowing users to customize summary stats and add post-processing or custom styling methods.  The autocleaning feature, still in beta, automatically identifies and corrects common data errors. Extensive documentation, example notebooks, and video tutorials are available to help users learn and customize Buckaroo. The project welcomes contributions and issue reports.\n",
    "chinese_title": "Show HN: Buckaroo – 笔记本的数据表格UI",
    "chinese_summary": "Buckaroo 是一款现代、高性能的 Jupyter Notebook 数据表格 UI，旨在加速探索性数据分析。它解决了标准 Pandas 工具在可视化原始数据方面的局限性。其主要功能包括可排序、无限滚动的数据表，并具有数值格式化、汇总统计、直方图、智能抽样和自动清洗功能，这些功能可以通过低代码 UI 访问。\n\nBuckaroo 直接集成到 Jupyter 环境中，在简单地 `pip install` 和导入后，成为 Pandas 和 Polars DataFrames 的默认显示。它与各种 Jupyter 环境（Lab、Notebook、Marimo、VS Code、Colab、Lite）和 DataFrame 库（Pandas、Polars、Geopandas - 已弃用）兼容。\n\n该工具通过 AG-Grid 集成、数字列的固定宽度格式以及列特定的直方图和可扩展的汇总统计数据，实现了高性能。Buckaroo 强调可扩展性，允许用户自定义汇总统计数据并添加后处理或自定义样式方法。自动清洗功能（仍在 beta 测试阶段）可自动识别和纠正常见的数据错误。用户可以通过丰富的文档、示例 Notebook 和视频教程来学习和自定义 Buckaroo。该项目欢迎贡献和问题报告。"
  },
  {
    "id": "44030505",
    "title": "Remembering the ISP that David Bowie ran for 8 years",
    "url": "https://hackaday.com/2025/05/19/remembering-the-isp-that-david-bowie-ran-for-eight-years/",
    "summary": "David Bowie, beyond his iconic music career, was an early internet entrepreneur who launched his own ISP, BowieNet, in 1998. Recognizing the internet's potential to connect with fans and deliver exclusive content, BowieNet offered dial-up internet access, email addresses, and web hosting, initially priced at $19.95/month in the US and £10/month in the UK.\n\nBowieNet was more than just an ISP; it was a platform for delivering exclusive Bowie content. Subscribers gained access to chatrooms where Bowie himself often participated, offering insights into his music and answering fan questions. The service also included exclusive tracks, early ticket access, and the interactive BowieWorld environment. Content on davidbowie.com was even gated, requiring non-BowieNet users to pay a fee for access, a move that drew some criticism.\n\nWhile innovative for its time, BowieNet relied on now-outdated technologies like RealAudio and Flash, recommending a 56K modem for optimal use. New features were continually added, including e-cards and blogs. Despite reaching a peak of 100,000 subscribers, BowieNet's full-package experience proved unsustainable. In May 2006, the ISP was shut down, evolving into a website and fanclub. By 2012, even that iteration was revamped into a standard artist website.\n\nUltimately, BowieNet was an experiment in artist-driven internet services, showcasing Bowie's forward-thinking approach to engaging with fans. While the ISP element proved less critical, the service demonstrated the power of exclusive content and direct artist-fan interaction, paving the way for modern artist-centric online platforms.\n",
    "chinese_title": "纪念大卫·鲍伊经营了8年的ISP",
    "chinese_summary": "大卫·鲍威除了标志性的音乐生涯外，还是一位早期的互联网企业家，于1998年推出了自己的ISP，BowieNet。 他认识到互联网连接粉丝和传递独家内容的潜力，BowieNet提供拨号上网、电子邮件地址和网站托管服务，最初在美国的定价为每月19.95美元，在英国为每月10英镑。\n\nBowieNet不仅仅是一个ISP，它还是一个传递独家鲍威内容的平台。 订阅者可以访问聊天室，鲍威本人经常参与其中，提供对其音乐的见解并回答粉丝的问题。 该服务还包括独家曲目、提前购票机会和互动式BowieWorld环境。 davidbowie.com上的内容甚至被限制访问，非BowieNet用户需要付费才能访问，这一举动引来了一些批评。\n\n尽管BowieNet在当时具有创新性，但它依赖于现在已经过时的技术，如RealAudio和Flash，并建议使用56K调制解调器以获得最佳使用效果。 新功能不断添加，包括电子贺卡和博客。 尽管BowieNet的订阅用户达到顶峰时的10万，但其全套体验被证明是不可持续的。 2006年5月，该ISP被关闭，演变为一个网站和粉丝俱乐部。 到2012年，即使是这一版本也被改版成了一个标准的艺术家网站。\n\n最终，BowieNet是一项艺术家驱动的互联网服务实验，展示了鲍威在与粉丝互动方面的具有前瞻性的方法。 虽然ISP元素的重要性有所降低，但该服务展示了独家内容和直接的艺术家与粉丝互动所具有的力量，为现代以艺术家为中心的在线平台铺平了道路。"
  },
  {
    "id": "44020975",
    "title": "How the Sun Enterprise 10000 was born (2007)",
    "url": "https://www.filibeto.org/aduritz/truetrue/e10000/how-e10k-wasborn.html",
    "summary": "The Sun Enterprise 10000, also known as Starfire, was born from a group of engineers who left established corporations to build massively parallel computers with Sparc processors. This team, facing a challenging market, went through several acquisitions, eventually landing within Cray Research as the Business Systems Division located in Beaverton, Oregon.\n\nUnder Cray's ownership, they developed the CS6400 (SuperDragon), a 64-processor Sparc-based machine with features like Dynamic System Domains and Alternate Pathing, which allowed for dynamic partitioning and I/O virtualization.  The CS6400 ran Solaris, and a relationship with Sun Microsystems developed.\n\nWhen SGI acquired Cray, they deemed the Sparc-focused division incompatible with their technology roadmap and sold it to Sun Microsystems for $50 million.  Sun, impressed with the engineers' work and the near-completed Starfire, acquired the division.\n\nSun completed development on the Starfire, leveraging its vast marketing resources to make it a success. The Enterprise 10000 was an improved version of the CS6400, offering easier and more reliable Dynamic Reconfiguration and faster hardware using Sun's UPA architecture. It was praised for its scalability and high-performance interconnect.\n\nScott McNealy considered the acquisition of the Enterprise 10000 team one of Sun's best deals. The division generated billions in revenue for Sun in its first year. The purchase allowed Sun to extend its presence in enterprise-class server solutions.\n",
    "chinese_title": "Sun Enterprise 10000 的诞生 (2007)",
    "chinese_summary": "Sun Enterprise 10000（又名 Starfire）源自一群离开老牌公司、致力于构建基于 Sparc 处理器的海量并行计算机的工程师。这支团队面临充满挑战的市场，经历了多次收购，最终以业务系统部门的身份落户于位于俄勒冈州比弗顿的 Cray Research 公司。\n\n在 Cray 的所有权下，他们开发了 CS6400（SuperDragon），这是一款基于 Sparc 的 64 处理器机器，具有动态系统域和备用路径等功能，可实现动态分区和 I/O 虚拟化。 CS6400 运行 Solaris，并与 Sun Microsystems 建立了合作关系。\n\n当 SGI 收购 Cray 时，他们认为这个专注于 Sparc 的部门与其技术路线图不兼容，并以 5000 万美元的价格将其出售给 Sun Microsystems。 Sun 对这些工程师的工作以及接近完成的 Starfire 印象深刻，遂收购了该部门。\n\nSun 完成了 Starfire 的开发，并利用其庞大的营销资源使其获得成功。 Enterprise 10000 是 CS6400 的改进版本，它提供了更简单、更可靠的动态重配置，并使用 Sun 的 UPA 架构实现了更快的硬件。 它以其可扩展性和高性能互连而备受赞誉。\n\nScott McNealy 认为收购 Enterprise 10000 团队是 Sun 最划算的交易之一。 该部门在 Sun 的第一年就创造了数十亿美元的收入。 这次收购使 Sun 能够扩展其在企业级服务器解决方案中的影响力。"
  },
  {
    "id": "44018886",
    "title": "Show HN: Chat with 19 years of HN",
    "url": "https://app.camelai.com/log-in?next=/hn/",
    "summary": "This \"Show HN\" post introduces camelAI, a tool that allows users to chat with data from the past 19 years of Hacker News (HN). The post is extremely minimal, consisting of a title, the name \"camelAI,\" and a login prompt that offers users the option to continue with Google or agree to the privacy policy and terms of service by clicking \"Continue.\" In essence, it's a basic advertisement for a tool offering searchable access to a vast archive of Hacker News discussions.\n",
    "chinese_title": "展示HN：与19年的HN聊天",
    "chinese_summary": "此“Show HN”帖子介绍了camelAI，一款让用户可以和过去19年Hacker News (HN) 数据聊天的工具。帖子极其简洁，仅包含标题、名称“camelAI”和一个登录提示，用户可以选择通过Google继续，或点击“继续”来同意隐私政策和服务条款。本质上，这是一个对提供可搜索访问Hacker News大量讨论记录的工具所做的基本广告。"
  },
  {
    "id": "44030354",
    "title": "We Need Lisp Machines",
    "url": "https://fultonsramblings.substack.com/p/why-we-need-lisp-machines",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "我们需要 Lisp 机器",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44030337",
    "title": "Still booting after all these years: The people using ancient Windows computers",
    "url": "https://www.bbc.com/future/article/20250516-the-people-stuck-using-ancient-windows-computers",
    "summary": "Thomas Germain's article explores the surprising prevalence of ancient Windows computers in various sectors, highlighting how Microsoft's enduring legacy results in outdated systems powering critical infrastructure. Despite advancements, many ATMs, trains, and specialized hardware still rely on operating systems like Windows XP and even older versions like Windows 3.11 and MS-DOS.\n\nThe persistence of these systems is attributed to factors like cost-effectiveness, regulatory compliance, hardware compatibility issues, and the reliability of older software integrated into existing infrastructure. Upgrading can be prohibitively expensive, leading organizations to stick with what works, even if it's decades old.\n\nThe article cites examples such as German railway systems, San Francisco's Muni Metro, and high-end printing businesses utilizing Windows 2000. The drawbacks include slow performance, complicated interfaces (like the VA's CPRS system running on MS-DOS), and potential cybersecurity risks. Deferred maintenance by organizations focusing on new features instead of updating existing systems also contributes.\n\nHowever, not all old computers are liabilities. Some, like those in the Electronic Literature Lab at Washington State University, serve as vital archives, preserving early digital art and literature that can only be fully experienced on their original platforms.\n\nThe article contrasts Microsoft's approach with Apple's, noting that Microsoft's focus on software licensing and longer support windows fostered wider adoption and integration, inadvertently leading to the widespread use of older Windows machines in various essential systems.\n",
    "chinese_title": "这么多年过去了还在启动：使用古老Windows电脑的人们",
    "chinese_summary": "托马斯·日耳曼的文章探讨了古老的Windows电脑在各个领域中令人惊讶的普遍性，强调了微软持久的遗产如何导致过时的系统为关键基础设施提供动力。 尽管技术不断进步，许多自动取款机、火车和专用硬件仍然依赖于Windows XP甚至更早的版本，如Windows 3.11和MS-DOS等操作系统。\n\n这些系统之所以能够持续存在，是由于成本效益、法规遵从、硬件兼容性问题以及集成到现有基础设施中的旧软件的可靠性等因素。升级的成本可能高得令人望而却步，导致各机构继续使用有效的系统，即使它已经存在了几十年。\n\n文章引用了德国铁路系统、旧金山湾区捷运系统（Muni Metro）和使用Windows 2000的高端印刷企业等例子。缺点包括性能缓慢、界面复杂（如退伍军人事务部的CPRS系统运行在MS-DOS上）以及潜在的网络安全风险。各机构专注于新功能而非更新现有系统而导致的延迟维护也是一个因素。\n\n然而，并非所有旧电脑都是负担。有些，例如华盛顿州立大学电子文学实验室中的那些电脑，充当着重要的档案，保存着只能在其原始平台上才能充分体验的早期数字艺术和文学作品。\n\n文章将微软的做法与苹果的做法进行了对比，指出微软专注于软件许可和更长的支持窗口，从而促进了更广泛的采用和集成，无意中导致了旧Windows机器在各种重要系统中的广泛使用。"
  },
  {
    "id": "44022758",
    "title": "$30 Homebrew Automated Blinds Opener (2024)",
    "url": "https://sifter.org/~simon/journal/20240718.html",
    "summary": "This blog post details Simon Funk's DIY project: a $30 automated blinds opener built mostly from spare parts. The goal was to create a slow, silent system to gradually open blinds in the morning. The design emphasizes simplicity and utilizes available components.\n\nKey components include a geared motor, a salvaged silicone motor mount, a magnetic angle encoder, two double-throw relays, and an ESP8266 microcontroller. The author 3D-printed custom mounts and a cuff to connect the motor to the blinds. The motor is powered by a USB power supply, and the relays control the motor's direction. Surgical tubing connects the motor shaft to the blinds wand.\n\nThe system uses the magnetic encoder to sense torque, allowing it to detect the closed position and prevent over-tightening. The author admits the magnetic encoder approach isn't ideal due to movement inconsistencies. He emphasizes the importance of torque feedback for safety and position control, using timing for intermediate positions.\n\nThe blinds opener is integrated into the author's home automation system, allowing control via a phone app and automatic opening/closing based on time of day. Despite some imperfections and the need for refinement, the project was completed in a weekend and achieved its primary goal of quiet, automated blinds control. The author seeks suggestions for alternative torque measurement methods.\n",
    "chinese_title": "30美元自制自动百叶窗开启器（2024）",
    "chinese_summary": "西蒙·方克的DIY项目：一个用废旧零件制作的30美元自动百叶窗开启器。其目标是创建一个缓慢、安静的系统，在早上逐渐打开百叶窗。该设计强调简单性并利用现有组件。\n\n主要组件包括一个齿轮电机、一个回收的硅胶电机座、一个磁性角度编码器、两个双掷继电器和一个ESP8266微控制器。作者3D打印了定制的支架和一个连接电机和百叶窗的套筒。电机由USB电源供电，继电器控制电机的方向。医用硅胶管将电机轴连接到百叶窗棒。\n\n该系统使用磁性编码器来感应扭矩，使其能够检测到关闭位置并防止过度拧紧。作者承认由于运动不一致，磁性编码器方法并不理想。他强调了扭矩反馈对于安全和位置控制的重要性，并使用计时来控制中间位置。\n\n百叶窗开启器已集成到作者的家庭自动化系统中，允许通过手机应用程序进行控制，并根据一天中的时间自动打开/关闭。尽管存在一些缺陷并且需要改进，但该项目在一个周末内完成，并实现了安静、自动控制百叶窗的主要目标。作者正在寻求替代扭矩测量方法的建议。"
  },
  {
    "id": "44022225",
    "title": "Spaced repetition memory system (2024)",
    "url": "https://notes.andymatuschak.org/Spaced_repetition_memory_system",
    "summary": "This article provides a comprehensive overview of spaced repetition memory systems (SRS), highlighting their use of the testing and spacing effects to efficiently memorize vast amounts of information. It emphasizes that SRS are not just for rote memorization, but can aid in conceptual understanding and be applied to broader tasks, such as programming attention and prompting application.\n\nThe article references Supermemo as the pioneering consumer system and discusses various implementations, ranging from traditional software like Anki and Mnemosyne to more unusual variations like Mnemonic Medium and Chessable. It also explores unusual applications and delves into properties of memory systems, including intake rates, schedule optimization, and grading methods.\n\nA significant portion of the article addresses barriers to adoption, noting that many undervalue memory's importance to creative work and find writing effective prompts challenging. It also tackles common objections, such as the perception that SRS are only relevant for rote learning or for material you don't care about. The author argues that SRS can facilitate deeper engagement by automating rote memorization and accelerating early stages of learning.\n\nFinally, the article touches on algorithms, the importance of emotional connection in review sessions, and the challenges of maintaining consistent practice. It concludes with references to further reading on the subject.\n",
    "chinese_title": "间隔重复记忆系统 (2024)",
    "chinese_summary": "本文全面概述了间隔重复记忆系统（SRS），重点介绍了它们如何利用测试效应和间隔效应来高效记忆大量信息。文章强调，SRS不仅仅用于死记硬背，还能帮助理解概念，并应用于更广泛的任务，例如编程注意力和提示应用。\n\n文章提到了Supermemo作为先驱消费者系统，并讨论了各种实现方式，从Anki和Mnemosyne等传统软件到Mnemonic Medium和Chessable等更不寻常的变体。它还探讨了不寻常的应用，并深入研究了记忆系统的特性，包括摄入率、计划优化和评分方法。\n\n文章的很大一部分探讨了采用的障碍，指出许多人低估了记忆对创造性工作的重要性，并发现编写有效的提示具有挑战性。它还解决了常见的反对意见，例如认为SRS仅与死记硬背或你不关心的材料相关。作者认为，SRS可以通过自动化死记硬背和加速学习的早期阶段来促进更深入的参与。\n\n最后，本文涉及了算法、回顾环节中情感联系的重要性以及维持持续练习的挑战。文章最后列出了关于该主题的进一步阅读材料。"
  },
  {
    "id": "44020626",
    "title": "Show HN: A web browser agent in your Chrome side panel",
    "url": "https://github.com/parsaghaffari/browserbee",
    "summary": "BrowserBee is an open-source Chrome extension that acts as an in-browser AI assistant, enabling users to control their web browser with natural language. It uses an LLM for instruction parsing and Playwright for robust browser automation. A key advantage is its privacy-first design: it operates within the browser, interacting with logged-in websites without requiring external backend infrastructure, making it suitable for personal use.\n\nKey features include support for major LLM providers (Anthropic, OpenAI, Gemini, Ollama), token usage tracking, a wide range of browser tools for interaction and understanding browser state, and a memory feature to save and reuse successful action sequences.  The agent also prompts for user approval before sensitive actions like purchases or social media posts.\n\nThe extension offers a comprehensive set of tools covering navigation, tab management, interaction (clicking, typing), observation (DOM snapshots, screenshots, text reading), mouse/keyboard actions, and memory management (saving, retrieving, deleting task sequences).\n\nUse cases range from social media management and news curation to personal assistance, research, and knowledge bookmarking. Installation is available via direct download/unzipping, building from source, or (soon) the Chrome Web Store.\n\nThe author highlights the benefits of running Playwright in the browser for streamlined automation, the \"reflect and learn\" memory pattern for improved agent performance, the challenge of processing complex web page data for LLMs, and the potential of privacy-first, open-source personal AI assistants.\n",
    "chinese_title": "Show HN: Chrome 侧边栏中的网页浏览器代理",
    "chinese_summary": "BrowserBee：一款隐私至上的浏览器内AI助手\n\nBrowserBee是一款开源 Chrome 扩展，充当浏览器内的 AI 助手，使用户能够通过自然语言控制他们的网络浏览器。它使用 LLM 进行指令解析，并使用 Playwright 进行强大的浏览器自动化。一个关键优势是其隐私优先的设计：它在浏览器内运行，与登录的网站交互，而无需外部后端基础设施，使其适合个人使用。\n\n主要功能包括支持主要的 LLM 提供商（Anthropic、OpenAI、Gemini、Ollama）、令牌使用情况跟踪、用于交互和理解浏览器状态的各种浏览器工具，以及用于保存和重用成功操作序列的记忆功能。该代理还在执行购买或社交媒体帖子等敏感操作之前提示用户批准。\n\n该扩展提供了一套全面的工具，涵盖导航、标签管理、交互（点击、输入）、观察（DOM快照、屏幕截图、文本阅读）、鼠标/键盘操作和内存管理（保存、检索、删除任务序列）。\n\n用例包括社交媒体管理和新闻策划到个人助理、研究和知识书签。 可以通过直接下载/解压缩、从源代码构建或（即将推出）Chrome 网上应用店进行安装。\n\n作者强调了在浏览器中运行 Playwright 以实现简化自动化的好处，“反思和学习”记忆模式以提高代理性能，LLM 处理复杂网页数据的挑战，以及隐私优先的开源个人 AI 助手的潜力。"
  },
  {
    "id": "44026170",
    "title": "Layers All the Way Down: The Untold Story of Shader Compilation",
    "url": "https://moonside.games/posts/layers-all-the-way-down/",
    "summary": "This article, \"Layers All the Way Down: The Untold Story of Shader Compilation,\" explains the complexities of shader compilation in cross-platform game development. The author, a co-maintainer of the FNA project, details the challenges of supporting diverse graphics APIs (Vulkan, Metal, D3D11, etc.) and their associated bytecode formats (SPIR-V, DXIL/DXBC, AIR).\n\nThe core argument is that shaders are more akin to content than code due to the extensive transformation and platform-specific compilation required. The shader compilation chain involves high-level source code being converted into bytecode, then transpiled (sometimes), compiled by the API frontend, compiled by the driver, and finally translated to the GPU's instruction set architecture (ISA).\n\nThe author criticizes the lack of standardization in shader ISAs and bytecode formats, attributing it to the vested interests of hardware and software vendors like Apple and Microsoft, who benefit from platform lock-in. While acknowledging the appeal of a portable high-level shader language, the author argues that it's unrealistic for a small open-source team to undertake such a massive task, especially when existing solutions like HLSL, coupled with tools like SPIRV-Cross, already offer a degree of portability.\n\nThe piece concludes that forcing a high-level language at the API level of the SDL GPU proposal would significantly delay the project and impose limitations on developer workflows, especially when the fundamental problem lies in the industry's lack of shader ISA standardization. The focus is on addressing fragmentation at the code calling level rather than attempting to solve the more complex problem of code generation.\n",
    "chinese_title": "层层递进：着色器编译的幕后故事",
    "chinese_summary": "层层递进：着色器编译不为人知的故事\n\n本文“层层递进：着色器编译不为人知的故事”解释了跨平台游戏开发中着色器编译的复杂性。作者作为FNA项目的共同维护者，详细介绍了支持各种图形API（Vulkan、Metal、D3D11等）及其相关字节码格式（SPIR-V、DXIL/DXBC、AIR）的挑战。\n\n核心观点是，由于需要大量的转换和平台特定的编译，着色器更像是内容而不是代码。着色器编译链涉及将高级源代码转换为字节码，然后进行转译（有时），由API前端编译，由驱动程序编译，最后转换为GPU的指令集架构（ISA）。\n\n作者批评了着色器ISA和字节码格式缺乏标准化，将其归因于苹果和微软等硬件和软件厂商的既得利益，他们受益于平台锁定。虽然承认可移植的高级着色器语言的吸引力，但作者认为，对于一个小型的开源团队来说，承担如此巨大的任务是不现实的，尤其是当像HLSL这样的现有解决方案，加上像SPIRV-Cross这样的工具，已经提供了一定程度的可移植性。\n\n文章总结说，在SDL GPU提案的API层面上强制使用高级语言会大大延迟项目，并限制开发人员的工作流程，特别是当根本问题在于业界缺乏着色器ISA标准化时。重点是解决代码调用层面的碎片化问题，而不是试图解决更复杂的代码生成问题。"
  },
  {
    "id": "43985513",
    "title": "Coding without a laptop: Two weeks with AR glasses and Linux on Android",
    "url": "https://holdtherobot.com/blog/2025/05/11/linux-on-android-with-ar-glasses/",
    "summary": "The author successfully coded for two weeks using only a smartphone, AR glasses, and a folding keyboard, seeking freedom from being tethered to a laptop. They achieved this by running a full desktop Linux environment (Void Linux with i3) within a chroot container on Android, leveraging Termux and X11 for a graphical interface.\n\nThe setup involved a used Pixel 8 Pro (necessary for DisplayPort Alt mode), Xreal Air 2 Pro glasses, and a Samers foldable keyboard, totaling around $636. This allowed for coding on the go in various locations, including outdoors in sunlight.\n\nKey benefits highlighted were portability, outdoor usability (due to glasses blocking glare), and the freedom of a cellular connection. Pain points included setting up the Linux environment, finding a tolerable folding keyboard, and the AR glasses' field of view being slightly too large.\n\nPerformance-wise, the Pixel 8 Pro performed faster than an older Thinkpad but slower than a modern Framework laptop when compiling Nim. Battery life was around 4-5 hours with glasses usage.\n\nDespite the challenges, the author intends to continue using the setup due to its portability and the freedom it provides. They see a future for ultra-mobile software development as AR glasses and Linux continue to improve, noting its cost-effectiveness compared to solutions like the Apple Vision Pro.\n",
    "chinese_title": "没有笔记本电脑的编码：使用AR眼镜和安卓上的Linux两周",
    "chinese_summary": "仅用智能手机、AR眼镜和折叠键盘编码两周：摆脱笔记本束缚的尝试\n\n作者仅使用智能手机、AR眼镜和折叠键盘成功编码两周，旨在摆脱笔记本电脑的束缚。他们通过在Android系统的chroot容器中运行完整的桌面Linux环境（Void Linux with i3），并利用Termux和X11实现图形界面，达成了这一目标。\n\n该设置包括一台二手Pixel 8 Pro（DisplayPort Alt模式的必要条件）、Xreal Air 2 Pro眼镜和Samers折叠键盘，总成本约为636美元。这使得他们可以在各种地点随时随地进行编码，包括在阳光下户外。\n\n主要优点包括便携性、户外可用性（由于眼镜阻挡眩光）以及蜂窝网络的自由。痛点包括设置Linux环境、找到可接受的折叠键盘以及AR眼镜的视野略微过大。\n\n在性能方面，Pixel 8 Pro在编译Nim时比旧款Thinkpad快，但比现代Framework笔记本慢。电池续航时间在使用眼镜的情况下约为4-5小时。\n\n尽管面临挑战，作者仍打算继续使用该设置，因为它具有便携性和提供的自由。他们看到了AR眼镜和Linux不断改进的背景下，超移动软件开发的未来，并指出其性价比高于Apple Vision Pro等解决方案。"
  },
  {
    "id": "44022215",
    "title": "What do wealthy people buy, that ordinary people know nothing about? (2015)",
    "url": "https://old.reddit.com/r/AskReddit/comments/2s9u0s/comment/cnnmca8/",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "富人买什么，而普通人一无所知？(2015)",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44003928",
    "title": "The Journal of Imaginary Research",
    "url": "https://journalofimaginaryresearch.home.blog/",
    "summary": "The Journal of Imaginary Research publishes fictional research abstracts, created by real academics, researchers, and students, aiming to inject creativity and fun into academic writing. Founded by Dr. Kay Guccione and Dr. Matthew Cheeseman, a new volume is released each November during Global Academic Writing Month. The journal originated from imaginative writing workshops designed to alleviate writing anxiety and foster creative communication of research. These workshops utilize visual prompts and creative writing techniques to help participants break free from the constraints of their actual research.\n\nThe project aims to demonstrate that creativity is inherent in all writers and researchers. The journal now welcomes submissions each November from anyone interested in exploring creative writing processes for enjoyment and scholarly reflection. Further submission details are announced on the journal's blog. The underlying pedagogy and origin story of the journal were presented by Kay Guccione at the Creative Experiment in the Classroom Conference in June 2020. The editors, Dr. Kay Guccione (Head of Researcher Development) and Dr. Matthew Cheeseman (Associate Professor in Creative Writing), champion the integration of creativity within the often rigorous demands of academic research and writing.\n",
    "chinese_title": "虚构研究期刊",
    "chinese_summary": "《虚构研究期刊》发表由真正的学者、研究人员和学生创作的虚构研究摘要，旨在为学术写作注入创造力和乐趣。该期刊由Kay Guccione博士和Matthew Cheeseman博士创立，每年11月全球学术写作月期间发布新刊。该期刊起源于旨在缓解写作焦虑和培养研究创造性沟通的想象性写作研讨会。这些研讨会利用视觉提示和创造性写作技巧，帮助参与者摆脱实际研究的束缚。\n\n该项目旨在证明创造力是所有作家和研究人员固有的。现在，该期刊欢迎每年11月任何有兴趣探索创造性写作过程，以获得乐趣和学术反思的人士投稿。更多投稿细节将在期刊博客上公布。Kay Guccione于2020年6月在课堂创意实验会议上介绍了该期刊的基础教学法和起源故事。编辑Kay Guccione博士（研究员发展负责人）和Matthew Cheeseman博士（创意写作副教授）倡导在通常严谨的学术研究和写作要求中融入创造力。"
  },
  {
    "id": "44031344",
    "title": "Microsoft Open Sources Copilot",
    "url": "https://code.visualstudio.com/blogs/2025/05/19/openSourceAIEditor",
    "summary": "In May 2025, the VS Code team announced they are open-sourcing the GitHub Copilot Chat extension, effectively transforming VS Code into an open-source AI editor. This decision is driven by advancements in large language models, the standardization of AI interaction UX, and the emergence of an open-source AI tooling ecosystem.\n\nThe motivations behind this move are multi-faceted: improved transparency regarding data collection, leveraging the community to enhance security against malicious actors, and enabling easier development, debugging, and testing for extension authors.\n\nThe immediate next steps involve open-sourcing the Copilot Chat extension code under the MIT license and refactoring relevant AI components into VS Code core, while maintaining performance, extensibility, and a good user interface. To facilitate community contributions to AI features, the team will also open-source their prompt test infrastructure.\n\nThe VS Code team believes this move will lead to a better product through open collaboration and a more diverse extension ecosystem, inviting the community to participate in shaping the future of development. They will provide updates on their iteration plan and FAQ, and are seeking community feedback.\n",
    "chinese_title": "微软开源Copilot",
    "chinese_summary": "2025年5月，VS Code团队宣布开源GitHub Copilot Chat扩展，从而有效地将VS Code转变为一个开源AI编辑器。这一决定是受到大型语言模型进步、AI交互用户体验标准化以及开源AI工具生态系统涌现的推动。\n\n此举背后的动机是多方面的：提高数据收集的透明度，利用社区力量增强针对恶意行为者的安全性，并为扩展作者提供更轻松的开发、调试和测试环境。\n\n接下来的首要步骤包括以MIT许可证开源Copilot Chat扩展代码，并将相关的AI组件重构到VS Code核心中，同时保持性能、可扩展性和良好的用户界面。为了促进社区对AI功能的贡献，该团队还将开源他们的prompt测试基础设施。\n\nVS Code团队相信，通过开放协作和更加多样化的扩展生态系统，此举将带来更好的产品，并邀请社区参与塑造开发的未来。他们将提供迭代计划和常见问题解答的更新，并征求社区的反馈意见。"
  },
  {
    "id": "44013322",
    "title": "Static Types Are for Perfectionists",
    "url": "https://mmapped.blog/posts/38-static-types-perfectionism",
    "summary": "In \"Static Types Are for Perfectionists,\" the author reflects on how childhood experiences and personal traits deeply influence technological preferences. He argues that his preference for statically typed languages, aversion to dependencies, and need to deeply understand systems stem from a desire to avoid mistakes and a tendency towards self-reliance, cultivated in his early years.\n\nThe author challenges the notion that technological choices are purely rational, suggesting they're often driven by emotional and psychological factors. He describes an \"authenticity spiral,\" where programmers move from intuitive understanding to imitating best practices, eventually returning to a more authentic style rooted in personal aesthetics.\n\nThe article advocates for accepting diverse technological preferences without judgment, acknowledging that differing approaches can all bring value. It emphasizes the importance of finding a work environment that aligns with one's personal style, as environment significantly impacts productivity and job satisfaction. The author concludes by encouraging self-awareness, embracing therapy, and exploring the connection between psychology and computer science.\n",
    "chinese_title": "静态类型是为完美主义者准备的。",
    "chinese_summary": "静态类型属于完美主义者：作者反思童年经历和个人特质如何深刻影响技术偏好。他认为自己偏爱静态类型语言、厌恶依赖以及需要深入理解系统的需求，都源于避免出错的渴望和早期培养的自力更生倾向。\n\n作者挑战了技术选择纯粹理性的观点，认为它们往往受到情感和心理因素的驱动。他描述了一个“真实性螺旋”，程序员从直觉理解到模仿最佳实践，最终回归到一种根植于个人美学的更真实风格。\n\n文章倡导接受多样化的技术偏好，不做评判，并承认不同的方法都能带来价值。它强调了找到与个人风格相符的工作环境的重要性，因为环境会显著影响生产力和工作满意度。作者最后鼓励自我意识、接受心理治疗，并探索心理学与计算机科学之间的联系。"
  },
  {
    "id": "44021883",
    "title": "Show HN: Model2vec-Rs – Fast Static Text Embeddings in Rust",
    "url": "https://github.com/MinishLab/model2vec-rs",
    "summary": "Model2vec-Rs is a Rust crate for generating static text embeddings, designed for speed and efficiency. It allows users to load pre-trained models and create embeddings directly within Rust, offering a performance advantage over the Python version. The Python `Model2Vec` package is recommended for model distillation and training, while this Rust crate excels in inference.\n\nThe crate offers a simple API, demonstrated through example code that shows how to add the crate, load a model (from Hugging Face Hub or a local path), and generate embeddings from a list of sentences, with options for customization like specifying max length and batch size. A CLI tool is also provided for generating embeddings from the command line, handling both single sentences and multiple lines from a file.\n\nSeveral pre-trained English and multilingual models are available, ranging in size and tailored for general or retrieval tasks. These models, named with the \"potion\" prefix, are based on the bge-base-en-v1.5 sentence transformer architecture (for English models) or LaBSE (for multilingual models).\n\nPerformance testing reveals that the Rust implementation is significantly faster, achieving roughly 1.7x the throughput compared to the Python version in a single-threaded CPU benchmark (8000 samples/second vs 4650 samples/second). The crate is released under the MIT license.\n",
    "chinese_title": "Show HN: Model2vec-Rs – Rust 语言实现的快速静态文本嵌入",
    "chinese_summary": "Model2vec-Rs 是一个 Rust crate，用于生成静态文本嵌入，其设计注重速度和效率。它允许用户加载预训练模型并直接在 Rust 中创建嵌入，从而提供比 Python 版本更高的性能优势。Python 的 `Model2Vec` 包推荐用于模型提炼和训练，而这个 Rust crate 则擅长推理。\n\n该 crate 提供了一个简单的 API，示例代码展示了如何添加 crate、加载模型（从 Hugging Face Hub 或本地路径）以及从句子列表中生成嵌入，并提供指定最大长度和批次大小等自定义选项。还提供了一个 CLI 工具，用于从命令行生成嵌入，处理单个句子和来自文件的多行文本。\n\n有几种预训练的英语和多语言模型可用，它们的大小各异，并针对通用或检索任务进行了定制。这些模型以“potion”为前缀命名，基于 bge-base-en-v1.5 句子转换器架构（对于英语模型）或 LaBSE（对于多语言模型）。\n\n性能测试表明，Rust 实现的速度明显更快，在单线程 CPU 基准测试中，吞吐量大约是 Python 版本的 1.7 倍（8000 个样本/秒 vs 4650 个样本/秒）。该 crate 在 MIT 许可下发布。"
  },
  {
    "id": "43990262",
    "title": "How the humble chestnut traced the rise and fall of the Roman Empire",
    "url": "https://www.bbc.com/future/article/20250513-what-chestnuts-reveal-about-the-roman-empire",
    "summary": "This article explores how the spread of sweet chestnut trees across Europe traces the rise and fall of the Roman Empire. Researchers, particularly in Switzerland, have found that the Romans, more interested in the fast-regrowing timber for construction than the fruit itself, actively cultivated and spread sweet chestnut trees throughout their empire. They also introduced coppicing techniques, contributing to the trees' flourishing across the continent.\n\nPollen records show a significant increase in chestnut pollen around 0 AD, coinciding with the peak of Roman power, followed by a temporary decline after the empire's collapse, suggesting the abandonment of Roman-era orchards. While the Romans were instrumental in spreading chestnuts on mainland Europe, research suggests they weren't responsible for their introduction to Britain.\n\nThe Romans valued the chestnut tree's ability to resprout quickly after being cut, providing a readily available source of wood for fortifications and other constructions. Local populations then adopted the trees, valuing the chestnuts as a food source, especially in mountainous regions. This resulted in a symbiosis where humans cultivated the trees, leading to their longevity and wider distribution, while benefiting from their fruits and wood. The chestnut tree's cultivation altered landscapes, displacing other tree species in areas like Ticino, Switzerland. Today, despite facing threats, the legacy of the Roman influence on chestnut cultivation is celebrated in many parts of Europe.\n",
    "chinese_title": "不起眼的栗子如何见证了罗马帝国的兴衰",
    "chinese_summary": "本文探讨了欧洲甜栗树的传播如何追溯到罗马帝国的兴衰。研究人员，特别是在瑞士的研究人员发现，罗马人更感兴趣的是用于建造的快速再生的木材，而不是果实本身，因此积极地在其帝国各地种植和传播甜栗树。他们还引入了萌芽更新技术，促进了栗树在整个欧洲大陆的繁荣。\n\n花粉记录显示，大约公元0年左右，栗树花粉显著增加，与罗马权力鼎盛时期相吻合，随后在帝国崩溃后出现暂时下降，这表明罗马时代的果园被废弃。虽然罗马人在欧洲大陆传播栗树方面发挥了重要作用，但研究表明，他们并没有将栗树引入英国。\n\n罗马人重视栗树在砍伐后能够迅速再生的能力，这为防御工事和其他建筑提供了随时可用的木材来源。随后，当地居民开始采用栗树，将栗子作为食物来源，尤其是在山区。这导致了一种共生关系，人类种植栗树，从而延长了它们的寿命并扩大了它们的分布范围，同时也受益于它们的果实和木材。栗树的种植改变了地貌，取代了瑞士提契诺等地区的其他树种。今天，尽管面临威胁，罗马对栗树种植的影响的遗产仍在欧洲许多地方得到庆祝。"
  },
  {
    "id": "43996770",
    "title": "The Tongue Is a Fire",
    "url": "https://www.lrb.co.uk/the-paper/v47/n09/ferdinand-mount/the-tongue-is-a-fire",
    "summary": "Ferdinand Mount's article, \"The Tongue Is a Fire,\" reviews Fara Dabhoiwala's \"What Is Free Speech? The History of a Dangerous Idea,\" exploring the historical development and modern relevance of free speech. Mount highlights the shift in free speech advocacy from the left to the right and the growing divergence between the United States' absolutist interpretation of free speech and the more balanced approach in other countries.\n\nDabhoiwala emphasizes the accidental and piecemeal nature of free speech's evolution, noting a lack of comprehensive historical study beyond American First Amendment focus. The article stresses the pre-modern understanding of the power and potential danger of speech, with strict policing and punishment for harmful words.\n\nThe transition to modern free speech concepts began in England during the Civil Wars, with debates on religious tolerance leading to broader acceptance of diverse viewpoints. Cato's letters in the early 18th century articulated an absolutist theory of free speech. Despite this, most European nations and even early American states qualified free speech with considerations of responsibility and potential harm.\n\nThe article argues that the First Amendment's absolutist interpretation in the US was largely an accident, influenced by specific historical circumstances and fear of government overreach. It emphasizes that for a long time, the US didn't strictly adhere to this interpretation, with states regulating speech until the Supreme Court intervened in the 20th century.\n",
    "chinese_title": "舌是火焰",
    "chinese_summary": "费迪南·芒特的文章《舌头是一团火》评论了法拉·达博伊瓦拉的《什么是言论自由？一个危险观念的历史》，探讨了言论自由的历史发展和现代意义。芒特强调了言论自由倡导从左派向右派的转变，以及美国对言论自由的绝对主义解读与其他国家更为平衡的方式之间的日益分歧。\n\n达博伊瓦拉强调了言论自由演变的偶然性和零散性，指出除了对美国宪法第一修正案的关注之外，缺乏全面的历史研究。文章强调了前现代社会对言论的力量和潜在危险的理解，对有害言论进行严格的监管和惩罚。\n\n现代言论自由概念的转变始于英国的内战时期，关于宗教宽容的辩论促成了对不同观点的更广泛接受。卡托书信在18世纪初阐述了一种绝对主义的言论自由理论。尽管如此，大多数欧洲国家甚至早期的美国各州都以责任和潜在危害为考量，对言论自由加以限制。\n\n文章认为，美国宪法第一修正案的绝对主义解读在很大程度上是一个意外，受到了特定历史环境和对政府权力过度扩张的恐惧的影响。文章强调，长期以来，美国并没有严格遵守这种解读，各州一直在规范言论，直到20世纪最高法院介入。"
  },
  {
    "id": "44030683",
    "title": "Musk brought ' biggest supercomputer'. Residents choking on pollution",
    "url": "https://www.cnn.com/2025/05/19/climate/xai-musk-memphis-turbines-pollution",
    "summary": "Elon Musk's xAI company built the \"world's largest supercomputer,\" Colossus, in an abandoned Memphis factory, promising jobs and tax revenue. However, residents of the nearby predominantly Black, low-income community of Boxtown fear increased pollution from the facility's gas-powered turbines.\n\nxAI is reportedly operating dozens of turbines without air permits, relying on a \"temporary\" exemption. These turbines release nitrogen oxides, formaldehyde, and particulate matter, worsening air quality in an area already burdened by 17 other polluting facilities and high rates of asthma. The Southern Environmental Law Center argues that xAI doesn't qualify for the permit exemption due to the size and pollution of the turbines.\n\nLocal lawmakers claim they were kept in the dark about the facility, raising concerns about power stability and environmental impact. While Memphis Mayor Paul Young touts the economic benefits, others see it as another instance of environmental injustice, exacerbated by relaxed pollution regulations under the Trump administration, who the article claims supports AI development..\n\nResidents and environmental groups have a history of fighting pollution in the area, successfully opposing a crude oil pipeline and closing a medical sterilizing facility. They fear xAI's expansion will perpetuate the use of their community as a \"sacrifice zone,\" and do not believe that any job creation will outweigh the costs to health.\n",
    "chinese_title": "马斯克带来“最大超级计算机”，居民饱受污染之苦。",
    "chinese_summary": "埃隆·马斯克的xAI公司在孟菲斯一处废弃工厂建造了“世界最大超级计算机”Colossus，承诺带来就业和税收。然而，附近以黑人为主的低收入社区Boxtown居民担心该设施的燃气涡轮机会加剧污染。\n\n据报道，xAI在没有空气许可证的情况下运营着数十台涡轮机，依赖于“临时”豁免。这些涡轮机释放氮氧化物、甲醛和颗粒物，使本已受到其他17个污染设施和高哮喘发病率困扰的地区的空气质量进一步恶化。南方环境法律中心认为，由于涡轮机的规模和污染程度，xAI不符合豁免许可的条件。\n\n当地立法者声称他们对该设施一无所知，对电力稳定性和环境影响表示担忧。虽然孟菲斯市长保罗·杨吹捧其经济效益，但其他人认为这是又一起环境不公正事件，特朗普政府放松污染管制加剧了这一问题，文章声称特朗普政府支持人工智能发展。\n\n当地居民和环保团体一直以来都在努力对抗该地区的污染，成功阻止了一条原油管道并关闭了一家医疗消毒设施。他们担心xAI的扩张将使他们的社区继续成为“牺牲区”，并且不相信任何就业机会都能抵消对健康的损害。"
  },
  {
    "id": "43994190",
    "title": "What Every Programmer Should Know About Enumerative Combinatorics",
    "url": "https://leetarxiv.substack.com/p/counting-integer-compositions",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "每个程序员应该知道的枚举组合学",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44021824",
    "title": "Building my childhood dream PC",
    "url": "https://fabiensanglard.net/2168/index.html",
    "summary": "Fabien Sanglard recounts his childhood dream of owning an IBM PS/1 2168, a desire born from the frustration of owning an underpowered PC in the 90s while witnessing the superior performance of the IBM machine owned by a neighbor. Years later, he decides to fulfill that dream by acquiring and restoring one.\n\nThe article details the author's appreciation for the IBM PS/1 2168's design, highlighting features like its mini-tower form factor with a handle, rounded corners, cleverly designed front panel, and the high-quality clicky Model M keyboard that often accompanied it. He also emphasizes the availability of extensive documentation and upgradability, which were rare for PCs at the time.\n\nSanglard describes the challenges he faced in finding a suitable 2168, specifically one that still booted and was a 33Mhz model. He eventually located a DX2-66Mhz version in Finland, complete with original boxes and manuals. After negotiating with the seller, he secured the unit and is now anticipating its arrival and unpacking, which will be the subject of the next installment in his series. The article serves as an introduction to his restoration project and details the nostalgic reasons behind it.\n",
    "chinese_title": "组装我的童年梦想电脑",
    "chinese_summary": "法比安·桑格拉德讲述了他儿时拥有IBM PS/1 2168的梦想，这个愿望源于90年代拥有一台性能不足的PC，同时目睹邻居的IBM机器展现出的卓越性能所带来的沮丧。多年后，他决定通过购买和修复一台来实现这个梦想。\n\n文章详细介绍了作者对IBM PS/1 2168设计的赞赏，突出了其带把手的小型塔式机箱、圆角、巧妙设计的前面板，以及经常配备的高品质清脆Model M键盘等特点。他还强调了当时个人电脑罕见的、广泛可用的文档和可升级性。\n\n桑格拉德描述了他在寻找合适的2168时遇到的挑战，特别是寻找一台仍然可以启动的33Mhz型号。他最终在芬兰找到了一台DX2-66Mhz版本，配备了原装盒子和手册。在与卖家谈判后，他成功获得了这台机器，现在正期待着它的到来和开箱，这将是他的系列文章下一期的主题。这篇文章是他修复项目的介绍，并详细说明了其背后的怀旧原因。"
  },
  {
    "id": "44009521",
    "title": "Breaking the Sound Barrier Part I: Fuzzing CoreAudio with Mach Messages",
    "url": "https://googleprojectzero.blogspot.com/?m=0",
    "summary": "Dillon Franke, a Senior Security Engineer at Google's Project Zero, details his exploration of using Mach IPC messages as an attack vector to find and exploit sandbox escapes in MacOS. He employed a \"knowledge-driven fuzzing\" approach, combining automated fuzzing with manual reverse engineering to target the coreaudiod system daemon.\n\nFranke explains the concept of Mach messages as the lowest-level IPC component in MacOS and their potential as a bridge from sandboxed to unrestricted processes. He chose coreaudiod and its com.apple.audio.audiohald service due to its complexity, accessibility from sandboxed applications like Safari, large number of message handlers, and potential for elevated privileges.\n\nHe outlines two options for creating a fuzzing harness: interprocess fuzzing (calling the `mach_msg` API) and a direct harness (loading and calling the Mach message handlers directly). He opted for the direct harness due to the advantage of easier code coverage collection within the same process space, despite the potential for increased false positives.\n\nThe article details the process of locating the Mach message handler within the CoreAudio framework, highlighting the use of the Mach Interface Generator (MIG) and subsystems. He successfully identified the `_HALB_MIGServer_server` function as the MIG server function responsible for parsing incoming Mach messages and directing them to the appropriate handler based on the `msgh_id` parameter. The article concludes by noting that several dozen message handlers were accessible from the MIG subsystem and are easily identifiable by their `__X` prefix.\n",
    "chinese_title": "突破音障第一部分：使用 Mach 消息模糊测试 CoreAudio",
    "chinese_summary": "谷歌Project Zero高级安全工程师Dillon Franke详细介绍了其利用Mach IPC消息作为攻击向量，在MacOS中寻找和利用沙盒逃逸的探索。他采用了“知识驱动的模糊测试”方法，结合自动化模糊测试和手动逆向工程，以coreaudiod系统守护进程为目标。\n\nFranke解释了Mach消息作为MacOS中最底层的IPC组件的概念，以及它们作为从沙盒进程到非限制进程的桥梁的潜力。他选择coreaudiod及其com.apple.audio.audiohald服务是因为其复杂性、可从Safari等沙盒应用程序访问、大量消息处理程序以及获得提升权限的潜力。\n\n他概述了创建模糊测试框架的两种选择：进程间模糊测试（调用`mach_msg` API）和直接框架（直接加载和调用Mach消息处理程序）。他选择了直接框架，因为它具有在同一进程空间内更容易收集代码覆盖率的优势，尽管存在增加误报的可能性。\n\n文章详细介绍了在CoreAudio框架中定位Mach消息处理程序的过程，重点介绍了Mach接口生成器（MIG）和子系统的使用。他成功地将`_HALB_MIGServer_server`函数识别为负责解析传入的Mach消息并根据`msgh_id`参数将其定向到适当处理程序的MIG服务器函数。文章最后指出，数十个消息处理程序可以从MIG子系统访问，并且可以通过其`__X`前缀轻松识别。"
  },
  {
    "id": "44028435",
    "title": "How scrolling becomes a religious act",
    "url": "https://etymology.substack.com/p/youre-literally-worshipping-your",
    "summary": "Unable to access the article link.\n",
    "chinese_title": "滑动如何变成一种宗教行为",
    "chinese_summary": "无法访问文章链接。"
  },
  {
    "id": "44012538",
    "title": "Publisher: The Malloy Semantic Model Server",
    "url": "https://github.com/malloydata/publisher",
    "summary": "Publisher is an open-source semantic model server for the Malloy data language. Malloy allows you to build rich semantic data models – defining the meaning, relationships, and context behind your datas. Publisher exposes these models through an API, enabling applications, AI agents, and users to query data consistently using business terms, not raw SQL. This solves the problem of inconsistent data interpretation across different tools and applications.\n\nPublisher comprises three main components: the **Publisher Server**, the **Publisher SDK**, and the **Publisher App**. The server manages Malloy packages, compiles Malloy queries to SQL, and exposes REST and MCP APIs. The SDK provides reusable React components for building user interfaces, while the App is a reference implementation demonstrating how to use the SDK. The MCP interface allows AI applications to query the data in a semantically consistent way.\n\nMalloy packages are structured as directories containing `.malloy` files (data models and queries), optional `.malloynb` files (Malloy Notebooks), and a `publisher.json` manifest. Server configuration uses a two-tiered approach with `publisher.config.json` (server-level projects) and `publisher.connections.json` (project-level database connections) for environment separation.\n\nThe document also provides instructions for building and running Publisher locally, including setting up Git submodules, installing dependencies, configuring GCP credentials for BigQuery samples, and upgrading Malloy dependencies.\n\nFuture features include an enhanced developer mode, integrated ad hoc analysis UI, scheduled transform pipelines, and a SQL API.\n",
    "chinese_title": "发布者：马洛伊语义模型服务器",
    "chinese_summary": "Publisher：Malloy数据语言的开源语义模型服务器。Malloy 允许您构建丰富的语义数据模型——定义数据背后的含义、关系和上下文。Publisher 通过 API 公开这些模型，使应用程序、AI 代理和用户能够使用业务术语（而非原始 SQL）一致地查询数据。这解决了不同工具和应用程序之间数据解释不一致的问题。\n\nPublisher 包含三个主要组件：**Publisher 服务器**、**Publisher SDK** 和 **Publisher 应用**。服务器管理 Malloy 包，将 Malloy 查询编译为 SQL，并公开 REST 和 MCP API。SDK 提供可重用的 React 组件，用于构建用户界面，而 App 是演示如何使用 SDK 的参考实现。MCP 接口允许 AI 应用程序以语义一致的方式查询数据。\n\nMalloy 包的结构为包含 `.malloy` 文件（数据模型和查询）、可选的 `.malloynb` 文件（Malloy Notebooks）和一个 `publisher.json` 清单的目录。服务器配置使用两层方法，分别为 `publisher.config.json`（服务器级别项目）和 `publisher.connections.json`（项目级别数据库连接），以实现环境分离。\n\n本文档还提供了在本地构建和运行 Publisher 的说明，包括设置 Git 子模块、安装依赖项、配置用于 BigQuery 示例的 GCP 凭据以及升级 Malloy 依赖项。\n\n未来的功能包括增强的开发者模式、集成的即席分析 UI、计划的转换管道和 SQL API。"
  },
  {
    "id": "44020315",
    "title": "Paper Mechanisms",
    "url": "https://cutfoldtemplates.com",
    "summary": "\"Paper Mechanisms\" is a collection showcasing various paper-engineered structures, folds, and mechanisms, demonstrating the diverse possibilities of paper as a medium for creating moving art, interactive designs, and functional prototypes. The collection includes:\n\n*   **Flexagons & Hexaflexagons:** These reveal looping frames through bending, twisting, or rotating, ideal for storytelling, information display, or artistic expression.\n*   **Auxetic Metamaterials:** Examples like a collapsible tube and spring-like structures demonstrate materials with a negative Poisson's ratio, expanding when stretched.\n*   **Miura-ori Fold:** A folding method for compacting flat surfaces, like solar panels, that allows for easy deployment. Its \"programmable\" nature is highlighted.\n*   **Bistable Mechanisms:** A paper \"switch\" that snaps between two stable states.\n*   **Origami Flashers:** Collapsible and deployable structures, used in applications like solar arrays.\n*   **Mechanical Adaptations:** Includes a rotating cam with arm and structures converting linear to rotary movement.\n*   **Reveals:** Such as the Two-Blind Reveal and 360° Rotary Reveal, create dissolving effects to reveal hidden images.\n*   **Optical Illusions:** These showcase structures that produce visual effects, potentially derived from the Bauhaus.\n*   **Functional Models:** Incorporates structures like a percussive object, bellows for cameras, and patterns for antenna tuning.\n*   **Sequenced Patterns:** Folding patterns are combined to create layered functionalities.\n*   **Venetian Blinds:** Structures employing blinds to reveal hidden images when a tab is pulled.\n\nMany of the projects featured are adapted from or inspired by the work of designers like David Carter, Sheila Sturrock, and the Bauhaus movement. The collection emphasizes the potential of paper engineering for artistic, educational, and practical applications.\n",
    "chinese_title": "纸质机械",
    "chinese_summary": "纸艺机械：本作品集展示了各种纸艺工程结构、折叠和机械装置，演示了纸张作为创作动态艺术、互动设计和功能原型媒介的多样可能性。作品集包括：\n\n*   **弹性折纸与六边弹性折纸：** 通过弯曲、扭转或旋转展现循环框架，适用于讲故事、信息展示或艺术表达。\n*   **负泊松比超材料：** 例如可折叠管和弹簧状结构，展示了具有负泊松比的材料，拉伸时会膨胀。\n*   **三浦折叠：** 一种用于压缩平面（如太阳能电池板）的折叠方法，便于展开。突出其“可编程”特性。\n*   **双稳态机构：** 一种在两个稳定状态之间切换的纸质“开关”。\n*   **折纸闪光器：** 可折叠和展开的结构，用于太阳能电池阵列等应用。\n*   **机械适配：** 包括带臂的旋转凸轮和将线性运动转换为旋转运动的结构。\n*   **揭示：** 例如双盲揭示和 360° 旋转揭示，产生溶解效果以显示隐藏图像。\n*   **光学错觉：** 这些展示了产生视觉效果的结构，可能源自包豪斯。\n*   **功能模型：** 包含打击乐器、相机风箱和天线调谐模式等结构。\n*   **序列模式：** 将折叠模式组合起来以创建分层功能。\n*   **百叶窗：** 采用百叶窗的结构，拉动拉片时显示隐藏图像。\n\n许多特色项目都改编自或受到 David Carter、Sheila Sturrock 和包豪斯运动等设计师作品的启发。本作品集强调了纸艺工程在艺术、教育和实际应用方面的潜力。"
  },
  {
    "id": "44025324",
    "title": "Living beings emit a faint light that extinguishes upon death, study",
    "url": "https://phys.org/news/2025-05-emit-faint-extinguishes-death.html",
    "summary": "This May 17, 2025, article from Phys.org reports on a study published in *The Journal of Physical Chemistry Letters* which found that living beings emit a faint light, known as ultraweak photon emission (UPE), that diminishes upon death in animals. Researchers at the University of Calgary linked UPE to vitality, observing significantly higher UPE intensity in live mice compared to recently deceased ones. In plants, UPE varied depending on exposure to stress factors like temperature changes, injury, and chemical treatments.\n\nUPE, caused by reactive oxygen species (ROS) produced during cellular metabolism, is a spontaneous release of extremely low-intensity light invisible to the human eye. When organisms experience stress, ROS production increases, leading to electron excitation and UPE.\n\nThe researchers used advanced imaging techniques with ultradark enclosures and EMCCD/CCD cameras to compare UPE in living versus dead animals and to observe the effects of stress on plants. They found that UPE in euthanized mice was nearly extinguished compared to live mice. In plants, increased temperature and injuries led to higher UPE intensity, with injured sites showing brighter emissions that changed with chemical treatment.\n\nThe study concludes that UPE serves as a sensitive indicator of vitality in animals and stress responses in plants. The researchers suggest that UPE imaging has the potential to become a non-invasive tool for basic biological research and clinical diagnostics.\n",
    "chinese_title": "生命体发出微弱光芒，死后熄灭，研究表明",
    "chinese_summary": "2025年5月17日Phys.org发布的文章报道了一项发表在《物理化学快报》上的研究，该研究发现生物体发出的微弱光芒，即超弱光子发射（UPE），会在动物死亡后减弱。卡尔加里大学的研究人员将UPE与活力联系起来，观察到活体小鼠的UPE强度明显高于刚死亡的小鼠。在植物中，UPE根据暴露于温度变化、损伤和化学处理等压力因素而变化。\n\nUPE是由细胞代谢过程中产生的活性氧（ROS）引起的，是一种人眼无法看到的极低强度光的自发释放。当生物体承受压力时，ROS的产生会增加，导致电子激发和UPE。\n\n研究人员使用先进的成像技术，包括超暗外壳和EMCCD/CCD相机，来比较活体和死亡动物的UPE，并观察压力对植物的影响。他们发现，与活体小鼠相比，安乐死小鼠的UPE几乎消失。在植物中，温度升高和损伤导致UPE强度增加，受伤部位显示出更亮的发射，并随着化学处理而变化。\n\n该研究得出结论，UPE可以作为动物活力的敏感指标和植物应激反应的敏感指标。研究人员认为，UPE成像有潜力成为基础生物学研究和临床诊断的非侵入性工具。"
  },
  {
    "id": "43987367",
    "title": "Show HN: Turn any workflow diagram into compilable, running and stateful code",
    "url": "https://workflows.diagrid.io/",
    "summary": "This \"Show HN\" post introduces Workflow Composer, a tool that converts workflow diagrams into compilable, running, and stateful code using Dapr workflows. The core proposition is simplifying the development of durable applications by allowing users to visually design their workflows and then automatically generate the necessary code. Instead of manually writing complex code for state management, distributed execution, and fault tolerance, developers can focus on the logic of the workflow and let Workflow Composer handle the underlying infrastructure. The post highlights that the solution is built on open-source technologies and mentions access to documentation, a Discord community, Dapr resources, and Terms of Use. Essentially, it aims to lower the barrier to entry for building sophisticated, durable applications by offering a visual, code-generating approach.\n",
    "chinese_title": "展示HN：将任何工作流程图转换为可编译、可运行且有状态的代码",
    "chinese_summary": "此“Show HN”帖子介绍 Workflow Composer，该工具可将工作流图转换为可编译、可运行且有状态的代码，底层基于 Dapr 工作流。其核心主张是通过允许用户可视化地设计工作流，然后自动生成必要的代码，来简化持久化应用的开发。开发者无需手动编写复杂的代码来管理状态、分布式执行和容错，而是可以专注于工作流的逻辑，并让 Workflow Composer 处理底层基础设施。该帖子强调，该解决方案基于开源技术构建，并提及了文档、Discord 社区、Dapr 资源以及使用条款的访问方式。本质上，它旨在通过提供一种可视化的、代码生成的方法，来降低构建复杂持久化应用的门槛。"
  },
  {
    "id": "44021191",
    "title": "The RISC OS GUI",
    "url": "https://telcontar.net/Misc/GUI/RISCOS/",
    "summary": "This article explores the unique features of the RISC OS 3.11 graphical user interface from Acorn Computers, released in 1992. It emphasizes the system's innovative and often unconventional approach to common GUI elements, positioning it as a system worth learning from even today.\n\nThe RISC OS desktop is comprised of the Pinboard and the Icon Bar, where the Icon Bar displays active tasks and file systems. RISC OS employs a three-button mouse with \"Select,\" \"Menu,\" and \"Adjust\" functions. \"Adjust\" acts as a modifier, offering alternative actions to \"Select\" and reducing reliance on keyboard modifiers.\n\nA key feature is the pop-up menu system accessed by the middle mouse button. These menus are highly contextual and often integrate dialog boxes directly as menu items, streamlining user interaction and minimizing mouse clicks. Menu items can include custom value inputs and text input fields directly within the menu structure. Dialogs can also be complete submenus, offering instant changes without separate confirmation.\n\nWindows in RISC OS have unique management. They can be minimized in place by shift-clicking the close box, creating icons on the pinboard, but there is limited window management beyond pushing a window to the back of the stack. Focus is also handled unusually: clicking on a window does not necessarily bring it to the front or give it keyboard focus. Keyboard focus, indicated by a yellow title bar, is independent of window stacking order and controlled by specific areas within a window, not by the window itself. The article emphasizes the unusual behavior and limitations of this system.\n",
    "chinese_title": "RISC OS 图形用户界面",
    "chinese_summary": "本文探讨了Acorn Computers公司于1992年发布的RISC OS 3.11图形用户界面的独特之处。它强调了该系统在常见GUI元素上的创新且往往非常规的方法，使其即使在今天也值得学习。\n\nRISC OS桌面由Pinboard（钉板）和Icon Bar（图标栏）组成，其中Icon Bar显示活动任务和文件系统。RISC OS采用带有“Select”（选择）、“Menu”（菜单）和“Adjust”（调整）功能的三键鼠标。“Adjust”充当修饰键，为“Select”提供替代操作，从而减少对键盘修饰键的依赖。\n\n一个关键特性是由鼠标中键访问的弹出菜单系统。这些菜单具有高度的上下文相关性，并且通常将对话框直接集成为菜单项，从而简化用户交互并最大程度地减少鼠标点击。菜单项可以直接在菜单结构中包含自定义值输入和文本输入字段。对话框也可以是完整的子菜单，无需单独确认即可提供即时更改。\n\nRISC OS中的窗口具有独特的管理方式。它们可以通过按住Shift键单击关闭框来就地最小化，从而在钉板上创建图标，但除了将窗口推到堆栈后面之外，窗口管理功能有限。焦点处理也很不寻常：单击窗口不一定会将其置于最前面或赋予其键盘焦点。键盘焦点由黄色标题栏指示，独立于窗口堆叠顺序，并由窗口内的特定区域控制，而不是由窗口本身控制。本文强调了该系统的不寻常行为和局限性。"
  },
  {
    "id": "44015872",
    "title": "Dead Stars Don’t Radiate",
    "url": "https://johncarlosbaez.wordpress.com/2025/05/17/dead-stars-dont-radiate-and-shrink/",
    "summary": "This article critiques a recent claim by Wondrak, van Suijlekom, and Falcke that any massive object, including dead stars, emits Hawking radiation, leading to their eventual disintegration and a sooner-than-expected end to the universe. The author argues that this claim, despite being published in a reputable physics journal, is incorrect and has been refuted by other experts due to its reliance on a crude approximation.\n\nThe author emphasizes that established quantum field theory, dating back to the 1970s, demonstrates that a static mass in a static spacetime *does not* create particle-antiparticle pairs, thereby negating the proposed radiation mechanism. This stability is contingent on the existence of a timelike Killing field.\n\nThe author criticizes the science journalism community for uncritically reporting this sensational claim based on press releases, leading to the spread of misinformation. He directs readers to established research, like Ashtekar and Magnon's work and Wald's textbook, to understand the correct framework.\n\nThe comments following the article highlight journalist incentives for sensationalism, the importance of expert consultation, and a discussion on the subtleties of applying these concepts, including the differences between static spacetime with no radiation (dead stars) versus the approximations involved when analyzing black holes. The baryon number violation is also discussed, as a consequence of the falsified claim.\n",
    "chinese_title": "死亡的星星不发光",
    "chinese_summary": "本文批判了 Wondrak、van Suijlekom 和 Falcke 最近提出的一个论断，即任何大质量物体，包括死亡恒星，都会发射霍金辐射，导致它们的最终解体以及宇宙比预期更早的终结。作者认为，尽管该论断发表在一家声誉良好的物理学期刊上，但它是错误的，并且由于其依赖于粗略的近似，已被其他专家驳斥。\n\n作者强调，早在 20 世纪 70 年代就已确立的量子场论表明，静态时空中一个静态质量*不会*产生正反粒子对，从而否定了所提出的辐射机制。这种稳定性取决于类时 Killing 场的存在。\n\n作者批评科学新闻界不加批判地根据新闻稿报道这一耸人听闻的论断，导致了错误信息的传播。他引导读者阅读已有的研究，如 Ashtekar 和 Magnon 的工作以及 Wald 的教科书，以了解正确的框架。\n\n文章后面的评论突出了记者追求轰动效应的动机、专家咨询的重要性，以及关于应用这些概念的细微差别的讨论，包括静态时空中没有辐射（死亡恒星）与分析黑洞时所涉及的近似之间的差异。 质子数不守恒也被讨论，作为被证伪的论断的后果。"
  }
]