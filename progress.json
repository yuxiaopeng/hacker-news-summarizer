[
  {
    "id": "43630388",
    "title": "Hardening the Firefox Front End with Content Security Policies",
    "url": "https://attackanddefense.dev/2025/04/09/hardening-the-firefox-frontend-with-content-security-policies.html",
<<<<<<< Updated upstream
    "summary": "This article details efforts to harden the Firefox user interface against injection attacks, particularly Cross-Site Scripting (XSS). Firefox's UI, built using web technologies like HTML, CSS, and JavaScript, is susceptible to XSS, where malicious code can be injected and executed. The core strategy involves implementing Content Security Policies (CSPs) to restrict script execution.\n\nThe primary focus is on `browser.xhtml`, the main UI document containing elements like the address bar and tabs. The team removed over 600 inline event handlers from `browser.xhtml`, replacing them with standard event listeners defined in external JavaScript files. This eliminates a common attack vector.\n\nThe article highlights the process of replacing inline event handlers, noting important considerations like `event.preventDefault()` and the behavior of `this`.\n\nFuture plans include extending CSPs to other UI components, such as the \"About Firefox\" dialog, with more restrictive policies. The ultimate goal is to block all dynamic code execution within Firefox, further enhancing security and resilience against XSS attacks. The work significantly improves Firefox's security posture and aims to break existing exploit chains. The changes will be included in Firefox 138.\n",
    "chinese_title": "使用内容安全策略强化 Firefox 前端",
    "chinese_summary": "需求：\n1. 仅提供一个准确的中文翻译\n2. 直接输出翻译，无需解释或多重选项\n3. 保持原文的含义和风格\n4. 如果是标题，保持简洁明了\n\n本文详细介绍了针对 Firefox 用户界面进行加固以抵御注入攻击，尤其是跨站脚本攻击 (XSS) 的工作。Firefox 的 UI 使用 HTML、CSS 和 JavaScript 等 Web 技术构建，容易受到 XSS 攻击，恶意代码可以被注入和执行。核心策略涉及实施内容安全策略 (CSP) 以限制脚本执行。\n\n主要关注点是 `browser.xhtml`，这是包含地址栏和标签等元素的主要 UI 文档。团队从 `browser.xhtml` 中移除了超过 600 个内联事件处理程序，将它们替换为在外部 JavaScript 文件中定义的标准事件监听器。这消除了一个常见的攻击途径。\n\n本文重点介绍了替换内联事件处理程序的过程，并提到了重要的考虑因素，例如 `event.preventDefault()` 和 `this` 的行为。\n\n未来的计划包括将 CSP 扩展到其他 UI 组件，例如“关于 Firefox”对话框，并采用更严格的策略。最终目标是阻止 Firefox 内的所有动态代码执行，进一步增强安全性并提高对 XSS 攻击的抵抗力。这项工作显著提高了 Firefox 的安全态势，旨在打破现有的漏洞利用链。这些更改将包含在 Firefox 138 中。"
=======
    "summary": "This article discusses Firefox's efforts to harden its front-end against injection attacks, particularly Cross-Site Scripting (XSS) attacks. The Firefox UI, built with web technologies like HTML, CSS, and JavaScript, is vulnerable to these attacks, just like regular web applications. The main focus is on mitigating XSS by leveraging Content Security Policies (CSPs).\n\nThe primary target of this security initiative is `browser.xhtml`, the core UI file containing elements like the address bar and tab strip. The team has been systematically removing inline event handlers, a common attack vector, and replacing them with event listeners defined in separate JavaScript files. Over 600 inline event handlers have been rewritten across 50 bugs.\n\nThe article highlights the process of replacing inline event handlers and the considerations for developers.  It also outlines the progress made and the outlook for future hardening.  Beyond removing inline handlers, the team is implementing more restrictive CSPs, such as `default-src chrome: resource:;`, which limits the resources Firefox can load. The ultimate goal is to eliminate dynamic code execution entirely within Firefox to enhance security and resilience against XSS attacks.  These changes are planned for Firefox 138. By removing these event handlers, the team believes it has significantly raised the bar for attackers attempting to exploit Firefox.\n",
    "chinese_title": "使用内容安全策略强化 Firefox 前端",
    "chinese_summary": "本文讨论了 Firefox 针对注入攻击，特别是跨站脚本攻击 (XSS) 的前端强化工作。 Firefox 用户界面使用 HTML、CSS 和 JavaScript 等 Web 技术构建，与常规 Web 应用程序一样，容易受到这些攻击。 重点是利用内容安全策略 (CSP) 减轻 XSS 攻击。\n\n此安全计划的主要目标是 `browser.xhtml`，这是包含地址栏和标签栏等元素的核心 UI 文件。 团队一直在系统地删除内联事件处理程序，这是一种常见的攻击媒介，并用在单独的 JavaScript 文件中定义的事件监听器替换它们。 已经通过 50 个错误修复了 600 多个内联事件处理程序。\n\n文章重点介绍了替换内联事件处理程序的过程以及开发人员的注意事项。 它还概述了已取得的进展以及未来的强化前景。 除了删除内联处理程序之外，团队还在实施更严格的 CSP，例如 `default-src chrome: resource:;`，这限制了 Firefox 可以加载的资源。 最终目标是在 Firefox 中完全消除动态代码执行，以增强安全性并提高对 XSS 攻击的抵抗力。 这些更改计划在 Firefox 138 中推出。 通过删除这些事件处理程序，该团队认为它已经显着提高了攻击者利用 Firefox 的门槛。"
>>>>>>> Stashed changes
  }
]